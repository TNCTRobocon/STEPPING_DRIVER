

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Aug 16 12:46:16 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  0110                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020D                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029C                     	;# 
   157  029C                     	;# 
   158  029D                     	;# 
   159  029E                     	;# 
   160  029F                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0314                     	;# 
   166  0315                     	;# 
   167  0315                     	;# 
   168  0316                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  0394                     	;# 
   178  0395                     	;# 
   179  0396                     	;# 
   180  0415                     	;# 
   181  0416                     	;# 
   182  0417                     	;# 
   183  041C                     	;# 
   184  041D                     	;# 
   185  041E                     	;# 
   186  0791                     	;# 
   187  0792                     	;# 
   188  0793                     	;# 
   189  0794                     	;# 
   190  0795                     	;# 
   191  0798                     	;# 
   192  0799                     	;# 
   193  07A0                     	;# 
   194  07A1                     	;# 
   195  07A3                     	;# 
   196  07A4                     	;# 
   197  07A6                     	;# 
   198  07A7                     	;# 
   199  07A9                     	;# 
   200  07AA                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  0110                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020D                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0291                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029C                     	;# 
   323  029D                     	;# 
   324  029E                     	;# 
   325  029F                     	;# 
   326  0311                     	;# 
   327  0311                     	;# 
   328  0312                     	;# 
   329  0313                     	;# 
   330  0314                     	;# 
   331  0315                     	;# 
   332  0315                     	;# 
   333  0316                     	;# 
   334  0318                     	;# 
   335  0318                     	;# 
   336  0319                     	;# 
   337  031A                     	;# 
   338  031C                     	;# 
   339  031C                     	;# 
   340  031D                     	;# 
   341  031E                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  0415                     	;# 
   346  0416                     	;# 
   347  0417                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  0791                     	;# 
   352  0792                     	;# 
   353  0793                     	;# 
   354  0794                     	;# 
   355  0795                     	;# 
   356  0798                     	;# 
   357  0799                     	;# 
   358  07A0                     	;# 
   359  07A1                     	;# 
   360  07A3                     	;# 
   361  07A4                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A9                     	;# 
   365  07AA                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  0110                     	;# 
   429  0111                     	;# 
   430  0112                     	;# 
   431  0113                     	;# 
   432  0114                     	;# 
   433  0115                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  0118                     	;# 
   437  0119                     	;# 
   438  011A                     	;# 
   439  011B                     	;# 
   440  011D                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0194                     	;# 
   450  0195                     	;# 
   451  0196                     	;# 
   452  0199                     	;# 
   453  019A                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019E                     	;# 
   462  019F                     	;# 
   463  020D                     	;# 
   464  0210                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0217                     	;# 
   473  0291                     	;# 
   474  0291                     	;# 
   475  0292                     	;# 
   476  0293                     	;# 
   477  0294                     	;# 
   478  0295                     	;# 
   479  0295                     	;# 
   480  0296                     	;# 
   481  0298                     	;# 
   482  0298                     	;# 
   483  0299                     	;# 
   484  029A                     	;# 
   485  029B                     	;# 
   486  029C                     	;# 
   487  029C                     	;# 
   488  029D                     	;# 
   489  029E                     	;# 
   490  029F                     	;# 
   491  0311                     	;# 
   492  0311                     	;# 
   493  0312                     	;# 
   494  0313                     	;# 
   495  0314                     	;# 
   496  0315                     	;# 
   497  0315                     	;# 
   498  0316                     	;# 
   499  0318                     	;# 
   500  0318                     	;# 
   501  0319                     	;# 
   502  031A                     	;# 
   503  031C                     	;# 
   504  031C                     	;# 
   505  031D                     	;# 
   506  031E                     	;# 
   507  0394                     	;# 
   508  0395                     	;# 
   509  0396                     	;# 
   510  0415                     	;# 
   511  0416                     	;# 
   512  0417                     	;# 
   513  041C                     	;# 
   514  041D                     	;# 
   515  041E                     	;# 
   516  0791                     	;# 
   517  0792                     	;# 
   518  0793                     	;# 
   519  0794                     	;# 
   520  0795                     	;# 
   521  0798                     	;# 
   522  0799                     	;# 
   523  07A0                     	;# 
   524  07A1                     	;# 
   525  07A3                     	;# 
   526  07A4                     	;# 
   527  07A6                     	;# 
   528  07A7                     	;# 
   529  07A9                     	;# 
   530  07AA                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  0090                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0093                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  0110                     	;# 
   594  0111                     	;# 
   595  0112                     	;# 
   596  0113                     	;# 
   597  0114                     	;# 
   598  0115                     	;# 
   599  0116                     	;# 
   600  0117                     	;# 
   601  0118                     	;# 
   602  0119                     	;# 
   603  011A                     	;# 
   604  011B                     	;# 
   605  011D                     	;# 
   606  018C                     	;# 
   607  018D                     	;# 
   608  0191                     	;# 
   609  0191                     	;# 
   610  0192                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0199                     	;# 
   618  019A                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019C                     	;# 
   624  019C                     	;# 
   625  019D                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  020D                     	;# 
   629  0210                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0217                     	;# 
   638  0291                     	;# 
   639  0291                     	;# 
   640  0292                     	;# 
   641  0293                     	;# 
   642  0294                     	;# 
   643  0295                     	;# 
   644  0295                     	;# 
   645  0296                     	;# 
   646  0298                     	;# 
   647  0298                     	;# 
   648  0299                     	;# 
   649  029A                     	;# 
   650  029B                     	;# 
   651  029C                     	;# 
   652  029C                     	;# 
   653  029D                     	;# 
   654  029E                     	;# 
   655  029F                     	;# 
   656  0311                     	;# 
   657  0311                     	;# 
   658  0312                     	;# 
   659  0313                     	;# 
   660  0314                     	;# 
   661  0315                     	;# 
   662  0315                     	;# 
   663  0316                     	;# 
   664  0318                     	;# 
   665  0318                     	;# 
   666  0319                     	;# 
   667  031A                     	;# 
   668  031C                     	;# 
   669  031C                     	;# 
   670  031D                     	;# 
   671  031E                     	;# 
   672  0394                     	;# 
   673  0395                     	;# 
   674  0396                     	;# 
   675  0415                     	;# 
   676  0416                     	;# 
   677  0417                     	;# 
   678  041C                     	;# 
   679  041D                     	;# 
   680  041E                     	;# 
   681  0791                     	;# 
   682  0792                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0798                     	;# 
   687  0799                     	;# 
   688  07A0                     	;# 
   689  07A1                     	;# 
   690  07A3                     	;# 
   691  07A4                     	;# 
   692  07A6                     	;# 
   693  07A7                     	;# 
   694  07A9                     	;# 
   695  07AA                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  000E                     	;# 
   722  0010                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0013                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  008E                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010E                     	;# 
   758  0110                     	;# 
   759  0111                     	;# 
   760  0112                     	;# 
   761  0113                     	;# 
   762  0114                     	;# 
   763  0115                     	;# 
   764  0116                     	;# 
   765  0117                     	;# 
   766  0118                     	;# 
   767  0119                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011D                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020D                     	;# 
   794  0210                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0217                     	;# 
   803  0291                     	;# 
   804  0291                     	;# 
   805  0292                     	;# 
   806  0293                     	;# 
   807  0294                     	;# 
   808  0295                     	;# 
   809  0295                     	;# 
   810  0296                     	;# 
   811  0298                     	;# 
   812  0298                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029B                     	;# 
   816  029C                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  029E                     	;# 
   820  029F                     	;# 
   821  0311                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0315                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0318                     	;# 
   830  0318                     	;# 
   831  0319                     	;# 
   832  031A                     	;# 
   833  031C                     	;# 
   834  031C                     	;# 
   835  031D                     	;# 
   836  031E                     	;# 
   837  0394                     	;# 
   838  0395                     	;# 
   839  0396                     	;# 
   840  0415                     	;# 
   841  0416                     	;# 
   842  0417                     	;# 
   843  041C                     	;# 
   844  041D                     	;# 
   845  041E                     	;# 
   846  0791                     	;# 
   847  0792                     	;# 
   848  0793                     	;# 
   849  0794                     	;# 
   850  0795                     	;# 
   851  0798                     	;# 
   852  0799                     	;# 
   853  07A0                     	;# 
   854  07A1                     	;# 
   855  07A3                     	;# 
   856  07A4                     	;# 
   857  07A6                     	;# 
   858  07A7                     	;# 
   859  07A9                     	;# 
   860  07AA                     	;# 
   861  0FE4                     	;# 
   862  0FE5                     	;# 
   863  0FE6                     	;# 
   864  0FE7                     	;# 
   865  0FE8                     	;# 
   866  0FE9                     	;# 
   867  0FEA                     	;# 
   868  0FEB                     	;# 
   869  0FED                     	;# 
   870  0FEE                     	;# 
   871  0FEF                     	;# 
   872                           
   873                           	psect	idataBANK2
   874  0753                     __pidataBANK2:	
   875                           
   876                           ;initializer for _step_pattern_left
   877  0753  3400               	retlw	0
   878  0754  3400               	retlw	0
   879  0755  3400               	retlw	0
   880  0756  3400               	retlw	0
   881  0757  3400               	retlw	0
   882  0758  3400               	retlw	0
   883  0759  3401               	retlw	1
   884  075A  3400               	retlw	0
   885  075B  3400               	retlw	0
   886  075C  3400               	retlw	0
   887  075D  3401               	retlw	1
   888  075E  3400               	retlw	0
   889  075F  3400               	retlw	0
   890  0760  3400               	retlw	0
   891  0761  3400               	retlw	0
   892  0762  3400               	retlw	0
   893  0763  3400               	retlw	0
   894  0764  3400               	retlw	0
   895  0765  3400               	retlw	0
   896  0766  3400               	retlw	0
   897  0767  3401               	retlw	1
   898  0768  3400               	retlw	0
   899  0769  3400               	retlw	0
   900  076A  3400               	retlw	0
   901  076B  3401               	retlw	1
   902  076C  3400               	retlw	0
   903  076D  3400               	retlw	0
   904  076E  3400               	retlw	0
   905  076F  3400               	retlw	0
   906  0770  3400               	retlw	0
   907  0771  3400               	retlw	0
   908  0772  3400               	retlw	0
   909                           
   910                           ;initializer for _step_pattern_right
   911  0773  3400               	retlw	0
   912  0774  3400               	retlw	0
   913  0775  3401               	retlw	1
   914  0776  3400               	retlw	0
   915  0777  3400               	retlw	0
   916  0778  3400               	retlw	0
   917  0779  3400               	retlw	0
   918  077A  3400               	retlw	0
   919  077B  3400               	retlw	0
   920  077C  3400               	retlw	0
   921  077D  3400               	retlw	0
   922  077E  3400               	retlw	0
   923  077F  3400               	retlw	0
   924  0780  3400               	retlw	0
   925  0781  3401               	retlw	1
   926  0782  3400               	retlw	0
   927  0783  3401               	retlw	1
   928  0784  3400               	retlw	0
   929  0785  3400               	retlw	0
   930  0786  3400               	retlw	0
   931  0787  3400               	retlw	0
   932  0788  3400               	retlw	0
   933  0789  3400               	retlw	0
   934  078A  3400               	retlw	0
   935  078B  3400               	retlw	0
   936  078C  3400               	retlw	0
   937  078D  3400               	retlw	0
   938  078E  3400               	retlw	0
   939  078F  3401               	retlw	1
   940  0790  3400               	retlw	0
   941  0791  3400               	retlw	0
   942  0792  3400               	retlw	0
   943                           
   944                           	psect	stringtext
   945  1000                     __pstringtext:	
   946  1000                     main@tokens:	
   947  1000  3420               	retlw	32
   948  1001  342C               	retlw	44
   949  1002  3400               	retlw	0
   950  1003                     __end_ofmain@tokens:	
   951  005F                     _GIE	set	95
   952  005E                     _PEIE	set	94
   953  0060                     _RA0	set	96
   954  0061                     _RA1	set	97
   955  0062                     _RA2	set	98
   956  0063                     _RA3	set	99
   957  0064                     _RA4	set	100
   958  0065                     _RA5	set	101
   959  0068                     _RB0	set	104
   960  0069                     _RB1	set	105
   961  006A                     _RB2	set	106
   962  006B                     _RB3	set	107
   963  0071                     _RC1	set	113
   964  0072                     _RC2	set	114
   965  008D                     _RCIF	set	141
   966  005A                     _TMR0IF	set	90
   967  008C                     _TXIF	set	140
   968  0099                     _OSCCON	set	153
   969  008C                     _TRISA	set	140
   970  008D                     _TRISB	set	141
   971  008E                     _TRISC	set	142
   972  04D6                     _PLLR	set	1238
   973  048D                     _RCIE	set	1165
   974  048C                     _TXIE	set	1164
   975  018C                     _ANSELA	set	396
   976  018D                     _ANSELB	set	397
   977  0199                     _RCREG	set	409
   978  019D                     _RCSTA	set	413
   979  019B                     _SPBRG	set	411
   980  019A                     _TXREG	set	410
   981  019E                     _TXSTA	set	414
   982  1003                     STR_2:	
   983  1003  3472               	retlw	114	;'r'
   984  1004  3469               	retlw	105	;'i'
   985  1005  3467               	retlw	103	;'g'
   986  1006  3468               	retlw	104	;'h'
   987  1007  3474               	retlw	116	;'t'
   988  1008  3400               	retlw	0
   989  1009                     STR_6:	
   990  1009  3465               	retlw	101	;'e'
   991  100A  3463               	retlw	99	;'c'
   992  100B  3468               	retlw	104	;'h'
   993  100C  346F               	retlw	111	;'o'
   994  100D  3400               	retlw	0
   995  100E                     STR_4:	
   996  100E  346C               	retlw	108	;'l'
   997  100F  3465               	retlw	101	;'e'
   998  1010  3466               	retlw	102	;'f'
   999  1011  3474               	retlw	116	;'t'
  1000  1012  3400               	retlw	0
  1001  1013                     STR_1:	
  1002  1013  3473               	retlw	115	;'s'
  1003  1014  3465               	retlw	101	;'e'
  1004  1015  346C               	retlw	108	;'l'
  1005  1016  3400               	retlw	0
  1006  100E                     
  1007                           ; #config settings
  1008  0000                     
  1009                           	psect	cinit
  1010  0017                     start_initialization:	
  1011  0017                     __initialization:	
  1012                           
  1013                           ; Clear objects allocated to COMMON
  1014  0017  01F8               	clrf	__pbssCOMMON& (0+127)
  1015  0018  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1016  0019  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1017                           
  1018                           ; Clear objects allocated to BANK0
  1019  001A  01E6               	clrf	__pbssBANK0& (0+127)
  1020  001B  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1021  001C  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1022  001D  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1023  001E  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1024  001F  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  1025                           
  1026                           ; Clear objects allocated to BANK3
  1027  0020  30A0               	movlw	low __pbssBANK3
  1028  0021  0084               	movwf	4
  1029  0022  3001               	movlw	high __pbssBANK3
  1030  0023  0085               	movwf	5
  1031  0024  3040               	movlw	64
  1032  0025  318E  2602  3180   	fcall	clear_ram0
  1033                           
  1034                           ; Initialize objects allocated to BANK2
  1035  0028  3053               	movlw	low __pidataBANK2
  1036  0029  0084               	movwf	4
  1037  002A  3087               	movlw	(high __pidataBANK2)| (0+128)
  1038  002B  0085               	movwf	5
  1039  002C  3020               	movlw	low __pdataBANK2
  1040  002D  0086               	movwf	6
  1041  002E  3001               	movlw	high __pdataBANK2
  1042  002F  0087               	movwf	7
  1043  0030  3040               	movlw	64
  1044  0031  318D  25FC         	fcall	init_ram
  1045  0033                     end_of_initialization:	
  1046                           ;End of C runtime variable initialization code
  1047                           
  1048  0033                     __end_of__initialization:	
  1049  0033  0020               	movlb	0
  1050  0034  3180  2836         	ljmp	_main	;jump to C main() function
  1051                           
  1052                           	psect	bssCOMMON
  1053  0078                     __pbssCOMMON:	
  1054  0078                     _rx_in:	
  1055  0078                     	ds	1
  1056  0079                     _rx_out:	
  1057  0079                     	ds	1
  1058  007A                     _tx_out:	
  1059  007A                     	ds	1
  1060                           
  1061                           	psect	bssBANK0
  1062  0066                     __pbssBANK0:	
  1063  0066                     _errno:	
  1064  0066                     	ds	2
  1065  0068                     _rx_used:	
  1066  0068                     	ds	1
  1067  0069                     _tx_in:	
  1068  0069                     	ds	1
  1069  006A                     _tx_used:	
  1070  006A                     	ds	1
  1071  006B                     strtok@sp:	
  1072  006B                     	ds	1
  1073                           
  1074                           	psect	dataBANK2
  1075  0120                     __pdataBANK2:	
  1076  0120                     _step_pattern_left:	
  1077  0120                     	ds	32
  1078  0140                     _step_pattern_right:	
  1079  0140                     	ds	32
  1080                           
  1081                           	psect	bssBANK3
  1082  01A0                     __pbssBANK3:	
  1083  01A0                     _txbuf:	
  1084  01A0                     	ds	32
  1085  01C0                     _rxbuf:	
  1086  01C0                     	ds	32
  1087                           
  1088                           	psect	clrtext
  1089  0E02                     clear_ram0:	
  1090                           ;	Called with FSR0 containing the base address, and
  1091                           ;	WREG with the size to clear
  1092                           
  1093  0E02  0064               	clrwdt	;clear the watchdog before getting into this loop
  1094  0E03                     clrloop0:	
  1095  0E03  0180               	clrf	0	;clear RAM location pointed to by FSR
  1096  0E04  3101               	addfsr 0,1
  1097  0E05  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1098  0E06  2E03               	goto	clrloop0	;have we reached the end yet?
  1099  0E07  3400               	retlw	0	;all done for this memory range, return
  1100                           
  1101                           	psect	inittext
  1102  0DFC                     init_ram:	
  1103  0DFC  00FE               	movwf	126
  1104  0DFD                     initloop:	
  1105  0DFD  0012               	moviw fsr0++
  1106  0DFE  001E               	movwi fsr1++
  1107  0DFF  0BFE               	decfsz	126,f
  1108  0E00  2DFD               	goto	initloop
  1109  0E01  3400               	retlw	0
  1110                           
  1111                           	psect	cstackBANK1
  1112  00A0                     __pcstackBANK1:	
  1113  00A0                     right@pluse:	
  1114  00A0                     left@pluse:	
  1115                           ; 2 bytes @ 0x0
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x0
  1119  00A0                     	ds	2
  1120  00A2                     right@k:	
  1121  00A2                     left@k:	
  1122                           ; 2 bytes @ 0x2
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x2
  1126  00A2                     	ds	2
  1127  00A4                     right@i:	
  1128  00A4                     left@i:	
  1129                           ; 2 bytes @ 0x4
  1130                           
  1131                           
  1132                           ; 2 bytes @ 0x4
  1133  00A4                     	ds	2
  1134  00A6                     ??_main:	
  1135                           
  1136                           ; 0 bytes @ 0x6
  1137  00A6                     	ds	12
  1138  00B2                     main@line:	
  1139                           
  1140                           ; 32 bytes @ 0x12
  1141  00B2                     	ds	32
  1142  00D2                     main@argv:	
  1143                           
  1144                           ; 4 bytes @ 0x32
  1145  00D2                     	ds	4
  1146  00D6                     main@address:	
  1147                           
  1148                           ; 2 bytes @ 0x36
  1149  00D6                     	ds	2
  1150  00D8                     main@len:	
  1151                           
  1152                           ; 2 bytes @ 0x38
  1153  00D8                     	ds	2
  1154  00DA                     main@mode_sel:	
  1155                           
  1156                           ; 1 bytes @ 0x3A
  1157  00DA                     	ds	1
  1158  00DB                     main@it:	
  1159                           
  1160                           ; 1 bytes @ 0x3B
  1161  00DB                     	ds	1
  1162  00DC                     main@addr:	
  1163                           
  1164                           ; 2 bytes @ 0x3C
  1165  00DC                     	ds	2
  1166  00DE                     main@i:	
  1167                           
  1168                           ; 2 bytes @ 0x3E
  1169  00DE                     	ds	2
  1170  00E0                     main@title:	
  1171                           
  1172                           ; 1 bytes @ 0x40
  1173  00E0                     	ds	1
  1174  00E1                     main@argc:	
  1175                           
  1176                           ; 2 bytes @ 0x41
  1177  00E1                     	ds	2
  1178  00E3                     main@val:	
  1179                           
  1180                           ; 1 bytes @ 0x43
  1181  00E3                     	ds	1
  1182                           
  1183                           	psect	cstackCOMMON
  1184  0070                     __pcstackCOMMON:	
  1185  0070                     ?_receive_isr:	
  1186  0070                     ??_receive_isr:	
  1187                           ; 0 bytes @ 0x0
  1188                           
  1189  0070                     ?_isdigit:	
  1190                           ; 0 bytes @ 0x0
  1191                           
  1192  0070                     ?_isr:	
  1193                           ; 1 bit 
  1194                           
  1195  0070                     ?_uart_send:	
  1196                           ; 0 bytes @ 0x0
  1197                           
  1198  0070                     ?_main:	
  1199                           ; 0 bytes @ 0x0
  1200                           
  1201  0070                     ?_uart_setup:	
  1202                           ; 0 bytes @ 0x0
  1203                           
  1204  0070                     ?_setup:	
  1205                           ; 2 bytes @ 0x0
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0x0
  1209  0070                     	ds	1
  1210  0071                     receive_isr@temp:	
  1211                           
  1212                           ; 1 bytes @ 0x1
  1213  0071                     	ds	1
  1214  0072                     ??_isr:	
  1215                           
  1216                           ; 0 bytes @ 0x2
  1217  0072                     	ds	1
  1218  0073                     ??_isdigit:	
  1219  0073                     ??_uart_send:	
  1220                           ; 0 bytes @ 0x3
  1221                           
  1222  0073                     ??___ftge:	
  1223                           ; 0 bytes @ 0x3
  1224                           
  1225  0073                     ?_memset:	
  1226                           ; 0 bytes @ 0x3
  1227                           
  1228  0073                     ?_strlen:	
  1229                           ; 1 bytes @ 0x3
  1230                           
  1231  0073                     ?_strcmp:	
  1232                           ; 2 bytes @ 0x3
  1233                           
  1234  0073                     ?_strchr:	
  1235                           ; 2 bytes @ 0x3
  1236                           
  1237  0073                     ?_find:	
  1238                           ; 2 bytes @ 0x3
  1239                           
  1240  0073                     ?___wmul:	
  1241                           ; 2 bytes @ 0x3
  1242                           
  1243  0073                     ?___ftpack:	
  1244                           ; 2 bytes @ 0x3
  1245                           
  1246  0073                     ?_frexp:	
  1247                           ; 3 bytes @ 0x3
  1248                           
  1249  0073                     uart_send@data:	
  1250                           ; 3 bytes @ 0x3
  1251                           
  1252  0073                     _isdigit$439:	
  1253                           ; 1 bytes @ 0x3
  1254                           
  1255  0073                     ___wmul@multiplier:	
  1256                           ; 1 bytes @ 0x3
  1257                           
  1258  0073                     memset@c:	
  1259                           ; 2 bytes @ 0x3
  1260                           
  1261  0073                     strcmp@s2:	
  1262                           ; 2 bytes @ 0x3
  1263                           
  1264  0073                     strchr@ptr:	
  1265                           ; 2 bytes @ 0x3
  1266                           
  1267  0073                     ___ftpack@arg:	
  1268                           ; 2 bytes @ 0x3
  1269                           
  1270  0073                     frexp@value:	
  1271                           ; 3 bytes @ 0x3
  1272                           
  1273                           
  1274                           ; 3 bytes @ 0x3
  1275  0073                     	ds	1
  1276  0074                     isdigit@c:	
  1277                           
  1278                           ; 1 bytes @ 0x4
  1279  0074                     	ds	1
  1280  0075                     ??_strcmp:	
  1281  0075                     ??_find:	
  1282                           ; 0 bytes @ 0x5
  1283                           
  1284  0075                     strlen@s:	
  1285                           ; 0 bytes @ 0x5
  1286                           
  1287  0075                     ___wmul@multiplicand:	
  1288                           ; 1 bytes @ 0x5
  1289                           
  1290  0075                     memset@n:	
  1291                           ; 2 bytes @ 0x5
  1292                           
  1293  0075                     strchr@chr:	
  1294                           ; 2 bytes @ 0x5
  1295                           
  1296                           
  1297                           ; 2 bytes @ 0x5
  1298  0075                     	ds	1
  1299  0076                     ??_uart_gets:	
  1300  0076                     ___ftpack@exp:	
  1301                           ; 0 bytes @ 0x6
  1302                           
  1303  0076                     frexp@eptr:	
  1304                           ; 1 bytes @ 0x6
  1305                           
  1306  0076                     strcmp@r:	
  1307                           ; 1 bytes @ 0x6
  1308                           
  1309  0076                     strlen@cp:	
  1310                           ; 1 bytes @ 0x6
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0x6
  1314  0076                     	ds	1
  1315  0077                     ??_memset:	
  1316  0077                     ??___wmul:	
  1317                           ; 0 bytes @ 0x7
  1318                           
  1319  0077                     ___ftpack@sign:	
  1320                           ; 0 bytes @ 0x7
  1321                           
  1322  0077                     strcmp@s1:	
  1323                           ; 1 bytes @ 0x7
  1324                           
  1325  0077                     strtok@s1:	
  1326                           ; 1 bytes @ 0x7
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0x7
  1330  0077                     	ds	1
  1331  0078                     ??_uart_setup:	
  1332  0078                     ??_setup:	
  1333                           ; 0 bytes @ 0x8
  1334                           
  1335  0078                     ??_step:	
  1336                           ; 0 bytes @ 0x8
  1337                           
  1338                           
  1339                           	psect	cstackBANK0
  1340  0020                     __pcstackBANK0:	
  1341                           ; 0 bytes @ 0x8
  1342                           
  1343  0020                     ??_strlen:	
  1344  0020                     ??___ftpack:	
  1345                           ; 0 bytes @ 0x0
  1346                           
  1347  0020                     ??_frexp:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0020                     ??_strchr:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0020                     ?___ftge:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0020                     find@tail:	
  1357                           ; 1 bit 
  1358                           
  1359  0020                     memset@p1:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0020                     ___wmul@product:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0020                     ___ftge@ff1:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368                           
  1369                           ; 3 bytes @ 0x0
  1370  0020                     	ds	1
  1371  0021                     memset@p:	
  1372  0021                     find@size:	
  1373                           ; 1 bytes @ 0x1
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x1
  1377  0021                     	ds	1
  1378  0022                     ?_atoi:	
  1379                           
  1380                           ; 2 bytes @ 0x2
  1381  0022                     	ds	1
  1382  0023                     ?_strspn:	
  1383  0023                     ?_strcspn:	
  1384                           ; 2 bytes @ 0x3
  1385                           
  1386  0023                     ?___awtoft:	
  1387                           ; 2 bytes @ 0x3
  1388                           
  1389  0023                     ?___ftadd:	
  1390                           ; 3 bytes @ 0x3
  1391                           
  1392  0023                     find@it:	
  1393                           ; 3 bytes @ 0x3
  1394                           
  1395  0023                     ___awtoft@c:	
  1396                           ; 1 bytes @ 0x3
  1397                           
  1398  0023                     strcspn@s2:	
  1399                           ; 2 bytes @ 0x3
  1400                           
  1401  0023                     strspn@s2:	
  1402                           ; 2 bytes @ 0x3
  1403                           
  1404  0023                     ___ftadd@f1:	
  1405                           ; 2 bytes @ 0x3
  1406                           
  1407  0023                     ___ftge@ff2:	
  1408                           ; 3 bytes @ 0x3
  1409                           
  1410                           
  1411                           ; 3 bytes @ 0x3
  1412  0023                     	ds	1
  1413  0024                     ??_atoi:	
  1414  0024                     find@idx:	
  1415                           ; 0 bytes @ 0x4
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x4
  1419  0024                     	ds	1
  1420  0025                     ??_strspn:	
  1421  0025                     ??_strcspn:	
  1422                           ; 0 bytes @ 0x5
  1423                           
  1424  0025                     ?_uart_gets:	
  1425                           ; 0 bytes @ 0x5
  1426                           
  1427  0025                     uart_gets@size:	
  1428                           ; 1 bytes @ 0x5
  1429                           
  1430                           
  1431                           ; 2 bytes @ 0x5
  1432  0025                     	ds	1
  1433  0026                     ??___awtoft:	
  1434  0026                     atoi@sign:	
  1435                           ; 0 bytes @ 0x6
  1436                           
  1437  0026                     ___ftadd@f2:	
  1438                           ; 1 bytes @ 0x6
  1439                           
  1440                           
  1441                           ; 3 bytes @ 0x6
  1442  0026                     	ds	1
  1443  0027                     uart_gets@tail:	
  1444  0027                     atoi@a:	
  1445                           ; 1 bytes @ 0x7
  1446                           
  1447  0027                     strcspn@i:	
  1448                           ; 2 bytes @ 0x7
  1449                           
  1450  0027                     strspn@i:	
  1451                           ; 2 bytes @ 0x7
  1452                           
  1453                           
  1454                           ; 2 bytes @ 0x7
  1455  0027                     	ds	1
  1456  0028                     uart_gets@mem:	
  1457  0028                     ___awtoft@sign:	
  1458                           ; 1 bytes @ 0x8
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x8
  1462  0028                     	ds	1
  1463  0029                     ??___ftadd:	
  1464  0029                     ?___ftdiv:	
  1465                           ; 0 bytes @ 0x9
  1466                           
  1467  0029                     uart_gets@it:	
  1468                           ; 3 bytes @ 0x9
  1469                           
  1470  0029                     atoi@s:	
  1471                           ; 1 bytes @ 0x9
  1472                           
  1473  0029                     strcspn@s1:	
  1474                           ; 1 bytes @ 0x9
  1475                           
  1476  0029                     strspn@s1:	
  1477                           ; 1 bytes @ 0x9
  1478                           
  1479  0029                     ___ftdiv@f2:	
  1480                           ; 1 bytes @ 0x9
  1481                           
  1482                           
  1483                           ; 3 bytes @ 0x9
  1484  0029                     	ds	1
  1485  002A                     ?_strtok:	
  1486  002A                     uart_gets@pos:	
  1487                           ; 1 bytes @ 0xA
  1488                           
  1489  002A                     strtok@s2:	
  1490                           ; 2 bytes @ 0xA
  1491                           
  1492                           
  1493                           ; 2 bytes @ 0xA
  1494  002A                     	ds	2
  1495  002C                     ??_strtok:	
  1496  002C                     uart_gets@idx:	
  1497                           ; 0 bytes @ 0xC
  1498                           
  1499  002C                     ___ftdiv@f1:	
  1500                           ; 1 bytes @ 0xC
  1501                           
  1502                           
  1503                           ; 3 bytes @ 0xC
  1504  002C                     	ds	1
  1505  002D                     ___ftadd@sign:	
  1506                           
  1507                           ; 1 bytes @ 0xD
  1508  002D                     	ds	1
  1509  002E                     ___ftadd@exp2:	
  1510                           
  1511                           ; 1 bytes @ 0xE
  1512  002E                     	ds	1
  1513  002F                     ??___ftdiv:	
  1514  002F                     ___ftadd@exp1:	
  1515                           ; 0 bytes @ 0xF
  1516                           
  1517                           
  1518                           ; 1 bytes @ 0xF
  1519  002F                     	ds	4
  1520  0033                     ___ftdiv@cntr:	
  1521                           
  1522                           ; 1 bytes @ 0x13
  1523  0033                     	ds	1
  1524  0034                     ___ftdiv@f3:	
  1525                           
  1526                           ; 3 bytes @ 0x14
  1527  0034                     	ds	3
  1528  0037                     ___ftdiv@exp:	
  1529                           
  1530                           ; 1 bytes @ 0x17
  1531  0037                     	ds	1
  1532  0038                     ___ftdiv@sign:	
  1533                           
  1534                           ; 1 bytes @ 0x18
  1535  0038                     	ds	1
  1536  0039                     ?___fttol:	
  1537  0039                     ___fttol@f1:	
  1538                           ; 4 bytes @ 0x19
  1539                           
  1540                           
  1541                           ; 3 bytes @ 0x19
  1542  0039                     	ds	4
  1543  003D                     ??___fttol:	
  1544                           
  1545                           ; 0 bytes @ 0x1D
  1546  003D                     	ds	4
  1547  0041                     ___fttol@sign1:	
  1548                           
  1549                           ; 1 bytes @ 0x21
  1550  0041                     	ds	1
  1551  0042                     ___fttol@lval:	
  1552                           
  1553                           ; 4 bytes @ 0x22
  1554  0042                     	ds	4
  1555  0046                     ___fttol@exp1:	
  1556                           
  1557                           ; 1 bytes @ 0x26
  1558  0046                     	ds	1
  1559  0047                     ?___altoft:	
  1560  0047                     ___altoft@c:	
  1561                           ; 3 bytes @ 0x27
  1562                           
  1563                           
  1564                           ; 4 bytes @ 0x27
  1565  0047                     	ds	4
  1566  004B                     ??___altoft:	
  1567                           
  1568                           ; 0 bytes @ 0x2B
  1569  004B                     	ds	2
  1570  004D                     ___altoft@exp:	
  1571                           
  1572                           ; 1 bytes @ 0x2D
  1573  004D                     	ds	1
  1574  004E                     ___altoft@sign:	
  1575                           
  1576                           ; 1 bytes @ 0x2E
  1577  004E                     	ds	1
  1578  004F                     ?_ceil:	
  1579  004F                     ceil@x:	
  1580                           ; 3 bytes @ 0x2F
  1581                           
  1582                           
  1583                           ; 3 bytes @ 0x2F
  1584  004F                     	ds	3
  1585  0052                     ??_ceil:	
  1586                           
  1587                           ; 0 bytes @ 0x32
  1588  0052                     	ds	1
  1589  0053                     ceil@i:	
  1590                           
  1591                           ; 3 bytes @ 0x33
  1592  0053                     	ds	3
  1593  0056                     ceil@expon:	
  1594                           
  1595                           ; 2 bytes @ 0x36
  1596  0056                     	ds	2
  1597  0058                     ?_step:	
  1598  0058                     step@deg:	
  1599                           ; 2 bytes @ 0x38
  1600                           
  1601                           
  1602                           ; 2 bytes @ 0x38
  1603  0058                     	ds	2
  1604  005A                     _step$726:	
  1605                           
  1606                           ; 3 bytes @ 0x3A
  1607  005A                     	ds	3
  1608  005D                     step@a:	
  1609                           
  1610                           ; 2 bytes @ 0x3D
  1611  005D                     	ds	2
  1612  005F                     ?_right:	
  1613  005F                     ?_left:	
  1614                           ; 0 bytes @ 0x3F
  1615                           
  1616  005F                     right@mal:	
  1617                           ; 0 bytes @ 0x3F
  1618                           
  1619  005F                     left@mal:	
  1620                           ; 2 bytes @ 0x3F
  1621                           
  1622                           
  1623                           ; 2 bytes @ 0x3F
  1624  005F                     	ds	2
  1625  0061                     right@speed:	
  1626  0061                     left@speed:	
  1627                           ; 2 bytes @ 0x41
  1628                           
  1629                           
  1630                           ; 2 bytes @ 0x41
  1631  0061                     	ds	2
  1632  0063                     ??_right:	
  1633  0063                     ??_left:	
  1634                           ; 0 bytes @ 0x43
  1635                           
  1636                           
  1637                           ; 0 bytes @ 0x43
  1638  0063                     	ds	3
  1639                           
  1640                           	psect	maintext
  1641  0036                     __pmaintext:	
  1642 ;;
  1643 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1644 ;;
  1645 ;; *************** function _main *****************
  1646 ;; Defined at:
  1647 ;;		line 57 in file "newmain.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  i               2   62[BANK1 ] int 
  1652 ;;  addr            2   60[BANK1 ] int 
  1653 ;;  len             2   56[BANK1 ] unsigned int 
  1654 ;;  line           32   18[BANK1 ] unsigned char [32]
  1655 ;;  argv            4   50[BANK1 ] PTR unsigned char [4]
  1656 ;;		 -> main@line(32), NULL(0), 
  1657 ;;  argc            2   65[BANK1 ] int 
  1658 ;;  address         2   54[BANK1 ] int 
  1659 ;;  val             1   67[BANK1 ] PTR unsigned char 
  1660 ;;		 -> main@line(32), NULL(0), 
  1661 ;;  title           1   64[BANK1 ] PTR unsigned char 
  1662 ;;		 -> main@line(32), NULL(0), 
  1663 ;;  it              1   59[BANK1 ] PTR unsigned char 
  1664 ;;		 -> main@line(32), NULL(0), 
  1665 ;;  mode_sel        1   58[BANK1 ] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;		None               void
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : B1F/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Totals:         0       0      62       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;Total ram usage:       62 bytes
  1680 ;; Hardware stack levels required when called:    7
  1681 ;; This function calls:
  1682 ;;		_atoi
  1683 ;;		_left
  1684 ;;		_right
  1685 ;;		_setup
  1686 ;;		_strcmp
  1687 ;;		_strlen
  1688 ;;		_strtok
  1689 ;;		_uart_gets
  1690 ;;		_uart_send
  1691 ;; This function is called by:
  1692 ;;		Startup code after reset
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _main
  1698  0036                     _main:	
  1699                           
  1700                           ;newmain.c: 58: char line[32];
  1701                           ;newmain.c: 59: char* argv[4],* title,* val;
  1702                           ;newmain.c: 60: int argc;
  1703                           ;newmain.c: 61: char* it;
  1704                           ;newmain.c: 62: const char tokens[]=" ,";
  1705                           ;newmain.c: 63: int address = (RB2*1+RB3*2+RB0*4+RB1*8);
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1709  0036  1003               	clrc
  1710  0037  0020               	movlb	0	; select bank0
  1711  0038  188D               	btfsc	13,1	;volatile
  1712  0039  1403               	setc
  1713  003A  3000               	movlw	0
  1714  003B  3D09               	addwfc	9,w
  1715  003C  0021               	movlb	1	; select bank1
  1716  003D  00A6               	movwf	??_main^(0+128)
  1717  003E  01A7               	clrf	(??_main^(0+128)+1)
  1718  003F  35A6               	lslf	??_main^(0+128),f
  1719  0040  0DA7               	rlf	(??_main^(0+128)+1),f
  1720  0041  35A6               	lslf	??_main^(0+128),f
  1721  0042  0DA7               	rlf	(??_main^(0+128)+1),f
  1722  0043  35A6               	lslf	??_main^(0+128),f
  1723  0044  0DA7               	rlf	(??_main^(0+128)+1),f
  1724  0045  1003               	clrc
  1725  0046  0020               	movlb	0	; select bank0
  1726  0047  180D               	btfsc	13,0	;volatile
  1727  0048  1403               	setc
  1728  0049  3000               	movlw	0
  1729  004A  3D09               	addwfc	9,w
  1730  004B  0021               	movlb	1	; select bank1
  1731  004C  00A8               	movwf	(??_main+2)^(0+128)
  1732  004D  01A9               	clrf	((??_main+2)^(0+128)+1)
  1733  004E  35A8               	lslf	(??_main+2)^(0+128),f
  1734  004F  0DA9               	rlf	((??_main+2)^(0+128)+1),f
  1735  0050  35A8               	lslf	(??_main+2)^(0+128),f
  1736  0051  0DA9               	rlf	((??_main+2)^(0+128)+1),f
  1737  0052  1003               	clrc
  1738  0053  0020               	movlb	0	; select bank0
  1739  0054  198D               	btfsc	13,3	;volatile
  1740  0055  1403               	setc
  1741  0056  3000               	movlw	0
  1742  0057  3D09               	addwfc	9,w
  1743  0058  0021               	movlb	1	; select bank1
  1744  0059  00AA               	movwf	(??_main+4)^(0+128)
  1745  005A  01AB               	clrf	((??_main+4)^(0+128)+1)
  1746  005B  35AA               	lslf	(??_main+4)^(0+128),f
  1747  005C  0DAB               	rlf	((??_main+4)^(0+128)+1),f
  1748  005D  1003               	clrc
  1749  005E  0020               	movlb	0	; select bank0
  1750  005F  190D               	btfsc	13,2	;volatile
  1751  0060  1403               	setc
  1752  0061  3000               	movlw	0
  1753  0062  3D09               	addwfc	9,w
  1754  0063  0021               	movlb	1	; select bank1
  1755  0064  072A               	addwf	(??_main+4)^(0+128),w
  1756  0065  00AC               	movwf	(??_main+6)^(0+128)
  1757  0066  082B               	movf	(??_main+5)^(0+128),w
  1758  0067  1803               	skipnc
  1759  0068  0A2B               	incf	(??_main+5)^(0+128),w
  1760  0069  00AD               	movwf	((??_main+6)^(0+128)+1)
  1761  006A  0828               	movf	(??_main+2)^(0+128),w
  1762  006B  072C               	addwf	(??_main+6)^(0+128),w
  1763  006C  00AE               	movwf	(??_main+8)^(0+128)
  1764  006D  0829               	movf	(??_main+3)^(0+128),w
  1765  006E  3D2D               	addwfc	(??_main+7)^(0+128),w
  1766  006F  00AF               	movwf	(??_main+9)^(0+128)
  1767  0070  0826               	movf	??_main^(0+128),w
  1768  0071  072E               	addwf	(??_main+8)^(0+128),w
  1769  0072  00B0               	movwf	(??_main+10)^(0+128)
  1770  0073  0827               	movf	(??_main+1)^(0+128),w
  1771  0074  3D2F               	addwfc	(??_main+9)^(0+128),w
  1772  0075  00B1               	movwf	(??_main+11)^(0+128)
  1773  0076  0830               	movf	(??_main+10)^(0+128),w
  1774  0077  00D6               	movwf	main@address^(0+128)
  1775  0078  0831               	movf	(??_main+11)^(0+128),w
  1776  0079  00D7               	movwf	(main@address+1)^(0+128)
  1777                           
  1778                           ;newmain.c: 64: bool mode_sel=0;
  1779  007A  01DA               	clrf	main@mode_sel^(0+128)
  1780  007B                     l242:	
  1781                           ;newmain.c: 65: while(PLLR==0);
  1782                           
  1783  007B  1F1A               	btfss	26,6	;volatile
  1784  007C  287B               	goto	l242
  1785                           
  1786                           ;newmain.c: 66: setup();
  1787  007D  318E  261E  3180   	fcall	_setup
  1788                           
  1789                           ;newmain.c: 67: RA1 = 0;
  1790  0080  0020               	movlb	0	; select bank0
  1791  0081  108C               	bcf	12,1	;volatile
  1792                           
  1793                           ;newmain.c: 68: RA2 = 0;
  1794  0082  110C               	bcf	12,2	;volatile
  1795                           
  1796                           ;newmain.c: 69: RA3 = 0;
  1797  0083  118C               	bcf	12,3	;volatile
  1798  0084                     L2:	
  1799                           
  1800                           ;newmain.c: 70: RA5 = 0;
  1801  0084  128C               	bcf	12,5	;volatile
  1802  0085                     l245:	
  1803                           ;newmain.c: 71: while(1){
  1804                           
  1805                           
  1806                           ;newmain.c: 72: if(uart_gets(line,sizeof(line))!=(0)){
  1807  0085  3020               	movlw	32
  1808  0086  0020               	movlb	0	; select bank0
  1809  0087  00A5               	movwf	uart_gets@size
  1810  0088  3000               	movlw	0
  1811  0089  00A6               	movwf	uart_gets@size+1
  1812  008A  30B2               	movlw	(low (main@line| 0))& (0+255)
  1813  008B  3186  267A  3180   	fcall	_uart_gets
  1814  008E  3A00               	xorlw	0
  1815  008F  1903               	skipnz
  1816  0090  2885               	goto	l245
  1817                           
  1818                           ;newmain.c: 73: size_t len=strlen(line);
  1819  0091  30B2               	movlw	(low (main@line| 0))& (0+255)
  1820  0092  318E  26E1  3180   	fcall	_strlen
  1821  0095  0874               	movf	?_strlen+1,w
  1822  0096  0021               	movlb	1	; select bank1
  1823  0097  00D9               	movwf	(main@len+1)^(0+128)
  1824  0098  0873               	movf	?_strlen,w
  1825  0099  00D8               	movwf	main@len^(0+128)
  1826                           
  1827                           ;newmain.c: 74: if (line[len-1]=='!')continue;
  1828  009A  0858               	movf	main@len^(0+128),w
  1829  009B  3EFF               	addlw	255
  1830  009C  3EB2               	addlw	(low (main@line| 0))& (0+255)
  1831  009D  0086               	movwf	6
  1832  009E  0187               	clrf	7
  1833  009F  3021               	movlw	33
  1834  00A0  0601               	xorwf	1,w
  1835  00A1  1903               	btfsc	3,2
  1836  00A2  2885               	goto	l245
  1837                           
  1838                           ;newmain.c: 75: argv[0] = strtok(line,tokens);
  1839  00A3  3000               	movlw	low (main@tokens| (0+32768))
  1840  00A4  0020               	movlb	0	; select bank0
  1841  00A5  00AA               	movwf	strtok@s2
  1842  00A6  3090               	movlw	high (main@tokens| (0+32768))
  1843  00A7  00AB               	movwf	strtok@s2+1
  1844  00A8  30B2               	movlw	(low (main@line| 0))& (0+255)
  1845  00A9  3186  26C3  3180   	fcall	_strtok
  1846  00AC  0021               	movlb	1	; select bank1
  1847  00AD  00A6               	movwf	??_main^(0+128)
  1848  00AE  0826               	movf	??_main^(0+128),w
  1849  00AF  00D2               	movwf	main@argv^(0+128)
  1850                           
  1851                           ;newmain.c: 76: for (argc=1;argc<sizeof(argv)/sizeof(argv[0]);argc++){
  1852  00B0  3001               	movlw	1
  1853  00B1  00E1               	movwf	main@argc^(0+128)
  1854  00B2  3000               	movlw	0
  1855  00B3  00E2               	movwf	(main@argc^(0+128)+1)
  1856  00B4  3000               	movlw	0
  1857  00B5  0262               	subwf	(main@argc+1)^(0+128),w
  1858  00B6  3004               	movlw	4
  1859  00B7  1903               	skipnz
  1860  00B8  0261               	subwf	main@argc^(0+128),w
  1861  00B9  1803               	btfsc	3,0
  1862  00BA  28DB               	goto	l3084
  1863  00BB                     l3076:	
  1864                           
  1865                           ;newmain.c: 77: argv[argc]=it=strtok((0),tokens);
  1866  00BB  3000               	movlw	low (main@tokens| (0+32768))
  1867  00BC  0020               	movlb	0	; select bank0
  1868  00BD  00AA               	movwf	strtok@s2
  1869  00BE  3090               	movlw	high (main@tokens| (0+32768))
  1870  00BF  00AB               	movwf	strtok@s2+1
  1871  00C0  3000               	movlw	0
  1872  00C1  3186  26C3  3180   	fcall	_strtok
  1873  00C4  0021               	movlb	1	; select bank1
  1874  00C5  00DB               	movwf	main@it^(0+128)
  1875  00C6  00A6               	movwf	??_main^(0+128)
  1876  00C7  0861               	movf	main@argc^(0+128),w
  1877  00C8  3ED2               	addlw	(low (main@argv| 0))& (0+255)
  1878  00C9  0086               	movwf	6
  1879  00CA  0187               	clrf	7
  1880  00CB  0826               	movf	??_main^(0+128),w
  1881  00CC  0081               	movwf	1
  1882                           
  1883                           ;newmain.c: 78: if(it==(0))break;
  1884  00CD  085B               	movf	main@it^(0+128),w
  1885  00CE  1903               	btfsc	3,2
  1886  00CF  28DB               	goto	l3084
  1887  00D0  3001               	movlw	1
  1888  00D1  07E1               	addwf	main@argc^(0+128),f
  1889  00D2  3000               	movlw	0
  1890  00D3  3DE2               	addwfc	(main@argc+1)^(0+128),f
  1891  00D4  3000               	movlw	0
  1892  00D5  0262               	subwf	(main@argc+1)^(0+128),w
  1893  00D6  3004               	movlw	4
  1894  00D7  1903               	skipnz
  1895  00D8  0261               	subwf	main@argc^(0+128),w
  1896  00D9  1C03               	skipc
  1897  00DA  28BB               	goto	l3076
  1898  00DB                     l3084:	
  1899                           
  1900                           ;newmain.c: 79: }
  1901                           ;newmain.c: 80: title=argv[0];
  1902  00DB  0852               	movf	main@argv^(0+128),w
  1903  00DC  00A6               	movwf	??_main^(0+128)
  1904  00DD  0826               	movf	??_main^(0+128),w
  1905  00DE  00E0               	movwf	main@title^(0+128)
  1906                           
  1907                           ;newmain.c: 81: val=argv[1];
  1908  00DF  0853               	movf	(low ((main@argv| 0+1)))^(0+128),w
  1909  00E0  00A6               	movwf	??_main^(0+128)
  1910  00E1  0826               	movf	??_main^(0+128),w
  1911  00E2  00E3               	movwf	main@val^(0+128)
  1912                           
  1913                           ;newmain.c: 82: if(!strcmp(title,"sel")){
  1914  00E3  3013               	movlw	low (STR_1| (0+32768))
  1915  00E4  00F3               	movwf	strcmp@s2
  1916  00E5  3090               	movlw	high (STR_1| (0+32768))
  1917  00E6  00F4               	movwf	strcmp@s2+1
  1918  00E7  0860               	movf	main@title^(0+128),w
  1919  00E8  318F  2706  3180   	fcall	_strcmp
  1920  00EB  0873               	movf	?_strcmp,w
  1921  00EC  0474               	iorwf	?_strcmp+1,w
  1922  00ED  1D03               	btfss	3,2
  1923  00EE  2926               	goto	l3104
  1924                           
  1925                           ;newmain.c: 83: int addr=0;
  1926  00EF  0021               	movlb	1	; select bank1
  1927  00F0  01DC               	clrf	main@addr^(0+128)
  1928  00F1  01DD               	clrf	(main@addr+1)^(0+128)
  1929                           
  1930                           ;newmain.c: 84: if(argc>=2&&argv!=(0))addr=atoi(val);
  1931  00F2  0862               	movf	(main@argc+1)^(0+128),w
  1932  00F3  3A80               	xorlw	128
  1933  00F4  00A6               	movwf	??_main^(0+128)
  1934  00F5  3080               	movlw	128
  1935  00F6  0226               	subwf	??_main^(0+128),w
  1936  00F7  1D03               	skipz
  1937  00F8  28FB               	goto	u4495
  1938  00F9  3002               	movlw	2
  1939  00FA  0261               	subwf	main@argc^(0+128),w
  1940  00FB                     u4495:	
  1941  00FB  1C03               	skipc
  1942  00FC  290A               	goto	l3094
  1943  00FD  0021               	movlb	1	; select bank1
  1944  00FE  0863               	movf	main@val^(0+128),w
  1945  00FF  3185  25A8  3180   	fcall	_atoi
  1946  0102  0020               	movlb	0	; select bank0
  1947  0103  0823               	movf	?_atoi+1,w
  1948  0104  0021               	movlb	1	; select bank1
  1949  0105  00DD               	movwf	(main@addr+1)^(0+128)
  1950  0106  0020               	movlb	0	; select bank0
  1951  0107  0822               	movf	?_atoi,w
  1952  0108  0021               	movlb	1	; select bank1
  1953  0109  00DC               	movwf	main@addr^(0+128)
  1954  010A                     l3094:	
  1955                           
  1956                           ;newmain.c: 85: if(addr==address)mode_sel=RA5=1;
  1957  010A  0021               	movlb	1	; select bank1
  1958  010B  0857               	movf	(main@address+1)^(0+128),w
  1959  010C  065D               	xorwf	(main@addr+1)^(0+128),w
  1960  010D  1D03               	skipz
  1961  010E  2911               	goto	u4505
  1962  010F  0856               	movf	main@address^(0+128),w
  1963  0110  065C               	xorwf	main@addr^(0+128),w
  1964  0111                     u4505:	
  1965  0111  1D03               	skipz
  1966  0112  2916               	goto	l3098
  1967  0113  0020               	movlb	0	; select bank0
  1968  0114  168C               	bsf	12,5	;volatile
  1969  0115  2920               	goto	L1
  1970  0116                     l3098:	
  1971                           
  1972                           ;newmain.c: 86: else if(!addr){
  1973  0116  085C               	movf	main@addr^(0+128),w
  1974  0117  045D               	iorwf	(main@addr+1)^(0+128),w
  1975  0118  1D03               	btfss	3,2
  1976  0119  291E               	goto	l3102
  1977                           
  1978                           ;newmain.c: 87: mode_sel=1;
  1979  011A  01DA               	clrf	main@mode_sel^(0+128)
  1980  011B  0ADA               	incf	main@mode_sel^(0+128),f
  1981                           
  1982                           ;newmain.c: 88: RA5=0;
  1983  011C  0020               	movlb	0	; select bank0
  1984  011D  2884               	goto	L2
  1985  011E                     l3102:	
  1986                           ;newmain.c: 89: }else mode_sel=RA5=0;
  1987                           
  1988  011E  0020               	movlb	0	; select bank0
  1989  011F  128C               	bcf	12,5	;volatile
  1990  0120                     L1:	
  1991  0120  3000               	movlw	0
  1992  0121  1A8C               	btfsc	12,5	;volatile
  1993  0122  3001               	movlw	1
  1994  0123  0021               	movlb	1	; select bank1
  1995  0124  00DA               	movwf	main@mode_sel^(0+128)
  1996                           
  1997                           ;newmain.c: 90: }else if(!strcmp(title,"right")){
  1998  0125  2885               	goto	l245
  1999  0126                     l3104:	
  2000  0126  3003               	movlw	low (STR_2| (0+32768))
  2001  0127  00F3               	movwf	strcmp@s2
  2002  0128  3090               	movlw	high (STR_2| (0+32768))
  2003  0129  00F4               	movwf	strcmp@s2+1
  2004  012A  0021               	movlb	1	; select bank1
  2005  012B  0860               	movf	main@title^(0+128),w
  2006  012C  318F  2706  3180   	fcall	_strcmp
  2007  012F  0873               	movf	?_strcmp,w
  2008  0130  0474               	iorwf	?_strcmp+1,w
  2009  0131  1D03               	btfss	3,2
  2010  0132  294A               	goto	l3110
  2011                           
  2012                           ;newmain.c: 91: uart_send("right");
  2013  0133  3003               	movlw	(low (STR_2| (0+32768)))& (0+255)
  2014  0134  318E  2608  3180   	fcall	_uart_send
  2015                           
  2016                           ;newmain.c: 92: right(val,0);
  2017  0137  0021               	movlb	1	; select bank1
  2018  0138  0863               	movf	main@val^(0+128),w
  2019  0139  00A6               	movwf	??_main^(0+128)
  2020  013A  3000               	movlw	0
  2021  013B  00A7               	movwf	(??_main^(0+128)+1)
  2022  013C  0826               	movf	??_main^(0+128),w
  2023  013D  0020               	movlb	0	; select bank0
  2024  013E  00DF               	movwf	right@mal
  2025  013F  0021               	movlb	1	; select bank1
  2026  0140  0827               	movf	(??_main+1)^(0+128),w
  2027  0141  0020               	movlb	0	; select bank0
  2028  0142  00E0               	movwf	right@mal+1
  2029  0143  3000               	movlw	0
  2030  0144  00E1               	movwf	right@speed
  2031  0145  00E2               	movwf	right@speed+1
  2032  0146  3182  2291  3180   	fcall	_right
  2033                           
  2034                           ;newmain.c: 93: }
  2035  0149  2885               	goto	l245
  2036  014A                     l3110:	
  2037                           
  2038                           ;newmain.c: 94: else if(!strcmp(title,"left")){
  2039  014A  300E               	movlw	low (STR_4| (0+32768))
  2040  014B  00F3               	movwf	strcmp@s2
  2041  014C  3090               	movlw	high (STR_4| (0+32768))
  2042  014D  00F4               	movwf	strcmp@s2+1
  2043  014E  0021               	movlb	1	; select bank1
  2044  014F  0860               	movf	main@title^(0+128),w
  2045  0150  318F  2706  3180   	fcall	_strcmp
  2046  0153  0873               	movf	?_strcmp,w
  2047  0154  0474               	iorwf	?_strcmp+1,w
  2048  0155  1D03               	btfss	3,2
  2049  0156  296E               	goto	l3116
  2050                           
  2051                           ;newmain.c: 95: uart_send("left");
  2052  0157  300E               	movlw	(low (STR_4| (0+32768)))& (0+255)
  2053  0158  318E  2608  3180   	fcall	_uart_send
  2054                           
  2055                           ;newmain.c: 96: left(val,0);
  2056  015B  0021               	movlb	1	; select bank1
  2057  015C  0863               	movf	main@val^(0+128),w
  2058  015D  00A6               	movwf	??_main^(0+128)
  2059  015E  3000               	movlw	0
  2060  015F  00A7               	movwf	(??_main^(0+128)+1)
  2061  0160  0826               	movf	??_main^(0+128),w
  2062  0161  0020               	movlb	0	; select bank0
  2063  0162  00DF               	movwf	left@mal
  2064  0163  0021               	movlb	1	; select bank1
  2065  0164  0827               	movf	(??_main+1)^(0+128),w
  2066  0165  0020               	movlb	0	; select bank0
  2067  0166  00E0               	movwf	left@mal+1
  2068  0167  3000               	movlw	0
  2069  0168  00E1               	movwf	left@speed
  2070  0169  00E2               	movwf	left@speed+1
  2071  016A  3183  2342  3180   	fcall	_left
  2072                           
  2073                           ;newmain.c: 97: }else if(!strcmp(title,"echo")){
  2074  016D  2885               	goto	l245
  2075  016E                     l3116:	
  2076  016E  3009               	movlw	low (STR_6| (0+32768))
  2077  016F  00F3               	movwf	strcmp@s2
  2078  0170  3090               	movlw	high (STR_6| (0+32768))
  2079  0171  00F4               	movwf	strcmp@s2+1
  2080  0172  0021               	movlb	1	; select bank1
  2081  0173  0860               	movf	main@title^(0+128),w
  2082  0174  318F  2706  3180   	fcall	_strcmp
  2083  0177  0873               	movf	?_strcmp,w
  2084  0178  0474               	iorwf	?_strcmp+1,w
  2085  0179  1D03               	btfss	3,2
  2086  017A  2885               	goto	l245
  2087                           
  2088                           ;newmain.c: 98: for(int i=0;i<strlen(val);i++){
  2089  017B  0021               	movlb	1	; select bank1
  2090  017C  01DE               	clrf	main@i^(0+128)
  2091  017D  01DF               	clrf	(main@i+1)^(0+128)
  2092  017E                     l3124:	
  2093  017E  0863               	movf	main@val^(0+128),w
  2094  017F  318E  26E1  3180   	fcall	_strlen
  2095  0182  0874               	movf	?_strlen+1,w
  2096  0183  0021               	movlb	1	; select bank1
  2097  0184  025F               	subwf	(main@i+1)^(0+128),w
  2098  0185  1D03               	skipz
  2099  0186  2989               	goto	u4555
  2100  0187  0873               	movf	?_strlen,w
  2101  0188  025E               	subwf	main@i^(0+128),w
  2102  0189                     u4555:	
  2103  0189  1803               	btfsc	3,0
  2104  018A  2885               	goto	l245
  2105                           
  2106                           ;newmain.c: 99: uart_send(val[i]);
  2107  018B  085E               	movf	main@i^(0+128),w
  2108  018C  0763               	addwf	main@val^(0+128),w
  2109  018D  00A6               	movwf	??_main^(0+128)
  2110  018E  0826               	movf	??_main^(0+128),w
  2111  018F  0086               	movwf	6
  2112  0190  0187               	clrf	7
  2113  0191  0801               	movf	1,w
  2114  0192  318E  2608  3180   	fcall	_uart_send
  2115  0195  3001               	movlw	1
  2116  0196  0021               	movlb	1	; select bank1
  2117  0197  07DE               	addwf	main@i^(0+128),f
  2118  0198  3000               	movlw	0
  2119  0199  3DDF               	addwfc	(main@i+1)^(0+128),f
  2120  019A  297E               	goto	l3124
  2121  019B                     __end_of_main:	
  2122                           
  2123                           	psect	text1
  2124  0E08                     __ptext1:	
  2125 ;; *************** function _uart_send *****************
  2126 ;; Defined at:
  2127 ;;		line 159 in file "uart.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  data            1    wreg     unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  data            1    3[COMMON] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;		None               void
  2134 ;; Registers used:
  2135 ;;		wreg
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;Total ram usage:        1 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    2
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _uart_send
  2157  0E08                     _uart_send:	
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _uart_send: [wreg]
  2161                           ;uart_send@data stored from wreg
  2162  0E08  00F3               	movwf	uart_send@data
  2163  0E09                     l163:	
  2164                           ;uart.c: 160: while(!TXIF);
  2165                           
  2166  0E09  0020               	movlb	0	; select bank0
  2167  0E0A  1E11               	btfss	17,4	;volatile
  2168  0E0B  2E09               	goto	l163
  2169                           
  2170                           ;uart.c: 161: TXREG=data;
  2171  0E0C  0873               	movf	uart_send@data,w
  2172  0E0D  0023               	movlb	3	; select bank3
  2173  0E0E  009A               	movwf	26	;volatile
  2174  0E0F  0008               	return
  2175  0E10                     __end_of_uart_send:	
  2176                           ;uart.c: 162: return;
  2177                           
  2178                           
  2179                           	psect	text2
  2180  067A                     __ptext2:	
  2181 ;; *************** function _uart_gets *****************
  2182 ;; Defined at:
  2183 ;;		line 95 in file "uart.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  mem             1    wreg     PTR unsigned char 
  2186 ;;		 -> main@line(32), 
  2187 ;;  size            2    5[BANK0 ] unsigned int 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  mem             1    8[BANK0 ] PTR unsigned char 
  2190 ;;		 -> main@line(32), 
  2191 ;;  idx             1   12[BANK0 ] unsigned char 
  2192 ;;  tail            1    7[BANK0 ] unsigned char 
  2193 ;;  pos             2   10[BANK0 ] unsigned int 
  2194 ;;  it              1    9[BANK0 ] PTR unsigned char 
  2195 ;;		 -> main@line(32), 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      PTR unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2206 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;Total ram usage:        9 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    3
  2212 ;; This function calls:
  2213 ;;		_find
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _uart_gets
  2221  067A                     _uart_gets:	
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _uart_gets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2225                           ;uart_gets@mem stored from wreg
  2226  067A  0020               	movlb	0	; select bank0
  2227  067B  00A8               	movwf	uart_gets@mem
  2228                           
  2229                           ;uart.c: 96: size_t pos=find();
  2230  067C  318F  275C  3186   	fcall	_find
  2231  067F  0874               	movf	?_find+1,w
  2232  0680  0020               	movlb	0	; select bank0
  2233  0681  00AB               	movwf	uart_gets@pos+1
  2234  0682  0873               	movf	?_find,w
  2235  0683  00AA               	movwf	uart_gets@pos
  2236                           
  2237                           ;uart.c: 97: uint8_t *it=mem;
  2238  0684  0828               	movf	uart_gets@mem,w
  2239  0685  00F6               	movwf	??_uart_gets
  2240  0686  0876               	movf	??_uart_gets,w
  2241  0687  00A9               	movwf	uart_gets@it
  2242                           
  2243                           ;uart.c: 98: if(0<pos && pos<size){
  2244  0688  082A               	movf	uart_gets@pos,w
  2245  0689  042B               	iorwf	uart_gets@pos+1,w
  2246  068A  1903               	btfsc	3,2
  2247  068B  2EC1               	goto	l2924
  2248  068C  0826               	movf	uart_gets@size+1,w
  2249  068D  022B               	subwf	uart_gets@pos+1,w
  2250  068E  1D03               	skipz
  2251  068F  2E92               	goto	u3995
  2252  0690  0825               	movf	uart_gets@size,w
  2253  0691  022A               	subwf	uart_gets@pos,w
  2254  0692                     u3995:	
  2255  0692  1803               	skipnc
  2256  0693  2EC1               	goto	l2924
  2257                           
  2258                           ;uart.c: 99: uint8_t idx;
  2259                           ;uart.c: 100: uint8_t tail=(rx_out+pos)%32;
  2260  0694  0879               	movf	_rx_out,w
  2261  0695  072A               	addwf	uart_gets@pos,w
  2262  0696  391F               	andlw	31
  2263  0697  00F6               	movwf	??_uart_gets
  2264  0698  0876               	movf	??_uart_gets,w
  2265  0699  00A7               	movwf	uart_gets@tail
  2266                           
  2267                           ;uart.c: 101: for (idx=rx_out;idx!=tail;idx=(idx+1)%32){
  2268  069A  0879               	movf	_rx_out,w
  2269  069B                     L3:	
  2270  069B  00F6               	movwf	??_uart_gets
  2271  069C  0876               	movf	??_uart_gets,w
  2272  069D  00AC               	movwf	uart_gets@idx
  2273  069E  082C               	movf	uart_gets@idx,w
  2274  069F  0627               	xorwf	uart_gets@tail,w
  2275  06A0  1903               	btfsc	3,2
  2276  06A1  2EB6               	goto	l2912
  2277                           
  2278                           ;uart.c: 102: *(it++)=rxbuf[idx];
  2279  06A2  082C               	movf	uart_gets@idx,w
  2280  06A3  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  2281  06A4  0086               	movwf	6
  2282  06A5  3001               	movlw	1	; select bank3/4
  2283  06A6  0087               	movwf	7
  2284  06A7  0801               	movf	1,w
  2285  06A8  00F6               	movwf	??_uart_gets
  2286  06A9  0829               	movf	uart_gets@it,w
  2287  06AA  0086               	movwf	6
  2288  06AB  0187               	clrf	7
  2289  06AC  0876               	movf	??_uart_gets,w
  2290  06AD  0081               	movwf	1
  2291  06AE  3001               	movlw	1
  2292  06AF  00F6               	movwf	??_uart_gets
  2293  06B0  0876               	movf	??_uart_gets,w
  2294  06B1  07A9               	addwf	uart_gets@it,f
  2295  06B2  082C               	movf	uart_gets@idx,w
  2296  06B3  3E01               	addlw	1
  2297  06B4  391F               	andlw	31
  2298  06B5  2E9B               	goto	L3
  2299  06B6                     l2912:	
  2300                           
  2301                           ;uart.c: 103: }
  2302                           ;uart.c: 104: it--;
  2303  06B6  3001               	movlw	1
  2304  06B7  02A9               	subwf	uart_gets@it,f
  2305                           
  2306                           ;uart.c: 105: *it='\0';
  2307  06B8  0829               	movf	uart_gets@it,w
  2308  06B9  0086               	movwf	6
  2309  06BA  0187               	clrf	7
  2310  06BB  0181               	clrf	1
  2311                           
  2312                           ;uart.c: 106: rx_in=rx_out=rx_used=0;
  2313  06BC  01E8               	clrf	_rx_used
  2314  06BD  01F9               	clrf	_rx_out
  2315  06BE  01F8               	clrf	_rx_in
  2316                           
  2317                           ;uart.c: 107: return mem;
  2318  06BF  0828               	movf	uart_gets@mem,w
  2319                           
  2320                           ;uart.c: 108: }else{
  2321  06C0  0008               	return
  2322  06C1                     l2924:	
  2323                           
  2324                           ;uart.c: 109: return (0);
  2325  06C1  3000               	movlw	0
  2326  06C2  0008               	return
  2327  06C3                     __end_of_uart_gets:	
  2328                           
  2329                           	psect	text3
  2330  0F5C                     __ptext3:	
  2331 ;; *************** function _find *****************
  2332 ;; Defined at:
  2333 ;;		line 82 in file "uart.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  size            2    1[BANK0 ] unsigned int 
  2338 ;;  idx             1    4[BANK0 ] unsigned char 
  2339 ;;  it              1    3[BANK0 ] unsigned char 
  2340 ;;  tail            1    0[BANK0 ] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  2    3[COMMON] unsigned int 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;Total ram usage:        8 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    2
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_uart_gets
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _find
  2366  0F5C                     _find:	
  2367                           
  2368                           ;uart.c: 83: uint8_t idx;
  2369                           ;uart.c: 84: uint8_t tail=(rx_out+rx_used)%32;
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _find: [wreg+fsr1l+fsr1h+status,2+status,0]
  2373  0F5C  0879               	movf	_rx_out,w
  2374  0F5D  0020               	movlb	0	; select bank0
  2375  0F5E  0768               	addwf	_rx_used,w
  2376  0F5F  391F               	andlw	31
  2377  0F60  00F5               	movwf	??_find
  2378  0F61  0875               	movf	??_find,w
  2379  0F62  00A0               	movwf	find@tail
  2380                           
  2381                           ;uart.c: 85: uint8_t it;
  2382                           ;uart.c: 86: size_t size=0;
  2383  0F63  01A1               	clrf	find@size
  2384  0F64  01A2               	clrf	find@size+1
  2385                           
  2386                           ;uart.c: 87: for (idx=rx_out;idx!=tail;idx=(idx+1)%32){
  2387  0F65  0879               	movf	_rx_out,w
  2388  0F66                     L4:	
  2389  0F66  00F5               	movwf	??_find
  2390  0F67  0875               	movf	??_find,w
  2391  0F68  00A4               	movwf	find@idx
  2392  0F69  0824               	movf	find@idx,w
  2393  0F6A  0620               	xorwf	find@tail,w
  2394  0F6B  1903               	btfsc	3,2
  2395  0F6C  2F8B               	goto	l2840
  2396                           
  2397                           ;uart.c: 88: it=rxbuf[idx];
  2398  0F6D  0824               	movf	find@idx,w
  2399  0F6E  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  2400  0F6F  0086               	movwf	6
  2401  0F70  3001               	movlw	1	; select bank3/4
  2402  0F71  0087               	movwf	7
  2403  0F72  0801               	movf	1,w
  2404  0F73  00F5               	movwf	??_find
  2405  0F74  0875               	movf	??_find,w
  2406  0F75  00A3               	movwf	find@it
  2407                           
  2408                           ;uart.c: 89: size++;
  2409  0F76  3001               	movlw	1
  2410  0F77  07A1               	addwf	find@size,f
  2411  0F78  3000               	movlw	0
  2412  0F79  3DA2               	addwfc	find@size+1,f
  2413                           
  2414                           ;uart.c: 90: if(it=='\n'||it=='\r')return size;
  2415  0F7A  300A               	movlw	10
  2416  0F7B  0623               	xorwf	find@it,w
  2417  0F7C  1903               	btfsc	3,2
  2418  0F7D  2F82               	goto	l2832
  2419  0F7E  300D               	movlw	13
  2420  0F7F  0623               	xorwf	find@it,w
  2421  0F80  1D03               	btfss	3,2
  2422  0F81  2F87               	goto	l2836
  2423  0F82                     l2832:	
  2424  0F82  0822               	movf	find@size+1,w
  2425  0F83  00F4               	movwf	?_find+1
  2426  0F84  0821               	movf	find@size,w
  2427  0F85  00F3               	movwf	?_find
  2428  0F86  0008               	return
  2429  0F87                     l2836:	
  2430  0F87  0824               	movf	find@idx,w
  2431  0F88  3E01               	addlw	1
  2432  0F89  391F               	andlw	31
  2433  0F8A  2F66               	goto	L4
  2434  0F8B                     l2840:	
  2435                           
  2436                           ;uart.c: 91: }
  2437                           ;uart.c: 92: return 0;
  2438  0F8B  01F3               	clrf	?_find
  2439  0F8C  01F4               	clrf	?_find+1
  2440  0F8D  0008               	return
  2441  0F8E                     __end_of_find:	
  2442                           
  2443                           	psect	text4
  2444  06C3                     __ptext4:	
  2445 ;; *************** function _strtok *****************
  2446 ;; Defined at:
  2447 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strtok.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  s1              1    wreg     PTR unsigned char 
  2450 ;;		 -> main@line(32), NULL(0), 
  2451 ;;  s2              2   10[BANK0 ] PTR const unsigned char 
  2452 ;;		 -> main@tokens(3), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  s1              1    7[COMMON] PTR unsigned char 
  2455 ;;		 -> main@line(32), NULL(0), 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      PTR unsigned char 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;Total ram usage:        6 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    4
  2472 ;; This function calls:
  2473 ;;		_strcspn
  2474 ;;		_strspn
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _strtok
  2482  06C3                     _strtok:	
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2486                           ;strtok@s1 stored from wreg
  2487  06C3  00F7               	movwf	strtok@s1
  2488  06C4  0877               	movf	strtok@s1,w
  2489  06C5  1D03               	btfss	3,2
  2490  06C6  2ECC               	goto	l2986
  2491  06C7  0020               	movlb	0	; select bank0
  2492  06C8  086B               	movf	strtok@sp,w
  2493  06C9  00AC               	movwf	??_strtok
  2494  06CA  082C               	movf	??_strtok,w
  2495  06CB  00F7               	movwf	strtok@s1
  2496  06CC                     l2986:	
  2497  06CC  0877               	movf	strtok@s1,w
  2498  06CD  1D03               	btfss	3,2
  2499  06CE  2ED1               	goto	l2992
  2500  06CF  3000               	movlw	0
  2501  06D0  0008               	return
  2502  06D1                     l2992:	
  2503  06D1  0020               	movlb	0	; select bank0
  2504  06D2  082A               	movf	strtok@s2,w
  2505  06D3  00A3               	movwf	strspn@s2
  2506  06D4  082B               	movf	strtok@s2+1,w
  2507  06D5  00A4               	movwf	strspn@s2+1
  2508  06D6  0877               	movf	strtok@s1,w
  2509  06D7  3187  27D0  3186   	fcall	_strspn
  2510  06DA  0020               	movlb	0	; select bank0
  2511  06DB  0823               	movf	?_strspn,w
  2512  06DC  00AC               	movwf	??_strtok
  2513  06DD  082C               	movf	??_strtok,w
  2514  06DE  07F7               	addwf	strtok@s1,f
  2515  06DF  0877               	movf	strtok@s1,w
  2516  06E0  0086               	movwf	6
  2517  06E1  0187               	clrf	7
  2518  06E2  0801               	movf	1,w
  2519  06E3  1D03               	btfss	3,2
  2520  06E4  2EE8               	goto	l3000
  2521  06E5  01EB               	clrf	strtok@sp
  2522  06E6  3000               	movlw	0
  2523  06E7  0008               	return
  2524  06E8                     l3000:	
  2525  06E8  082A               	movf	strtok@s2,w
  2526  06E9  00A3               	movwf	strcspn@s2
  2527  06EA  082B               	movf	strtok@s2+1,w
  2528  06EB  00A4               	movwf	strcspn@s2+1
  2529  06EC  0877               	movf	strtok@s1,w
  2530  06ED  318F  272D  3186   	fcall	_strcspn
  2531  06F0  0020               	movlb	0	; select bank0
  2532  06F1  0823               	movf	?_strcspn,w
  2533  06F2  00AC               	movwf	??_strtok
  2534  06F3  0824               	movf	?_strcspn+1,w
  2535  06F4  00AD               	movwf	??_strtok+1
  2536  06F5  0877               	movf	strtok@s1,w
  2537  06F6  072C               	addwf	??_strtok,w
  2538  06F7  00AE               	movwf	??_strtok+2
  2539  06F8  082E               	movf	??_strtok+2,w
  2540  06F9  00EB               	movwf	strtok@sp
  2541  06FA  086B               	movf	strtok@sp,w
  2542  06FB  0086               	movwf	6
  2543  06FC  0187               	clrf	7
  2544  06FD  0801               	movf	1,w
  2545  06FE  1903               	btfsc	3,2
  2546  06FF  2F09               	goto	l3008
  2547  0700  086B               	movf	strtok@sp,w
  2548  0701  0086               	movwf	6
  2549  0702  0187               	clrf	7
  2550  0703  0181               	clrf	1
  2551  0704  3001               	movlw	1
  2552  0705  00AC               	movwf	??_strtok
  2553  0706  082C               	movf	??_strtok,w
  2554  0707  07EB               	addwf	strtok@sp,f
  2555  0708  2F0A               	goto	l3010
  2556  0709                     l3008:	
  2557  0709  01EB               	clrf	strtok@sp
  2558  070A                     l3010:	
  2559  070A  0877               	movf	strtok@s1,w
  2560  070B  0008               	return
  2561  070C                     __end_of_strtok:	
  2562                           
  2563                           	psect	text5
  2564  07D0                     __ptext5:	
  2565 ;; *************** function _strspn *****************
  2566 ;; Defined at:
  2567 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strspn.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  s1              1    wreg     PTR const unsigned char 
  2570 ;;		 -> main@line(32), NULL(0), 
  2571 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
  2572 ;;		 -> main@tokens(3), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  s1              1    9[BANK0 ] PTR const unsigned char 
  2575 ;;		 -> main@line(32), NULL(0), 
  2576 ;;  i               2    7[BANK0 ] unsigned int 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2    3[BANK0 ] unsigned int 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2589 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;Total ram usage:        7 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    3
  2593 ;; This function calls:
  2594 ;;		_strchr
  2595 ;; This function is called by:
  2596 ;;		_strtok
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _strspn
  2602  07D0                     _strspn:	
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2606                           ;strspn@s1 stored from wreg
  2607  07D0  0020               	movlb	0	; select bank0
  2608  07D1  00A9               	movwf	strspn@s1
  2609  07D2  01A7               	clrf	strspn@i
  2610  07D3  01A8               	clrf	strspn@i+1
  2611  07D4  2FDE               	goto	l2856
  2612  07D5                     l2854:	
  2613  07D5  3001               	movlw	1
  2614  07D6  0020               	movlb	0	; select bank0
  2615  07D7  00A5               	movwf	??_strspn
  2616  07D8  0825               	movf	??_strspn,w
  2617  07D9  07A9               	addwf	strspn@s1,f
  2618  07DA  3001               	movlw	1
  2619  07DB  07A7               	addwf	strspn@i,f
  2620  07DC  3000               	movlw	0
  2621  07DD  3DA8               	addwfc	strspn@i+1,f
  2622  07DE                     l2856:	
  2623  07DE  0829               	movf	strspn@s1,w
  2624  07DF  0086               	movwf	6
  2625  07E0  0187               	clrf	7
  2626  07E1  0801               	movf	1,w
  2627  07E2  1903               	btfsc	3,2
  2628  07E3  2FF9               	goto	l2860
  2629  07E4  0823               	movf	strspn@s2,w
  2630  07E5  00F3               	movwf	strchr@ptr
  2631  07E6  0824               	movf	strspn@s2+1,w
  2632  07E7  00F4               	movwf	strchr@ptr+1
  2633  07E8  0829               	movf	strspn@s1,w
  2634  07E9  0086               	movwf	6
  2635  07EA  0187               	clrf	7
  2636  07EB  0801               	movf	1,w
  2637  07EC  00A5               	movwf	??_strspn
  2638  07ED  01A6               	clrf	??_strspn+1
  2639  07EE  0825               	movf	??_strspn,w
  2640  07EF  00F5               	movwf	strchr@chr
  2641  07F0  0826               	movf	??_strspn+1,w
  2642  07F1  00F6               	movwf	strchr@chr+1
  2643  07F2  318E  262D  3187   	fcall	_strchr
  2644  07F5  0873               	movf	?_strchr,w
  2645  07F6  0474               	iorwf	?_strchr+1,w
  2646  07F7  1D03               	btfss	3,2
  2647  07F8  2FD5               	goto	l2854
  2648  07F9                     l2860:	
  2649  07F9  0020               	movlb	0	; select bank0
  2650  07FA  0828               	movf	strspn@i+1,w
  2651  07FB  00A4               	movwf	?_strspn+1
  2652  07FC  0827               	movf	strspn@i,w
  2653  07FD  00A3               	movwf	?_strspn
  2654  07FE  0008               	return
  2655  07FF                     __end_of_strspn:	
  2656                           
  2657                           	psect	text6
  2658  0F2D                     __ptext6:	
  2659 ;; *************** function _strcspn *****************
  2660 ;; Defined at:
  2661 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcspn.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  s1              1    wreg     PTR const unsigned char 
  2664 ;;		 -> main@line(32), NULL(0), 
  2665 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
  2666 ;;		 -> main@tokens(3), 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  s1              1    9[BANK0 ] PTR const unsigned char 
  2669 ;;		 -> main@line(32), NULL(0), 
  2670 ;;  i               2    7[BANK0 ] unsigned int 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  2    3[BANK0 ] unsigned int 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;Total ram usage:        7 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    3
  2687 ;; This function calls:
  2688 ;;		_strchr
  2689 ;; This function is called by:
  2690 ;;		_strtok
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _strcspn
  2696  0F2D                     _strcspn:	
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2700                           ;strcspn@s1 stored from wreg
  2701  0F2D  0020               	movlb	0	; select bank0
  2702  0F2E  00A9               	movwf	strcspn@s1
  2703  0F2F  01A7               	clrf	strcspn@i
  2704  0F30  01A8               	clrf	strcspn@i+1
  2705  0F31  2F3B               	goto	l2868
  2706  0F32                     l2866:	
  2707  0F32  3001               	movlw	1
  2708  0F33  0020               	movlb	0	; select bank0
  2709  0F34  00A5               	movwf	??_strcspn
  2710  0F35  0825               	movf	??_strcspn,w
  2711  0F36  07A9               	addwf	strcspn@s1,f
  2712  0F37  3001               	movlw	1
  2713  0F38  07A7               	addwf	strcspn@i,f
  2714  0F39  3000               	movlw	0
  2715  0F3A  3DA8               	addwfc	strcspn@i+1,f
  2716  0F3B                     l2868:	
  2717  0F3B  0829               	movf	strcspn@s1,w
  2718  0F3C  0086               	movwf	6
  2719  0F3D  0187               	clrf	7
  2720  0F3E  0801               	movf	1,w
  2721  0F3F  1903               	btfsc	3,2
  2722  0F40  2F56               	goto	l2872
  2723  0F41  0823               	movf	strcspn@s2,w
  2724  0F42  00F3               	movwf	strchr@ptr
  2725  0F43  0824               	movf	strcspn@s2+1,w
  2726  0F44  00F4               	movwf	strchr@ptr+1
  2727  0F45  0829               	movf	strcspn@s1,w
  2728  0F46  0086               	movwf	6
  2729  0F47  0187               	clrf	7
  2730  0F48  0801               	movf	1,w
  2731  0F49  00A5               	movwf	??_strcspn
  2732  0F4A  01A6               	clrf	??_strcspn+1
  2733  0F4B  0825               	movf	??_strcspn,w
  2734  0F4C  00F5               	movwf	strchr@chr
  2735  0F4D  0826               	movf	??_strcspn+1,w
  2736  0F4E  00F6               	movwf	strchr@chr+1
  2737  0F4F  318E  262D  318F   	fcall	_strchr
  2738  0F52  0873               	movf	?_strchr,w
  2739  0F53  0474               	iorwf	?_strchr+1,w
  2740  0F54  1903               	btfsc	3,2
  2741  0F55  2F32               	goto	l2866
  2742  0F56                     l2872:	
  2743  0F56  0020               	movlb	0	; select bank0
  2744  0F57  0828               	movf	strcspn@i+1,w
  2745  0F58  00A4               	movwf	?_strcspn+1
  2746  0F59  0827               	movf	strcspn@i,w
  2747  0F5A  00A3               	movwf	?_strcspn
  2748  0F5B  0008               	return
  2749  0F5C                     __end_of_strcspn:	
  2750                           
  2751                           	psect	text7
  2752  0E2D                     __ptext7:	
  2753 ;; *************** function _strchr *****************
  2754 ;; Defined at:
  2755 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strchr.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  ptr             2    3[COMMON] PTR const unsigned char 
  2758 ;;		 -> main@tokens(3), 
  2759 ;;  chr             2    5[COMMON] int 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2    3[COMMON] PTR unsigned char 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;Total ram usage:        7 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    2
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_strcspn
  2782 ;;		_strspn
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _strchr
  2788  0E2D                     _strchr:	
  2789  0E2D                     l819:	
  2790                           ;incstack = 0
  2791                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  2792                           
  2793  0E2D  0873               	movf	strchr@ptr,w
  2794  0E2E  0084               	movwf	4
  2795  0E2F  0874               	movf	strchr@ptr+1,w
  2796  0E30  0085               	movwf	5
  2797  0E31  0800               	movf	0,w	;code access
  2798  0E32  0675               	xorwf	strchr@chr,w
  2799  0E33  1903               	btfsc	3,2
  2800  0E34  0008               	return
  2801  0E35  0874               	movf	strchr@ptr+1,w
  2802  0E36  0020               	movlb	0	; select bank0
  2803  0E37  00A1               	movwf	??_strchr+1
  2804  0E38  0873               	movf	strchr@ptr,w
  2805  0E39  00A0               	movwf	??_strchr
  2806  0E3A  0AF3               	incf	strchr@ptr,f
  2807  0E3B  1903               	skipnz
  2808  0E3C  0AF4               	incf	strchr@ptr+1,f
  2809  0E3D  0820               	movf	??_strchr,w
  2810  0E3E  0084               	movwf	4
  2811  0E3F  0821               	movf	??_strchr+1,w
  2812  0E40  0085               	movwf	5
  2813  0E41  0012               	moviw fsr0++
  2814  0E42  1D03               	btfss	3,2
  2815  0E43  2E2D               	goto	l819
  2816  0E44  01F3               	clrf	?_strchr
  2817  0E45  01F4               	clrf	?_strchr+1
  2818  0E46  0008               	return
  2819  0E47                     __end_of_strchr:	
  2820                           
  2821                           	psect	text8
  2822  0EE1                     __ptext8:	
  2823 ;; *************** function _strlen *****************
  2824 ;; Defined at:
  2825 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  s               1    wreg     PTR const unsigned char 
  2828 ;;		 -> main@line(32), NULL(0), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  s               1    5[COMMON] PTR const unsigned char 
  2831 ;;		 -> main@line(32), NULL(0), 
  2832 ;;  cp              1    6[COMMON] PTR const unsigned char 
  2833 ;;		 -> main@line(32), NULL(0), 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2    3[COMMON] unsigned int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:        8 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    2
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _strlen
  2859  0EE1                     _strlen:	
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2863                           ;strlen@s stored from wreg
  2864  0EE1  00F5               	movwf	strlen@s
  2865  0EE2  0875               	movf	strlen@s,w
  2866  0EE3  0020               	movlb	0	; select bank0
  2867  0EE4  00A0               	movwf	??_strlen
  2868  0EE5  0820               	movf	??_strlen,w
  2869  0EE6  00F6               	movwf	strlen@cp
  2870  0EE7                     l2976:	
  2871  0EE7  0876               	movf	strlen@cp,w
  2872  0EE8  0086               	movwf	6
  2873  0EE9  0187               	clrf	7
  2874  0EEA  0801               	movf	1,w
  2875  0EEB  1903               	btfsc	3,2
  2876  0EEC  2EF2               	goto	l2978
  2877  0EED  3001               	movlw	1
  2878  0EEE  00A0               	movwf	??_strlen
  2879  0EEF  0820               	movf	??_strlen,w
  2880  0EF0  07F6               	addwf	strlen@cp,f
  2881  0EF1  2EE7               	goto	l2976
  2882  0EF2                     l2978:	
  2883  0EF2  0875               	movf	strlen@s,w
  2884  0EF3  00A0               	movwf	??_strlen
  2885  0EF4  3000               	movlw	0
  2886  0EF5  00A1               	movwf	??_strlen+1
  2887  0EF6  09A0               	comf	??_strlen,f
  2888  0EF7  09A1               	comf	??_strlen+1,f
  2889  0EF8  0AA0               	incf	??_strlen,f
  2890  0EF9  1903               	skipnz
  2891  0EFA  0AA1               	incf	??_strlen+1,f
  2892  0EFB  0876               	movf	strlen@cp,w
  2893  0EFC  00A2               	movwf	??_strlen+2
  2894  0EFD  3000               	movlw	0
  2895  0EFE  00A3               	movwf	??_strlen+3
  2896  0EFF  0820               	movf	??_strlen,w
  2897  0F00  0722               	addwf	??_strlen+2,w
  2898  0F01  00F3               	movwf	?_strlen
  2899  0F02  0821               	movf	??_strlen+1,w
  2900  0F03  3D23               	addwfc	??_strlen+3,w
  2901  0F04  00F4               	movwf	?_strlen+1
  2902  0F05  0008               	return
  2903  0F06                     __end_of_strlen:	
  2904                           
  2905                           	psect	text9
  2906  0F06                     __ptext9:	
  2907 ;; *************** function _strcmp *****************
  2908 ;; Defined at:
  2909 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  s1              1    wreg     PTR const unsigned char 
  2912 ;;		 -> main@line(32), NULL(0), 
  2913 ;;  s2              2    3[COMMON] PTR const unsigned char 
  2914 ;;		 -> STR_6(5), STR_4(5), STR_2(6), STR_1(4), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  s1              1    7[COMMON] PTR const unsigned char 
  2917 ;;		 -> main@line(32), NULL(0), 
  2918 ;;  r               1    6[COMMON] char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  2    3[COMMON] int 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;Total ram usage:        5 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _strcmp
  2944  0F06                     _strcmp:	
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  2948                           ;strcmp@s1 stored from wreg
  2949  0F06  00F7               	movwf	strcmp@s1
  2950  0F07  2F10               	goto	l2254
  2951  0F08                     l2252:	
  2952  0F08  3001               	movlw	1
  2953  0F09  00F5               	movwf	??_strcmp
  2954  0F0A  0875               	movf	??_strcmp,w
  2955  0F0B  07F7               	addwf	strcmp@s1,f
  2956  0F0C  3001               	movlw	1
  2957  0F0D  07F3               	addwf	strcmp@s2,f
  2958  0F0E  3000               	movlw	0
  2959  0F0F  3DF4               	addwfc	strcmp@s2+1,f
  2960  0F10                     l2254:	
  2961  0F10  0877               	movf	strcmp@s1,w
  2962  0F11  0086               	movwf	6
  2963  0F12  0187               	clrf	7
  2964  0F13  0873               	movf	strcmp@s2,w
  2965  0F14  0084               	movwf	4
  2966  0F15  0874               	movf	strcmp@s2+1,w
  2967  0F16  0085               	movwf	5
  2968  0F17  0800               	movf	0,w	;code access
  2969  0F18  3AFF               	xorlw	255
  2970  0F19  3E01               	addlw	1
  2971  0F1A  0701               	addwf	1,w
  2972  0F1B  00F5               	movwf	??_strcmp
  2973  0F1C  0875               	movf	??_strcmp,w
  2974  0F1D  00F6               	movwf	strcmp@r
  2975  0F1E  0876               	movf	strcmp@r,w
  2976  0F1F  1D03               	btfss	3,2
  2977  0F20  2F27               	goto	l2258
  2978  0F21  0877               	movf	strcmp@s1,w
  2979  0F22  0086               	movwf	6
  2980  0F23  0187               	clrf	7
  2981  0F24  0801               	movf	1,w
  2982  0F25  1D03               	btfss	3,2
  2983  0F26  2F08               	goto	l2252
  2984  0F27                     l2258:	
  2985  0F27  0876               	movf	strcmp@r,w
  2986  0F28  00F3               	movwf	?_strcmp
  2987  0F29  01F4               	clrf	?_strcmp+1
  2988  0F2A  1BF3               	btfsc	?_strcmp,7
  2989  0F2B  03F4               	decf	?_strcmp+1,f
  2990  0F2C  0008               	return
  2991  0F2D                     __end_of_strcmp:	
  2992                           
  2993                           	psect	text10
  2994  0E1E                     __ptext10:	
  2995 ;; *************** function _setup *****************
  2996 ;; Defined at:
  2997 ;;		line 7 in file "settings.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  2   31[None  ] int 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;Total ram usage:        0 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    4
  3018 ;; This function calls:
  3019 ;;		_uart_setup
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _setup
  3027  0E1E                     _setup:	
  3028                           
  3029                           ;settings.c: 8: uart_setup();
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in _setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3033  0E1E  318E  26A0         	fcall	_uart_setup
  3034                           
  3035                           ;settings.c: 9: TRISA = 0x00;
  3036  0E20  0021               	movlb	1	; select bank1
  3037  0E21  018C               	clrf	12	;volatile
  3038                           
  3039                           ;settings.c: 10: TRISB = 0b00001111;
  3040  0E22  300F               	movlw	15
  3041  0E23  008D               	movwf	13	;volatile
  3042                           
  3043                           ;settings.c: 11: TRISC = 0b10000000;
  3044  0E24  3080               	movlw	128
  3045  0E25  008E               	movwf	14	;volatile
  3046                           
  3047                           ;settings.c: 12: OSCCON = 0b11110000;
  3048  0E26  30F0               	movlw	240
  3049  0E27  0099               	movwf	25	;volatile
  3050                           
  3051                           ;settings.c: 13: ANSELA = 0x00;
  3052  0E28  0023               	movlb	3	; select bank3
  3053  0E29  018C               	clrf	12	;volatile
  3054                           
  3055                           ;settings.c: 14: ANSELB = 0x00;
  3056  0E2A  018D               	clrf	13	;volatile
  3057                           
  3058                           ;settings.c: 16: GIE=1;
  3059  0E2B  178B               	bsf	11,7	;volatile
  3060  0E2C  0008               	return
  3061  0E2D                     __end_of_setup:	
  3062                           
  3063                           	psect	text11
  3064  0EA0                     __ptext11:	
  3065 ;; *************** function _uart_setup *****************
  3066 ;; Defined at:
  3067 ;;		line 14 in file "uart.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2   15[None  ] int 
  3074 ;; Registers used:
  3075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    3
  3088 ;; This function calls:
  3089 ;;		_memset
  3090 ;; This function is called by:
  3091 ;;		_setup
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           
  3096                           ;psect for function _uart_setup
  3097  0EA0                     _uart_setup:	
  3098                           
  3099                           ;uart.c: 16: memset(rxbuf,0,sizeof(rxbuf));
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _uart_setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3103  0EA0  3000               	movlw	0
  3104  0EA1  00F3               	movwf	memset@c
  3105  0EA2  00F4               	movwf	memset@c+1
  3106  0EA3  3020               	movlw	32
  3107  0EA4  00F5               	movwf	memset@n
  3108  0EA5  3000               	movlw	0
  3109  0EA6  00F6               	movwf	memset@n+1
  3110  0EA7  30C0               	movlw	(low (_rxbuf| (0+256)))& (0+255)
  3111  0EA8  318E  2647         	fcall	_memset
  3112                           
  3113                           ;uart.c: 17: rx_in = 0;
  3114  0EAA  01F8               	clrf	_rx_in
  3115                           
  3116                           ;uart.c: 18: rx_out = 0;
  3117  0EAB  01F9               	clrf	_rx_out
  3118                           
  3119                           ;uart.c: 19: rx_used = 0;
  3120  0EAC  0020               	movlb	0	; select bank0
  3121  0EAD  01E8               	clrf	_rx_used
  3122                           
  3123                           ;uart.c: 21: SPBRG = 42;
  3124  0EAE  302A               	movlw	42
  3125  0EAF  0023               	movlb	3	; select bank3
  3126  0EB0  009B               	movwf	27	;volatile
  3127                           
  3128                           ;uart.c: 23: RCSTA = 0b10010000;
  3129  0EB1  3090               	movlw	144
  3130  0EB2  009D               	movwf	29	;volatile
  3131                           
  3132                           ;uart.c: 24: TXSTA = 0b00100000;
  3133  0EB3  3020               	movlw	32
  3134  0EB4  009E               	movwf	30	;volatile
  3135                           
  3136                           ;uart.c: 26: RCIF = 0;
  3137  0EB5  0020               	movlb	0	; select bank0
  3138  0EB6  1291               	bcf	17,5	;volatile
  3139                           
  3140                           ;uart.c: 27: RCIE = 1;
  3141  0EB7  0021               	movlb	1	; select bank1
  3142  0EB8  1691               	bsf	17,5	;volatile
  3143                           
  3144                           ;uart.c: 28: PEIE = 1;
  3145  0EB9  170B               	bsf	11,6	;volatile
  3146                           
  3147                           ;uart.c: 30: TXIE = 1;
  3148  0EBA  1611               	bsf	17,4	;volatile
  3149                           
  3150                           ;uart.c: 31: TXIE = 1;
  3151  0EBB  1611               	bsf	17,4	;volatile
  3152                           
  3153                           ;uart.c: 32: TXIF = 0;
  3154  0EBC  0020               	movlb	0	; select bank0
  3155  0EBD  1211               	bcf	17,4	;volatile
  3156  0EBE  0008               	return
  3157  0EBF                     __end_of_uart_setup:	
  3158                           
  3159                           	psect	text12
  3160  0E47                     __ptext12:	
  3161 ;; *************** function _memset *****************
  3162 ;; Defined at:
  3163 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  p1              1    wreg     PTR void 
  3166 ;;		 -> rxbuf(32), 
  3167 ;;  c               2    3[COMMON] int 
  3168 ;;  n               2    5[COMMON] unsigned int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  p1              1    0[BANK0 ] PTR void 
  3171 ;;		 -> rxbuf(32), 
  3172 ;;  p               1    1[BANK0 ] PTR unsigned char 
  3173 ;;		 -> rxbuf(32), 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      PTR void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;Total ram usage:        7 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_uart_setup
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function _memset
  3199  0E47                     _memset:	
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3203                           ;memset@p1 stored from wreg
  3204  0E47  0020               	movlb	0	; select bank0
  3205  0E48  00A0               	movwf	memset@p1
  3206  0E49  0820               	movf	memset@p1,w
  3207  0E4A  00F7               	movwf	??_memset
  3208  0E4B  0877               	movf	??_memset,w
  3209  0E4C  00A1               	movwf	memset@p
  3210  0E4D                     l2682:	
  3211  0E4D  3001               	movlw	1
  3212  0E4E  02F5               	subwf	memset@n,f
  3213  0E4F  3000               	movlw	0
  3214  0E50  3BF6               	subwfb	memset@n+1,f
  3215  0E51  0A75               	incf	memset@n,w
  3216  0E52  1903               	btfsc	3,2
  3217  0E53  0A76               	incf	memset@n+1,w
  3218  0E54  1903               	btfsc	3,2
  3219  0E55  0008               	return
  3220  0E56  0873               	movf	memset@c,w
  3221  0E57  00F7               	movwf	??_memset
  3222  0E58  0821               	movf	memset@p,w
  3223  0E59  0086               	movwf	6
  3224  0E5A  3001               	movlw	1	; select bank2/3
  3225  0E5B  0087               	movwf	7
  3226  0E5C  0877               	movf	??_memset,w
  3227  0E5D  0081               	movwf	1
  3228  0E5E  3001               	movlw	1
  3229  0E5F  00F7               	movwf	??_memset
  3230  0E60  0877               	movf	??_memset,w
  3231  0E61  07A1               	addwf	memset@p,f
  3232  0E62  2E4D               	goto	l2682
  3233  0E63                     __end_of_memset:	
  3234                           ;	Return value of _memset is never used
  3235                           
  3236                           
  3237                           	psect	text13
  3238  0291                     __ptext13:	
  3239 ;; *************** function _right *****************
  3240 ;; Defined at:
  3241 ;;		line 25 in file "rotation.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  mal             2   63[BANK0 ] int 
  3244 ;;  speed           2   65[BANK0 ] int 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  i               2    4[BANK1 ] int 
  3247 ;;  k               2    2[BANK1 ] int 
  3248 ;;  pluse           2    0[BANK1 ] unsigned int 
  3249 ;; Return value:  Size  Location     Type
  3250 ;;		None               void
  3251 ;; Registers used:
  3252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3259 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Totals:         0       7       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;Total ram usage:       13 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    6
  3265 ;; This function calls:
  3266 ;;		_step
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function _right
  3274  0291                     _right:	
  3275                           
  3276                           ;rotation.c: 26: int k = 0;
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _right: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3280  0291  0021               	movlb	1	; select bank1
  3281  0292  01A2               	clrf	right@k^(0+128)
  3282  0293  01A3               	clrf	(right@k+1)^(0+128)
  3283                           
  3284                           ;rotation.c: 27: uint16_t pluse = step(mal);
  3285  0294  0020               	movlb	0	; select bank0
  3286  0295  0860               	movf	right@mal+1,w
  3287  0296  00D9               	movwf	step@deg+1
  3288  0297  085F               	movf	right@mal,w
  3289  0298  00D8               	movwf	step@deg
  3290  0299  3187  270C  3182   	fcall	_step
  3291  029C  0020               	movlb	0	; select bank0
  3292  029D  0859               	movf	?_step+1,w
  3293  029E  0021               	movlb	1	; select bank1
  3294  029F  00A1               	movwf	(right@pluse+1)^(0+128)
  3295  02A0  0020               	movlb	0	; select bank0
  3296  02A1  0858               	movf	?_step,w
  3297  02A2  0021               	movlb	1	; select bank1
  3298  02A3  00A0               	movwf	right@pluse^(0+128)
  3299  02A4                     l2948:	
  3300                           ;rotation.c: 28: while(k < pluse-20){
  3301                           
  3302  02A4  0021               	movlb	1	; select bank1
  3303  02A5  0820               	movf	right@pluse^(0+128),w
  3304  02A6  3EEC               	addlw	236
  3305  02A7  0020               	movlb	0	; select bank0
  3306  02A8  00E3               	movwf	??_right
  3307  02A9  30FF               	movlw	255
  3308  02AA  0021               	movlb	1	; select bank1
  3309  02AB  3D21               	addwfc	(right@pluse+1)^(0+128),w
  3310  02AC  0020               	movlb	0	; select bank0
  3311  02AD  00E4               	movwf	??_right+1
  3312  02AE  0864               	movf	??_right+1,w
  3313  02AF  0021               	movlb	1	; select bank1
  3314  02B0  0223               	subwf	(right@k+1)^(0+128),w
  3315  02B1  1D03               	skipz
  3316  02B2  2AB7               	goto	u4155
  3317  02B3  0020               	movlb	0	; select bank0
  3318  02B4  0863               	movf	??_right,w
  3319  02B5  0021               	movlb	1	; select bank1
  3320  02B6  0222               	subwf	right@k^(0+128),w
  3321  02B7                     u4155:	
  3322  02B7  1803               	btfsc	3,0
  3323  02B8  0008               	return
  3324                           
  3325                           ;rotation.c: 29: for(int i = 0;i < 4;i++){
  3326  02B9  01A4               	clrf	right@i^(0+128)
  3327  02BA  01A5               	clrf	(right@i+1)^(0+128)
  3328  02BB                     L5:	
  3329  02BB  0825               	movf	(right@i+1)^(0+128),w
  3330  02BC  3A80               	xorlw	128
  3331  02BD  0020               	movlb	0	; select bank0
  3332  02BE  00E3               	movwf	??_right
  3333  02BF  3080               	movlw	128
  3334  02C0  0263               	subwf	??_right,w
  3335  02C1  1D03               	skipz
  3336  02C2  2AC6               	goto	u4015
  3337  02C3  3004               	movlw	4
  3338  02C4  0021               	movlb	1	; select bank1
  3339  02C5  0224               	subwf	right@i^(0+128),w
  3340  02C6                     u4015:	
  3341  02C6  1803               	btfsc	3,0
  3342  02C7  2AA4               	goto	l2948
  3343                           
  3344                           ;rotation.c: 30: RA0 = step_pattern_right[i][0];
  3345  02C8  0021               	movlb	1	; select bank1
  3346  02C9  0824               	movf	right@i^(0+128),w
  3347  02CA  0020               	movlb	0	; select bank0
  3348  02CB  00E3               	movwf	??_right
  3349  02CC  3002               	movlw	2
  3350  02CD                     u4025:	
  3351  02CD  35E3               	lslf	??_right,f
  3352  02CE  3EFF               	addlw	-1
  3353  02CF  1D03               	skipz
  3354  02D0  2ACD               	goto	u4025
  3355  02D1  3563               	lslf	??_right,w
  3356  02D2  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3357  02D3  0086               	movwf	6
  3358  02D4  3001               	movlw	1	; select bank2/3
  3359  02D5  0087               	movwf	7
  3360  02D6  3F40               	moviw [0]fsr1
  3361  02D7  00E4               	movwf	??_right+1
  3362  02D8  3F41               	moviw [1]fsr1
  3363  02D9  00E5               	movwf	??_right+2
  3364  02DA  1C64               	btfss	??_right+1,0
  3365  02DB  2ADF               	goto	u4030
  3366  02DC  0020               	movlb	0	; select bank0
  3367  02DD  140C               	bsf	12,0	;volatile
  3368  02DE  2AE1               	goto	u4044
  3369  02DF                     u4030:	
  3370  02DF  0020               	movlb	0	; select bank0
  3371  02E0  100C               	bcf	12,0	;volatile
  3372  02E1                     u4044:	
  3373                           
  3374                           ;rotation.c: 31: RA4 = step_pattern_right[i][1];
  3375  02E1  0021               	movlb	1	; select bank1
  3376  02E2  0824               	movf	right@i^(0+128),w
  3377  02E3  0020               	movlb	0	; select bank0
  3378  02E4  00E3               	movwf	??_right
  3379  02E5  3002               	movlw	2
  3380  02E6                     u4055:	
  3381  02E6  35E3               	lslf	??_right,f
  3382  02E7  3EFF               	addlw	-1
  3383  02E8  1D03               	skipz
  3384  02E9  2AE6               	goto	u4055
  3385  02EA  3563               	lslf	??_right,w
  3386  02EB  3E02               	addlw	2
  3387  02EC  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3388  02ED  0086               	movwf	6
  3389  02EE  3001               	movlw	1	; select bank2/3
  3390  02EF  0087               	movwf	7
  3391  02F0  3F40               	moviw [0]fsr1
  3392  02F1  00E4               	movwf	??_right+1
  3393  02F2  3F41               	moviw [1]fsr1
  3394  02F3  00E5               	movwf	??_right+2
  3395  02F4  1C64               	btfss	??_right+1,0
  3396  02F5  2AF9               	goto	u4060
  3397  02F6  0020               	movlb	0	; select bank0
  3398  02F7  160C               	bsf	12,4	;volatile
  3399  02F8  2AFB               	goto	u4074
  3400  02F9                     u4060:	
  3401  02F9  0020               	movlb	0	; select bank0
  3402  02FA  120C               	bcf	12,4	;volatile
  3403  02FB                     u4074:	
  3404                           
  3405                           ;rotation.c: 32: RC1 = step_pattern_right[i][2];
  3406  02FB  0021               	movlb	1	; select bank1
  3407  02FC  0824               	movf	right@i^(0+128),w
  3408  02FD  0020               	movlb	0	; select bank0
  3409  02FE  00E3               	movwf	??_right
  3410  02FF  3002               	movlw	2
  3411  0300                     u4085:	
  3412  0300  35E3               	lslf	??_right,f
  3413  0301  3EFF               	addlw	-1
  3414  0302  1D03               	skipz
  3415  0303  2B00               	goto	u4085
  3416  0304  3563               	lslf	??_right,w
  3417  0305  3E04               	addlw	4
  3418  0306  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3419  0307  0086               	movwf	6
  3420  0308  3001               	movlw	1	; select bank2/3
  3421  0309  0087               	movwf	7
  3422  030A  3F40               	moviw [0]fsr1
  3423  030B  00E4               	movwf	??_right+1
  3424  030C  3F41               	moviw [1]fsr1
  3425  030D  00E5               	movwf	??_right+2
  3426  030E  1C64               	btfss	??_right+1,0
  3427  030F  2B13               	goto	u4090
  3428  0310  0020               	movlb	0	; select bank0
  3429  0311  148E               	bsf	14,1	;volatile
  3430  0312  2B15               	goto	u4104
  3431  0313                     u4090:	
  3432  0313  0020               	movlb	0	; select bank0
  3433  0314  108E               	bcf	14,1	;volatile
  3434  0315                     u4104:	
  3435                           
  3436                           ;rotation.c: 33: RC2 = step_pattern_right[i][3];
  3437  0315  0021               	movlb	1	; select bank1
  3438  0316  0824               	movf	right@i^(0+128),w
  3439  0317  0020               	movlb	0	; select bank0
  3440  0318  00E3               	movwf	??_right
  3441  0319  3002               	movlw	2
  3442  031A                     u4115:	
  3443  031A  35E3               	lslf	??_right,f
  3444  031B  3EFF               	addlw	-1
  3445  031C  1D03               	skipz
  3446  031D  2B1A               	goto	u4115
  3447  031E  3563               	lslf	??_right,w
  3448  031F  3E06               	addlw	6
  3449  0320  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3450  0321  0086               	movwf	6
  3451  0322  3001               	movlw	1	; select bank2/3
  3452  0323  0087               	movwf	7
  3453  0324  3F40               	moviw [0]fsr1
  3454  0325  00E4               	movwf	??_right+1
  3455  0326  3F41               	moviw [1]fsr1
  3456  0327  00E5               	movwf	??_right+2
  3457  0328  1C64               	btfss	??_right+1,0
  3458  0329  2B2D               	goto	u4120
  3459  032A  0020               	movlb	0	; select bank0
  3460  032B  150E               	bsf	14,2	;volatile
  3461  032C  2B2F               	goto	l2940
  3462  032D                     u4120:	
  3463  032D  0020               	movlb	0	; select bank0
  3464  032E  110E               	bcf	14,2	;volatile
  3465  032F                     l2940:	
  3466                           
  3467                           ;rotation.c: 34: _delay((unsigned long)((3000)*(8000000/4000000.0)));
  3468  032F  3008               	movlw	8
  3469  0330  00E4               	movwf	??_right+1
  3470  0331  30C9               	movlw	201
  3471  0332  00E3               	movwf	??_right
  3472  0333                     u4567:	
  3473  0333  0BE3               	decfsz	??_right,f
  3474  0334  2B33               	goto	u4567
  3475  0335  0BE4               	decfsz	??_right+1,f
  3476  0336  2B33               	goto	u4567
  3477  0337  3200               	nop2
  3478                           
  3479                           ;rotation.c: 35: k++;
  3480  0338  3001               	movlw	1
  3481  0339  0021               	movlb	1	; select bank1
  3482  033A  07A2               	addwf	right@k^(0+128),f
  3483  033B  3000               	movlw	0
  3484  033C  3DA3               	addwfc	(right@k+1)^(0+128),f
  3485  033D  3001               	movlw	1
  3486  033E  07A4               	addwf	right@i^(0+128),f
  3487  033F  3000               	movlw	0
  3488  0340  3DA5               	addwfc	(right@i+1)^(0+128),f
  3489  0341  2ABB               	goto	L5
  3490  0342                     __end_of_right:	
  3491                           
  3492                           	psect	text14
  3493  0342                     __ptext14:	
  3494 ;; *************** function _left *****************
  3495 ;; Defined at:
  3496 ;;		line 40 in file "rotation.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  mal             2   63[BANK0 ] int 
  3499 ;;  speed           2   65[BANK0 ] int 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  i               2    4[BANK1 ] int 
  3502 ;;  k               2    2[BANK1 ] int 
  3503 ;;  pluse           2    0[BANK1 ] unsigned int 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;		None               void
  3506 ;; Registers used:
  3507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Totals:         0       7       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;Total ram usage:       13 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    6
  3520 ;; This function calls:
  3521 ;;		_step
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _left
  3529  0342                     _left:	
  3530                           
  3531                           ;rotation.c: 41: int i;
  3532                           ;rotation.c: 42: int k = 0;
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _left: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3536  0342  0021               	movlb	1	; select bank1
  3537  0343  01A2               	clrf	left@k^(0+128)
  3538  0344  01A3               	clrf	(left@k+1)^(0+128)
  3539                           
  3540                           ;rotation.c: 43: uint16_t pluse = step(mal);
  3541  0345  0020               	movlb	0	; select bank0
  3542  0346  0860               	movf	left@mal+1,w
  3543  0347  00D9               	movwf	step@deg+1
  3544  0348  085F               	movf	left@mal,w
  3545  0349  00D8               	movwf	step@deg
  3546  034A  3187  270C  3183   	fcall	_step
  3547  034D  0020               	movlb	0	; select bank0
  3548  034E  0859               	movf	?_step+1,w
  3549  034F  0021               	movlb	1	; select bank1
  3550  0350  00A1               	movwf	(left@pluse+1)^(0+128)
  3551  0351  0020               	movlb	0	; select bank0
  3552  0352  0858               	movf	?_step,w
  3553  0353  0021               	movlb	1	; select bank1
  3554  0354  00A0               	movwf	left@pluse^(0+128)
  3555  0355                     l2970:	
  3556                           ;rotation.c: 44: while(k < pluse-20){
  3557                           
  3558  0355  0021               	movlb	1	; select bank1
  3559  0356  0820               	movf	left@pluse^(0+128),w
  3560  0357  3EEC               	addlw	236
  3561  0358  0020               	movlb	0	; select bank0
  3562  0359  00E3               	movwf	??_left
  3563  035A  30FF               	movlw	255
  3564  035B  0021               	movlb	1	; select bank1
  3565  035C  3D21               	addwfc	(left@pluse+1)^(0+128),w
  3566  035D  0020               	movlb	0	; select bank0
  3567  035E  00E4               	movwf	??_left+1
  3568  035F  0864               	movf	??_left+1,w
  3569  0360  0021               	movlb	1	; select bank1
  3570  0361  0223               	subwf	(left@k+1)^(0+128),w
  3571  0362  1D03               	skipz
  3572  0363  2B68               	goto	u4305
  3573  0364  0020               	movlb	0	; select bank0
  3574  0365  0863               	movf	??_left,w
  3575  0366  0021               	movlb	1	; select bank1
  3576  0367  0222               	subwf	left@k^(0+128),w
  3577  0368                     u4305:	
  3578  0368  1803               	btfsc	3,0
  3579  0369  0008               	return
  3580                           
  3581                           ;rotation.c: 45: for(i = 0;i < 4;i++){
  3582  036A  01A4               	clrf	left@i^(0+128)
  3583  036B  01A5               	clrf	(left@i+1)^(0+128)
  3584  036C                     L6:	
  3585  036C  0825               	movf	(left@i+1)^(0+128),w
  3586  036D  3A80               	xorlw	128
  3587  036E  0020               	movlb	0	; select bank0
  3588  036F  00E3               	movwf	??_left
  3589  0370  3080               	movlw	128
  3590  0371  0263               	subwf	??_left,w
  3591  0372  1D03               	skipz
  3592  0373  2B77               	goto	u4165
  3593  0374  3004               	movlw	4
  3594  0375  0021               	movlb	1	; select bank1
  3595  0376  0224               	subwf	left@i^(0+128),w
  3596  0377                     u4165:	
  3597  0377  1803               	btfsc	3,0
  3598  0378  2B55               	goto	l2970
  3599                           
  3600                           ;rotation.c: 46: RA0 = step_pattern_left[i][0];
  3601  0379  0021               	movlb	1	; select bank1
  3602  037A  0824               	movf	left@i^(0+128),w
  3603  037B  0020               	movlb	0	; select bank0
  3604  037C  00E3               	movwf	??_left
  3605  037D  3002               	movlw	2
  3606  037E                     u4175:	
  3607  037E  35E3               	lslf	??_left,f
  3608  037F  3EFF               	addlw	-1
  3609  0380  1D03               	skipz
  3610  0381  2B7E               	goto	u4175
  3611  0382  3563               	lslf	??_left,w
  3612  0383  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3613  0384  0086               	movwf	6
  3614  0385  3001               	movlw	1	; select bank2/3
  3615  0386  0087               	movwf	7
  3616  0387  3F40               	moviw [0]fsr1
  3617  0388  00E4               	movwf	??_left+1
  3618  0389  3F41               	moviw [1]fsr1
  3619  038A  00E5               	movwf	??_left+2
  3620  038B  1C64               	btfss	??_left+1,0
  3621  038C  2B90               	goto	u4180
  3622  038D  0020               	movlb	0	; select bank0
  3623  038E  140C               	bsf	12,0	;volatile
  3624  038F  2B92               	goto	u4194
  3625  0390                     u4180:	
  3626  0390  0020               	movlb	0	; select bank0
  3627  0391  100C               	bcf	12,0	;volatile
  3628  0392                     u4194:	
  3629                           
  3630                           ;rotation.c: 47: RA4 = step_pattern_left[i][1];
  3631  0392  0021               	movlb	1	; select bank1
  3632  0393  0824               	movf	left@i^(0+128),w
  3633  0394  0020               	movlb	0	; select bank0
  3634  0395  00E3               	movwf	??_left
  3635  0396  3002               	movlw	2
  3636  0397                     u4205:	
  3637  0397  35E3               	lslf	??_left,f
  3638  0398  3EFF               	addlw	-1
  3639  0399  1D03               	skipz
  3640  039A  2B97               	goto	u4205
  3641  039B  3563               	lslf	??_left,w
  3642  039C  3E02               	addlw	2
  3643  039D  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3644  039E  0086               	movwf	6
  3645  039F  3001               	movlw	1	; select bank2/3
  3646  03A0  0087               	movwf	7
  3647  03A1  3F40               	moviw [0]fsr1
  3648  03A2  00E4               	movwf	??_left+1
  3649  03A3  3F41               	moviw [1]fsr1
  3650  03A4  00E5               	movwf	??_left+2
  3651  03A5  1C64               	btfss	??_left+1,0
  3652  03A6  2BAA               	goto	u4210
  3653  03A7  0020               	movlb	0	; select bank0
  3654  03A8  160C               	bsf	12,4	;volatile
  3655  03A9  2BAC               	goto	u4224
  3656  03AA                     u4210:	
  3657  03AA  0020               	movlb	0	; select bank0
  3658  03AB  120C               	bcf	12,4	;volatile
  3659  03AC                     u4224:	
  3660                           
  3661                           ;rotation.c: 48: RC1 = step_pattern_left[i][2];
  3662  03AC  0021               	movlb	1	; select bank1
  3663  03AD  0824               	movf	left@i^(0+128),w
  3664  03AE  0020               	movlb	0	; select bank0
  3665  03AF  00E3               	movwf	??_left
  3666  03B0  3002               	movlw	2
  3667  03B1                     u4235:	
  3668  03B1  35E3               	lslf	??_left,f
  3669  03B2  3EFF               	addlw	-1
  3670  03B3  1D03               	skipz
  3671  03B4  2BB1               	goto	u4235
  3672  03B5  3563               	lslf	??_left,w
  3673  03B6  3E04               	addlw	4
  3674  03B7  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3675  03B8  0086               	movwf	6
  3676  03B9  3001               	movlw	1	; select bank2/3
  3677  03BA  0087               	movwf	7
  3678  03BB  3F40               	moviw [0]fsr1
  3679  03BC  00E4               	movwf	??_left+1
  3680  03BD  3F41               	moviw [1]fsr1
  3681  03BE  00E5               	movwf	??_left+2
  3682  03BF  1C64               	btfss	??_left+1,0
  3683  03C0  2BC4               	goto	u4240
  3684  03C1  0020               	movlb	0	; select bank0
  3685  03C2  148E               	bsf	14,1	;volatile
  3686  03C3  2BC6               	goto	u4254
  3687  03C4                     u4240:	
  3688  03C4  0020               	movlb	0	; select bank0
  3689  03C5  108E               	bcf	14,1	;volatile
  3690  03C6                     u4254:	
  3691                           
  3692                           ;rotation.c: 49: RC2 = step_pattern_left[i][3];
  3693  03C6  0021               	movlb	1	; select bank1
  3694  03C7  0824               	movf	left@i^(0+128),w
  3695  03C8  0020               	movlb	0	; select bank0
  3696  03C9  00E3               	movwf	??_left
  3697  03CA  3002               	movlw	2
  3698  03CB                     u4265:	
  3699  03CB  35E3               	lslf	??_left,f
  3700  03CC  3EFF               	addlw	-1
  3701  03CD  1D03               	skipz
  3702  03CE  2BCB               	goto	u4265
  3703  03CF  3563               	lslf	??_left,w
  3704  03D0  3E06               	addlw	6
  3705  03D1  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3706  03D2  0086               	movwf	6
  3707  03D3  3001               	movlw	1	; select bank2/3
  3708  03D4  0087               	movwf	7
  3709  03D5  3F40               	moviw [0]fsr1
  3710  03D6  00E4               	movwf	??_left+1
  3711  03D7  3F41               	moviw [1]fsr1
  3712  03D8  00E5               	movwf	??_left+2
  3713  03D9  1C64               	btfss	??_left+1,0
  3714  03DA  2BDE               	goto	u4270
  3715  03DB  0020               	movlb	0	; select bank0
  3716  03DC  150E               	bsf	14,2	;volatile
  3717  03DD  2BE0               	goto	l2962
  3718  03DE                     u4270:	
  3719  03DE  0020               	movlb	0	; select bank0
  3720  03DF  110E               	bcf	14,2	;volatile
  3721  03E0                     l2962:	
  3722                           
  3723                           ;rotation.c: 50: _delay((unsigned long)((3000)*(8000000/4000000.0)));
  3724  03E0  3008               	movlw	8
  3725  03E1  00E4               	movwf	??_left+1
  3726  03E2  30C9               	movlw	201
  3727  03E3  00E3               	movwf	??_left
  3728  03E4                     u4577:	
  3729  03E4  0BE3               	decfsz	??_left,f
  3730  03E5  2BE4               	goto	u4577
  3731  03E6  0BE4               	decfsz	??_left+1,f
  3732  03E7  2BE4               	goto	u4577
  3733  03E8  3200               	nop2
  3734                           
  3735                           ;rotation.c: 51: k++;
  3736  03E9  3001               	movlw	1
  3737  03EA  0021               	movlb	1	; select bank1
  3738  03EB  07A2               	addwf	left@k^(0+128),f
  3739  03EC  3000               	movlw	0
  3740  03ED  3DA3               	addwfc	(left@k+1)^(0+128),f
  3741  03EE  3001               	movlw	1
  3742  03EF  07A4               	addwf	left@i^(0+128),f
  3743  03F0  3000               	movlw	0
  3744  03F1  3DA5               	addwfc	(left@i+1)^(0+128),f
  3745  03F2  2B6C               	goto	L6
  3746  03F3                     __end_of_left:	
  3747                           
  3748                           	psect	text15
  3749  070C                     __ptext15:	
  3750 ;; *************** function _step *****************
  3751 ;; Defined at:
  3752 ;;		line 20 in file "rotation.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  deg             2   56[BANK0 ] int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  a               2   61[BANK0 ] unsigned int 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  2   56[BANK0 ] int 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3767 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;Total ram usage:        7 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    5
  3773 ;; This function calls:
  3774 ;;		___awtoft
  3775 ;;		___ftdiv
  3776 ;;		___fttol
  3777 ;;		___wmul
  3778 ;;		_ceil
  3779 ;; This function is called by:
  3780 ;;		_right
  3781 ;;		_left
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           
  3786                           ;psect for function _step
  3787  070C                     _step:	
  3788                           
  3789                           ;rotation.c: 21: uint16_t a=ceil(14*deg/1.8);
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _step: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3793  070C  300E               	movlw	14
  3794  070D  00F5               	movwf	___wmul@multiplicand
  3795  070E  3000               	movlw	0
  3796  070F  00F6               	movwf	___wmul@multiplicand+1
  3797  0710  0020               	movlb	0	; select bank0
  3798  0711  0859               	movf	step@deg+1,w
  3799  0712  00F4               	movwf	___wmul@multiplier+1
  3800  0713  0858               	movf	step@deg,w
  3801  0714  00F3               	movwf	___wmul@multiplier
  3802  0715  318E  2663  3187   	fcall	___wmul
  3803  0718  0874               	movf	?___wmul+1,w
  3804  0719  0020               	movlb	0	; select bank0
  3805  071A  00A4               	movwf	___awtoft@c+1
  3806  071B  0873               	movf	?___wmul,w
  3807  071C  00A3               	movwf	___awtoft@c
  3808  071D  318E  26BF  3187   	fcall	___awtoft
  3809  0720  0020               	movlb	0	; select bank0
  3810  0721  0823               	movf	?___awtoft,w
  3811  0722  00AC               	movwf	___ftdiv@f1
  3812  0723  0824               	movf	?___awtoft+1,w
  3813  0724  00AD               	movwf	___ftdiv@f1+1
  3814  0725  0825               	movf	?___awtoft+2,w
  3815  0726  00AE               	movwf	___ftdiv@f1+2
  3816  0727  3066               	movlw	102
  3817  0728  00A9               	movwf	___ftdiv@f2
  3818  0729  30E6               	movlw	230
  3819  072A  00AA               	movwf	___ftdiv@f2+1
  3820  072B  303F               	movlw	63
  3821  072C  00AB               	movwf	___ftdiv@f2+2
  3822  072D  3183  23F3  3187   	fcall	___ftdiv
  3823  0730  0020               	movlb	0	; select bank0
  3824  0731  0829               	movf	?___ftdiv,w
  3825  0732  00CF               	movwf	ceil@x
  3826  0733  082A               	movf	?___ftdiv+1,w
  3827  0734  00D0               	movwf	ceil@x+1
  3828  0735  082B               	movf	?___ftdiv+2,w
  3829  0736  00D1               	movwf	ceil@x+2
  3830  0737  3185  2523  3187   	fcall	_ceil
  3831  073A  0020               	movlb	0	; select bank0
  3832  073B  084F               	movf	?_ceil,w
  3833  073C  00DA               	movwf	_step$726
  3834  073D  0850               	movf	?_ceil+1,w
  3835  073E  00DB               	movwf	_step$726+1
  3836  073F  0851               	movf	?_ceil+2,w
  3837  0740  00DC               	movwf	_step$726+2
  3838                           
  3839                           ;rotation.c: 21: uint16_t a=ceil(14*deg/1.8);
  3840  0741  085A               	movf	_step$726,w
  3841  0742  00B9               	movwf	___fttol@f1
  3842  0743  085B               	movf	_step$726+1,w
  3843  0744  00BA               	movwf	___fttol@f1+1
  3844  0745  085C               	movf	_step$726+2,w
  3845  0746  00BB               	movwf	___fttol@f1+2
  3846  0747  3184  249C         	fcall	___fttol
  3847  0749  0020               	movlb	0	; select bank0
  3848  074A  083A               	movf	?___fttol+1,w
  3849  074B  00DE               	movwf	step@a+1
  3850  074C  0839               	movf	?___fttol,w
  3851  074D  00DD               	movwf	step@a
  3852                           
  3853                           ;rotation.c: 22: return a;
  3854  074E  085E               	movf	step@a+1,w
  3855  074F  00D9               	movwf	?_step+1
  3856  0750  085D               	movf	step@a,w
  3857  0751  00D8               	movwf	?_step
  3858  0752  0008               	return
  3859  0753                     __end_of_step:	
  3860                           
  3861                           	psect	text16
  3862  0523                     __ptext16:	
  3863 ;; *************** function _ceil *****************
  3864 ;; Defined at:
  3865 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ceil.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  x               3   47[BANK0 ] int 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  i               3   51[BANK0 ] int 
  3870 ;;  expon           2   54[BANK0 ] int 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  3   47[BANK0 ] int 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3880 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;Total ram usage:        9 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    4
  3887 ;; This function calls:
  3888 ;;		___altoft
  3889 ;;		___ftadd
  3890 ;;		___ftge
  3891 ;;		___fttol
  3892 ;;		_frexp
  3893 ;; This function is called by:
  3894 ;;		_step
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _ceil
  3900  0523                     _ceil:	
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in _ceil: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3904  0523  0020               	movlb	0	; select bank0
  3905  0524  084F               	movf	ceil@x,w
  3906  0525  00F3               	movwf	frexp@value
  3907  0526  0850               	movf	ceil@x+1,w
  3908  0527  00F4               	movwf	frexp@value+1
  3909  0528  0851               	movf	ceil@x+2,w
  3910  0529  00F5               	movwf	frexp@value+2
  3911  052A  3056               	movlw	(low (ceil@expon| 0))& (0+255)
  3912  052B  00D2               	movwf	??_ceil
  3913  052C  0852               	movf	??_ceil,w
  3914  052D  00F6               	movwf	frexp@eptr
  3915  052E  318F  278E  3185   	fcall	_frexp
  3916  0531  0020               	movlb	0	; select bank0
  3917  0532  1FD7               	btfss	ceil@expon+1,7
  3918  0533  2D55               	goto	l2700
  3919  0534  3000               	movlw	0
  3920  0535  00A0               	movwf	___ftge@ff1
  3921  0536  3000               	movlw	0
  3922  0537  00A1               	movwf	___ftge@ff1+1
  3923  0538  3000               	movlw	0
  3924  0539  00A2               	movwf	___ftge@ff1+2
  3925  053A  084F               	movf	ceil@x,w
  3926  053B  00A3               	movwf	___ftge@ff2
  3927  053C  0850               	movf	ceil@x+1,w
  3928  053D  00A4               	movwf	___ftge@ff2+1
  3929  053E  0851               	movf	ceil@x+2,w
  3930  053F  00A5               	movwf	___ftge@ff2+2
  3931  0540  318F  27C4  3185   	fcall	___ftge
  3932  0543  1C03               	btfss	3,0
  3933  0544  2D4D               	goto	l2696
  3934  0545  3000               	movlw	0
  3935  0546  0020               	movlb	0	; select bank0
  3936  0547  00CF               	movwf	?_ceil
  3937  0548  3000               	movlw	0
  3938  0549  00D0               	movwf	?_ceil+1
  3939  054A  3000               	movlw	0
  3940  054B  00D1               	movwf	?_ceil+2
  3941  054C  0008               	return
  3942  054D                     l2696:	
  3943  054D  3000               	movlw	0
  3944  054E  0020               	movlb	0	; select bank0
  3945  054F  00CF               	movwf	?_ceil
  3946  0550  3080               	movlw	128
  3947  0551  00D0               	movwf	?_ceil+1
  3948  0552  303F               	movlw	63
  3949  0553  00D1               	movwf	?_ceil+2
  3950  0554  0008               	return
  3951  0555                     l2700:	
  3952  0555  3000               	movlw	0
  3953  0556  0257               	subwf	ceil@expon+1,w
  3954  0557  3015               	movlw	21
  3955  0558  1903               	skipnz
  3956  0559  0256               	subwf	ceil@expon,w
  3957  055A  1803               	btfsc	3,0
  3958  055B  0008               	return
  3959  055C  084F               	movf	ceil@x,w
  3960  055D  00B9               	movwf	___fttol@f1
  3961  055E  0850               	movf	ceil@x+1,w
  3962  055F  00BA               	movwf	___fttol@f1+1
  3963  0560  0851               	movf	ceil@x+2,w
  3964  0561  00BB               	movwf	___fttol@f1+2
  3965  0562  3184  249C  3185   	fcall	___fttol
  3966  0565  0020               	movlb	0	; select bank0
  3967  0566  083C               	movf	?___fttol+3,w
  3968  0567  00CA               	movwf	___altoft@c+3
  3969  0568  083B               	movf	?___fttol+2,w
  3970  0569  00C9               	movwf	___altoft@c+2
  3971  056A  083A               	movf	?___fttol+1,w
  3972  056B  00C8               	movwf	___altoft@c+1
  3973  056C  0839               	movf	?___fttol,w
  3974  056D  00C7               	movwf	___altoft@c
  3975  056E  3187  2793  3185   	fcall	___altoft
  3976  0571  0020               	movlb	0	; select bank0
  3977  0572  0847               	movf	?___altoft,w
  3978  0573  00D3               	movwf	ceil@i
  3979  0574  0848               	movf	?___altoft+1,w
  3980  0575  00D4               	movwf	ceil@i+1
  3981  0576  0849               	movf	?___altoft+2,w
  3982  0577  00D5               	movwf	ceil@i+2
  3983  0578  0853               	movf	ceil@i,w
  3984  0579  00A0               	movwf	___ftge@ff1
  3985  057A  0854               	movf	ceil@i+1,w
  3986  057B  00A1               	movwf	___ftge@ff1+1
  3987  057C  0855               	movf	ceil@i+2,w
  3988  057D  00A2               	movwf	___ftge@ff1+2
  3989  057E  084F               	movf	ceil@x,w
  3990  057F  00A3               	movwf	___ftge@ff2
  3991  0580  0850               	movf	ceil@x+1,w
  3992  0581  00A4               	movwf	___ftge@ff2+1
  3993  0582  0851               	movf	ceil@x+2,w
  3994  0583  00A5               	movwf	___ftge@ff2+2
  3995  0584  318F  27C4  3185   	fcall	___ftge
  3996  0587  1803               	btfsc	3,0
  3997  0588  2DA0               	goto	l2710
  3998  0589  3000               	movlw	0
  3999  058A  0020               	movlb	0	; select bank0
  4000  058B  00A3               	movwf	___ftadd@f1
  4001  058C  3080               	movlw	128
  4002  058D  00A4               	movwf	___ftadd@f1+1
  4003  058E  303F               	movlw	63
  4004  058F  00A5               	movwf	___ftadd@f1+2
  4005  0590  0853               	movf	ceil@i,w
  4006  0591  00A6               	movwf	___ftadd@f2
  4007  0592  0854               	movf	ceil@i+1,w
  4008  0593  00A7               	movwf	___ftadd@f2+1
  4009  0594  0855               	movf	ceil@i+2,w
  4010  0595  00A8               	movwf	___ftadd@f2+2
  4011  0596  3181  219B         	fcall	___ftadd
  4012  0598  0020               	movlb	0	; select bank0
  4013  0599  0823               	movf	?___ftadd,w
  4014  059A  00CF               	movwf	?_ceil
  4015  059B  0824               	movf	?___ftadd+1,w
  4016  059C  00D0               	movwf	?_ceil+1
  4017  059D  0825               	movf	?___ftadd+2,w
  4018  059E  00D1               	movwf	?_ceil+2
  4019  059F  0008               	return
  4020  05A0                     l2710:	
  4021  05A0  0020               	movlb	0	; select bank0
  4022  05A1  0853               	movf	ceil@i,w
  4023  05A2  00CF               	movwf	?_ceil
  4024  05A3  0854               	movf	ceil@i+1,w
  4025  05A4  00D0               	movwf	?_ceil+1
  4026  05A5  0855               	movf	ceil@i+2,w
  4027  05A6  00D1               	movwf	?_ceil+2
  4028  05A7  0008               	return
  4029  05A8                     __end_of_ceil:	
  4030                           
  4031                           	psect	text17
  4032  0F8E                     __ptext17:	
  4033 ;; *************** function _frexp *****************
  4034 ;; Defined at:
  4035 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  value           3    3[COMMON] int 
  4038 ;;  eptr            1    6[COMMON] PTR int 
  4039 ;;		 -> ceil@expon(2), 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  3    3[COMMON] PTR int 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;Total ram usage:        6 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    2
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_ceil
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _frexp
  4067  0F8E                     _frexp:	
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4071  0F8E  0875               	movf	frexp@value+2,w
  4072  0F8F  0474               	iorwf	frexp@value+1,w
  4073  0F90  0473               	iorwf	frexp@value,w
  4074  0F91  1D03               	skipz
  4075  0F92  2F9A               	goto	l2534
  4076  0F93  0876               	movf	frexp@eptr,w
  4077  0F94  0086               	movwf	6
  4078  0F95  0187               	clrf	7
  4079  0F96  3000               	movlw	0
  4080  0F97  3FC0               	movwi [0]fsr1
  4081  0F98  3FC1               	movwi [1]fsr1
  4082                           
  4083                           ;	Return value of _frexp is never used
  4084  0F99  0008               	return
  4085  0F9A                     l2534:	
  4086  0F9A  0875               	movf	frexp@value+2,w
  4087  0F9B  397F               	andlw	127
  4088  0F9C  0020               	movlb	0	; select bank0
  4089  0F9D  00A0               	movwf	??_frexp
  4090  0F9E  01A1               	clrf	??_frexp+1
  4091  0F9F  35A0               	lslf	??_frexp,f
  4092  0FA0  0DA1               	rlf	??_frexp+1,f
  4093  0FA1  0876               	movf	frexp@eptr,w
  4094  0FA2  0086               	movwf	6
  4095  0FA3  0187               	clrf	7
  4096  0FA4  0820               	movf	??_frexp,w
  4097  0FA5  3FC0               	movwi [0]fsr1
  4098  0FA6  0821               	movf	??_frexp+1,w
  4099  0FA7  3FC1               	movwi [1]fsr1
  4100  0FA8  0D74               	rlf	frexp@value+1,w
  4101  0FA9  0D74               	rlf	frexp@value+1,w
  4102  0FAA  3901               	andlw	1
  4103  0FAB  00A0               	movwf	??_frexp
  4104  0FAC  01A1               	clrf	??_frexp+1
  4105  0FAD  0876               	movf	frexp@eptr,w
  4106  0FAE  0086               	movwf	6
  4107  0FAF  0187               	clrf	7
  4108  0FB0  0820               	movf	??_frexp,w
  4109  0FB1  0481               	iorwf	1,f
  4110  0FB2  3141               	addfsr 1,1
  4111  0FB3  0821               	movf	??_frexp+1,w
  4112  0FB4  0481               	iorwf	1,f
  4113  0FB5  0876               	movf	frexp@eptr,w
  4114  0FB6  0086               	movwf	6
  4115  0FB7  0187               	clrf	7
  4116  0FB8  3082               	movlw	130
  4117  0FB9  0781               	addwf	1,f
  4118  0FBA  3141               	addfsr 1,1
  4119  0FBB  30FF               	movlw	255
  4120  0FBC  3D81               	addwfc	1,f
  4121  0FBD  317F               	addfsr 1,-1
  4122  0FBE  0875               	movf	frexp@value+2,w
  4123  0FBF  3980               	andlw	-128
  4124  0FC0  383F               	iorlw	63
  4125  0FC1  00F5               	movwf	frexp@value+2
  4126  0FC2  13F4               	bcf	frexp@value+1,7
  4127  0FC3  0008               	return
  4128  0FC4                     __end_of_frexp:	
  4129                           ;	Return value of _frexp is never used
  4130                           
  4131                           
  4132                           	psect	text18
  4133  049C                     __ptext18:	
  4134 ;; *************** function ___fttol *****************
  4135 ;; Defined at:
  4136 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  f1              3   25[BANK0 ] float 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  lval            4   34[BANK0 ] unsigned long 
  4141 ;;  exp1            1   38[BANK0 ] unsigned char 
  4142 ;;  sign1           1   33[BANK0 ] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  4   25[BANK0 ] long 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;Total ram usage:       14 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    2
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_step
  4163 ;;		_ceil
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function ___fttol
  4169  049C                     ___fttol:	
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4173  049C  0020               	movlb	0	; select bank0
  4174  049D  0839               	movf	___fttol@f1,w
  4175  049E  00BD               	movwf	??___fttol
  4176  049F  083A               	movf	___fttol@f1+1,w
  4177  04A0  00BE               	movwf	??___fttol+1
  4178  04A1  083B               	movf	___fttol@f1+2,w
  4179  04A2  00BF               	movwf	??___fttol+2
  4180  04A3  1003               	clrc
  4181  04A4  0D3E               	rlf	??___fttol+1,w
  4182  04A5  0D3F               	rlf	??___fttol+2,w
  4183  04A6  00C0               	movwf	??___fttol+3
  4184  04A7  0840               	movf	??___fttol+3,w
  4185  04A8  00C6               	movwf	___fttol@exp1
  4186  04A9  0846               	movf	___fttol@exp1,w
  4187  04AA  1D03               	btfss	3,2
  4188  04AB  2CB5               	goto	l2640
  4189  04AC  3000               	movlw	0
  4190  04AD  00BC               	movwf	?___fttol+3
  4191  04AE  3000               	movlw	0
  4192  04AF  00BB               	movwf	?___fttol+2
  4193  04B0  3000               	movlw	0
  4194  04B1  00BA               	movwf	?___fttol+1
  4195  04B2  3000               	movlw	0
  4196  04B3  00B9               	movwf	?___fttol
  4197  04B4  0008               	return
  4198  04B5                     l2640:	
  4199  04B5  0839               	movf	___fttol@f1,w
  4200  04B6  00BD               	movwf	??___fttol
  4201  04B7  083A               	movf	___fttol@f1+1,w
  4202  04B8  00BE               	movwf	??___fttol+1
  4203  04B9  083B               	movf	___fttol@f1+2,w
  4204  04BA  00BF               	movwf	??___fttol+2
  4205  04BB  3017               	movlw	23
  4206  04BC                     u3625:	
  4207  04BC  36BF               	lsrf	??___fttol+2,f
  4208  04BD  0CBE               	rrf	??___fttol+1,f
  4209  04BE  0CBD               	rrf	??___fttol,f
  4210  04BF  0B89               	decfsz	9,f
  4211  04C0  2CBC               	goto	u3625
  4212  04C1  083D               	movf	??___fttol,w
  4213  04C2  00C0               	movwf	??___fttol+3
  4214  04C3  0840               	movf	??___fttol+3,w
  4215  04C4  00C1               	movwf	___fttol@sign1
  4216  04C5  17BA               	bsf	___fttol@f1+1,7
  4217  04C6  30FF               	movlw	255
  4218  04C7  05B9               	andwf	___fttol@f1,f
  4219  04C8  30FF               	movlw	255
  4220  04C9  05BA               	andwf	___fttol@f1+1,f
  4221  04CA  3000               	movlw	0
  4222  04CB  05BB               	andwf	___fttol@f1+2,f
  4223  04CC  0839               	movf	___fttol@f1,w
  4224  04CD  00C2               	movwf	___fttol@lval
  4225  04CE  083A               	movf	___fttol@f1+1,w
  4226  04CF  00C3               	movwf	___fttol@lval+1
  4227  04D0  083B               	movf	___fttol@f1+2,w
  4228  04D1  00C4               	movwf	___fttol@lval+2
  4229  04D2  01C5               	clrf	___fttol@lval+3
  4230  04D3  308E               	movlw	142
  4231  04D4  02C6               	subwf	___fttol@exp1,f
  4232  04D5  1FC6               	btfss	___fttol@exp1,7
  4233  04D6  2CF3               	goto	l2660
  4234  04D7  0846               	movf	___fttol@exp1,w
  4235  04D8  3A80               	xorlw	128
  4236  04D9  3E8F               	addlw	143
  4237  04DA  1803               	skipnc
  4238  04DB  2CE5               	goto	l2658
  4239  04DC  3000               	movlw	0
  4240  04DD  00BC               	movwf	?___fttol+3
  4241  04DE  3000               	movlw	0
  4242  04DF  00BB               	movwf	?___fttol+2
  4243  04E0  3000               	movlw	0
  4244  04E1  00BA               	movwf	?___fttol+1
  4245  04E2  3000               	movlw	0
  4246  04E3  00B9               	movwf	?___fttol
  4247  04E4  0008               	return
  4248  04E5                     l2658:	
  4249  04E5  3001               	movlw	1
  4250  04E6                     u3655:	
  4251  04E6  36C5               	lsrf	___fttol@lval+3,f
  4252  04E7  0CC4               	rrf	___fttol@lval+2,f
  4253  04E8  0CC3               	rrf	___fttol@lval+1,f
  4254  04E9  0CC2               	rrf	___fttol@lval,f
  4255  04EA  0B89               	decfsz	9,f
  4256  04EB  2CE6               	goto	u3655
  4257  04EC  3001               	movlw	1
  4258  04ED  00BD               	movwf	??___fttol
  4259  04EE  083D               	movf	??___fttol,w
  4260  04EF  07C6               	addwf	___fttol@exp1,f
  4261  04F0  1903               	btfsc	3,2
  4262  04F1  2D0C               	goto	l2668
  4263  04F2  2CE5               	goto	l2658
  4264  04F3                     l2660:	
  4265  04F3  3018               	movlw	24
  4266  04F4  0246               	subwf	___fttol@exp1,w
  4267  04F5  1C03               	skipc
  4268  04F6  2D09               	goto	l653
  4269  04F7  3000               	movlw	0
  4270  04F8  00BC               	movwf	?___fttol+3
  4271  04F9  3000               	movlw	0
  4272  04FA  00BB               	movwf	?___fttol+2
  4273  04FB  3000               	movlw	0
  4274  04FC  00BA               	movwf	?___fttol+1
  4275  04FD  3000               	movlw	0
  4276  04FE  00B9               	movwf	?___fttol
  4277  04FF  0008               	return
  4278  0500                     l2666:	
  4279  0500  3001               	movlw	1
  4280  0501                     u3685:	
  4281  0501  35C2               	lslf	___fttol@lval,f
  4282  0502  0DC3               	rlf	___fttol@lval+1,f
  4283  0503  0DC4               	rlf	___fttol@lval+2,f
  4284  0504  0DC5               	rlf	___fttol@lval+3,f
  4285  0505  0B89               	decfsz	9,f
  4286  0506  2D01               	goto	u3685
  4287  0507  3001               	movlw	1
  4288  0508  02C6               	subwf	___fttol@exp1,f
  4289  0509                     l653:	
  4290  0509  0846               	movf	___fttol@exp1,w
  4291  050A  1D03               	btfss	3,2
  4292  050B  2D00               	goto	l2666
  4293  050C                     l2668:	
  4294  050C  0841               	movf	___fttol@sign1,w
  4295  050D  1903               	btfsc	3,2
  4296  050E  2D1A               	goto	l2672
  4297  050F  09C2               	comf	___fttol@lval,f
  4298  0510  09C3               	comf	___fttol@lval+1,f
  4299  0511  09C4               	comf	___fttol@lval+2,f
  4300  0512  09C5               	comf	___fttol@lval+3,f
  4301  0513  0AC2               	incf	___fttol@lval,f
  4302  0514  1903               	skipnz
  4303  0515  0AC3               	incf	___fttol@lval+1,f
  4304  0516  1903               	skipnz
  4305  0517  0AC4               	incf	___fttol@lval+2,f
  4306  0518  1903               	skipnz
  4307  0519  0AC5               	incf	___fttol@lval+3,f
  4308  051A                     l2672:	
  4309  051A  0845               	movf	___fttol@lval+3,w
  4310  051B  00BC               	movwf	?___fttol+3
  4311  051C  0844               	movf	___fttol@lval+2,w
  4312  051D  00BB               	movwf	?___fttol+2
  4313  051E  0843               	movf	___fttol@lval+1,w
  4314  051F  00BA               	movwf	?___fttol+1
  4315  0520  0842               	movf	___fttol@lval,w
  4316  0521  00B9               	movwf	?___fttol
  4317  0522  0008               	return
  4318  0523                     __end_of___fttol:	
  4319                           
  4320                           	psect	text19
  4321  0FC4                     __ptext19:	
  4322 ;; *************** function ___ftge *****************
  4323 ;; Defined at:
  4324 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  ff1             3    0[BANK0 ] float 
  4327 ;;  ff2             3    3[BANK0 ] float 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;		None
  4330 ;; Return value:  Size  Location     Type
  4331 ;;		None               void
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4339 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4341 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;Total ram usage:        9 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    2
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_ceil
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           
  4354                           ;psect for function ___ftge
  4355  0FC4                     ___ftge:	
  4356                           
  4357                           ;incstack = 0
  4358                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4359  0FC4  0020               	movlb	0	; select bank0
  4360  0FC5  1FA2               	btfss	___ftge@ff1+2,7
  4361  0FC6  2FDB               	goto	l2618
  4362  0FC7  0920               	comf	___ftge@ff1,w
  4363  0FC8  00F3               	movwf	??___ftge
  4364  0FC9  0921               	comf	___ftge@ff1+1,w
  4365  0FCA  00F4               	movwf	??___ftge+1
  4366  0FCB  0922               	comf	___ftge@ff1+2,w
  4367  0FCC  00F5               	movwf	??___ftge+2
  4368  0FCD  0AF3               	incf	??___ftge,f
  4369  0FCE  1903               	skipnz
  4370  0FCF  0AF4               	incf	??___ftge+1,f
  4371  0FD0  1903               	skipnz
  4372  0FD1  0AF5               	incf	??___ftge+2,f
  4373  0FD2  3000               	movlw	0
  4374  0FD3  0773               	addwf	??___ftge,w
  4375  0FD4  00A0               	movwf	___ftge@ff1
  4376  0FD5  3000               	movlw	0
  4377  0FD6  3D74               	addwfc	??___ftge+1,w
  4378  0FD7  00A1               	movwf	___ftge@ff1+1
  4379  0FD8  3080               	movlw	128
  4380  0FD9  3D75               	addwfc	??___ftge+2,w
  4381  0FDA  00A2               	movwf	___ftge@ff1+2
  4382  0FDB                     l2618:	
  4383  0FDB  1FA5               	btfss	___ftge@ff2+2,7
  4384  0FDC  2FF1               	goto	l2622
  4385  0FDD  0923               	comf	___ftge@ff2,w
  4386  0FDE  00F3               	movwf	??___ftge
  4387  0FDF  0924               	comf	___ftge@ff2+1,w
  4388  0FE0  00F4               	movwf	??___ftge+1
  4389  0FE1  0925               	comf	___ftge@ff2+2,w
  4390  0FE2  00F5               	movwf	??___ftge+2
  4391  0FE3  0AF3               	incf	??___ftge,f
  4392  0FE4  1903               	skipnz
  4393  0FE5  0AF4               	incf	??___ftge+1,f
  4394  0FE6  1903               	skipnz
  4395  0FE7  0AF5               	incf	??___ftge+2,f
  4396  0FE8  3000               	movlw	0
  4397  0FE9  0773               	addwf	??___ftge,w
  4398  0FEA  00A3               	movwf	___ftge@ff2
  4399  0FEB  3000               	movlw	0
  4400  0FEC  3D74               	addwfc	??___ftge+1,w
  4401  0FED  00A4               	movwf	___ftge@ff2+1
  4402  0FEE  3080               	movlw	128
  4403  0FEF  3D75               	addwfc	??___ftge+2,w
  4404  0FF0  00A5               	movwf	___ftge@ff2+2
  4405  0FF1                     l2622:	
  4406  0FF1  3080               	movlw	128
  4407  0FF2  06A2               	xorwf	___ftge@ff1+2,f
  4408  0FF3  3080               	movlw	128
  4409  0FF4  06A5               	xorwf	___ftge@ff2+2,f
  4410  0FF5  0825               	movf	___ftge@ff2+2,w
  4411  0FF6  0222               	subwf	___ftge@ff1+2,w
  4412  0FF7  1D03               	skipz
  4413  0FF8  0008               	return
  4414  0FF9  0824               	movf	___ftge@ff2+1,w
  4415  0FFA  0221               	subwf	___ftge@ff1+1,w
  4416  0FFB  1D03               	skipz
  4417  0FFC  0008               	return
  4418  0FFD  0823               	movf	___ftge@ff2,w
  4419  0FFE  0220               	subwf	___ftge@ff1,w
  4420  0FFF  0008               	return
  4421  1000                     __end_of___ftge:	
  4422                           
  4423                           	psect	text20
  4424  019B                     __ptext20:	
  4425 ;; *************** function ___ftadd *****************
  4426 ;; Defined at:
  4427 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  f1              3    3[BANK0 ] float 
  4430 ;;  f2              3    6[BANK0 ] float 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  exp1            1   15[BANK0 ] unsigned char 
  4433 ;;  exp2            1   14[BANK0 ] unsigned char 
  4434 ;;  sign            1   13[BANK0 ] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  3    3[BANK0 ] float 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2, status,0, pclath, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4444 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;Total ram usage:       13 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    3
  4451 ;; This function calls:
  4452 ;;		___ftpack
  4453 ;; This function is called by:
  4454 ;;		_ceil
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function ___ftadd
  4460  019B                     ___ftadd:	
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4464  019B  0020               	movlb	0	; select bank0
  4465  019C  0823               	movf	___ftadd@f1,w
  4466  019D  00A9               	movwf	??___ftadd
  4467  019E  0824               	movf	___ftadd@f1+1,w
  4468  019F  00AA               	movwf	??___ftadd+1
  4469  01A0  0825               	movf	___ftadd@f1+2,w
  4470  01A1  00AB               	movwf	??___ftadd+2
  4471  01A2  1003               	clrc
  4472  01A3  0D2A               	rlf	??___ftadd+1,w
  4473  01A4  0D2B               	rlf	??___ftadd+2,w
  4474  01A5  00AC               	movwf	??___ftadd+3
  4475  01A6  082C               	movf	??___ftadd+3,w
  4476  01A7  00AF               	movwf	___ftadd@exp1
  4477  01A8  0826               	movf	___ftadd@f2,w
  4478  01A9  00A9               	movwf	??___ftadd
  4479  01AA  0827               	movf	___ftadd@f2+1,w
  4480  01AB  00AA               	movwf	??___ftadd+1
  4481  01AC  0828               	movf	___ftadd@f2+2,w
  4482  01AD  00AB               	movwf	??___ftadd+2
  4483  01AE  1003               	clrc
  4484  01AF  0D2A               	rlf	??___ftadd+1,w
  4485  01B0  0D2B               	rlf	??___ftadd+2,w
  4486  01B1  00AC               	movwf	??___ftadd+3
  4487  01B2  082C               	movf	??___ftadd+3,w
  4488  01B3  00AE               	movwf	___ftadd@exp2
  4489  01B4  082F               	movf	___ftadd@exp1,w
  4490  01B5  1903               	btfsc	3,2
  4491  01B6  29C3               	goto	l2550
  4492  01B7  082E               	movf	___ftadd@exp2,w
  4493  01B8  022F               	subwf	___ftadd@exp1,w
  4494  01B9  1803               	skipnc
  4495  01BA  29CA               	goto	l2554
  4496  01BB  032F               	decf	___ftadd@exp1,w
  4497  01BC  3AFF               	xorlw	255
  4498  01BD  072E               	addwf	___ftadd@exp2,w
  4499  01BE  00A9               	movwf	??___ftadd
  4500  01BF  3019               	movlw	25
  4501  01C0  0229               	subwf	??___ftadd,w
  4502  01C1  1C03               	skipc
  4503  01C2  29CA               	goto	l2554
  4504  01C3                     l2550:	
  4505  01C3  0826               	movf	___ftadd@f2,w
  4506  01C4  00A3               	movwf	?___ftadd
  4507  01C5  0827               	movf	___ftadd@f2+1,w
  4508  01C6  00A4               	movwf	?___ftadd+1
  4509  01C7  0828               	movf	___ftadd@f2+2,w
  4510  01C8  00A5               	movwf	?___ftadd+2
  4511  01C9  0008               	return
  4512  01CA                     l2554:	
  4513  01CA  082E               	movf	___ftadd@exp2,w
  4514  01CB  1903               	btfsc	3,2
  4515  01CC  0008               	return
  4516  01CD  082F               	movf	___ftadd@exp1,w
  4517  01CE  022E               	subwf	___ftadd@exp2,w
  4518  01CF  1803               	skipnc
  4519  01D0  29D9               	goto	l2560
  4520  01D1  032E               	decf	___ftadd@exp2,w
  4521  01D2  3AFF               	xorlw	255
  4522  01D3  072F               	addwf	___ftadd@exp1,w
  4523  01D4  00A9               	movwf	??___ftadd
  4524  01D5  3019               	movlw	25
  4525  01D6  0229               	subwf	??___ftadd,w
  4526  01D7  1803               	btfsc	3,0
  4527  01D8  0008               	return
  4528  01D9                     l2560:	
  4529  01D9  3006               	movlw	6
  4530  01DA  00A9               	movwf	??___ftadd
  4531  01DB  0829               	movf	??___ftadd,w
  4532  01DC  00AD               	movwf	___ftadd@sign
  4533  01DD  1BA5               	btfsc	___ftadd@f1+2,7
  4534  01DE  17AD               	bsf	___ftadd@sign,7
  4535  01DF  1BA8               	btfsc	___ftadd@f2+2,7
  4536  01E0  172D               	bsf	___ftadd@sign,6
  4537  01E1  17A4               	bsf	___ftadd@f1+1,7
  4538  01E2  30FF               	movlw	255
  4539  01E3  05A3               	andwf	___ftadd@f1,f
  4540  01E4  30FF               	movlw	255
  4541  01E5  05A4               	andwf	___ftadd@f1+1,f
  4542  01E6  3000               	movlw	0
  4543  01E7  05A5               	andwf	___ftadd@f1+2,f
  4544  01E8  17A7               	bsf	___ftadd@f2+1,7
  4545  01E9  30FF               	movlw	255
  4546  01EA  05A6               	andwf	___ftadd@f2,f
  4547  01EB  30FF               	movlw	255
  4548  01EC  05A7               	andwf	___ftadd@f2+1,f
  4549  01ED  3000               	movlw	0
  4550  01EE  05A8               	andwf	___ftadd@f2+2,f
  4551  01EF  082E               	movf	___ftadd@exp2,w
  4552  01F0  022F               	subwf	___ftadd@exp1,w
  4553  01F1  1803               	skipnc
  4554  01F2  2A15               	goto	l2582
  4555  01F3                     l2572:	
  4556  01F3  3001               	movlw	1
  4557  01F4                     u3445:	
  4558  01F4  35A6               	lslf	___ftadd@f2,f
  4559  01F5  0DA7               	rlf	___ftadd@f2+1,f
  4560  01F6  0DA8               	rlf	___ftadd@f2+2,f
  4561  01F7  0B89               	decfsz	9,f
  4562  01F8  29F4               	goto	u3445
  4563  01F9  3001               	movlw	1
  4564  01FA  02AE               	subwf	___ftadd@exp2,f
  4565  01FB  082E               	movf	___ftadd@exp2,w
  4566  01FC  062F               	xorwf	___ftadd@exp1,w
  4567  01FD  1903               	skipnz
  4568  01FE  2A10               	goto	l2580
  4569  01FF  3001               	movlw	1
  4570  0200  02AD               	subwf	___ftadd@sign,f
  4571  0201  082D               	movf	___ftadd@sign,w
  4572  0202  3907               	andlw	7
  4573  0203  1903               	btfsc	3,2
  4574  0204  2A10               	goto	l2580
  4575  0205  29F3               	goto	l2572
  4576  0206                     l2578:	
  4577  0206  3001               	movlw	1
  4578  0207                     u3475:	
  4579  0207  36A5               	lsrf	___ftadd@f1+2,f
  4580  0208  0CA4               	rrf	___ftadd@f1+1,f
  4581  0209  0CA3               	rrf	___ftadd@f1,f
  4582  020A  0B89               	decfsz	9,f
  4583  020B  2A07               	goto	u3475
  4584  020C  3001               	movlw	1
  4585  020D  00A9               	movwf	??___ftadd
  4586  020E  0829               	movf	??___ftadd,w
  4587  020F  07AF               	addwf	___ftadd@exp1,f
  4588  0210                     l2580:	
  4589  0210  082F               	movf	___ftadd@exp1,w
  4590  0211  062E               	xorwf	___ftadd@exp2,w
  4591  0212  1903               	btfsc	3,2
  4592  0213  2A3A               	goto	l593
  4593  0214  2A06               	goto	l2578
  4594  0215                     l2582:	
  4595  0215  082F               	movf	___ftadd@exp1,w
  4596  0216  022E               	subwf	___ftadd@exp2,w
  4597  0217  1803               	skipnc
  4598  0218  2A3A               	goto	l593
  4599  0219                     l2584:	
  4600  0219  3001               	movlw	1
  4601  021A                     u3505:	
  4602  021A  35A3               	lslf	___ftadd@f1,f
  4603  021B  0DA4               	rlf	___ftadd@f1+1,f
  4604  021C  0DA5               	rlf	___ftadd@f1+2,f
  4605  021D  0B89               	decfsz	9,f
  4606  021E  2A1A               	goto	u3505
  4607  021F  3001               	movlw	1
  4608  0220  02AF               	subwf	___ftadd@exp1,f
  4609  0221  082E               	movf	___ftadd@exp2,w
  4610  0222  062F               	xorwf	___ftadd@exp1,w
  4611  0223  1903               	skipnz
  4612  0224  2A36               	goto	l2592
  4613  0225  3001               	movlw	1
  4614  0226  02AD               	subwf	___ftadd@sign,f
  4615  0227  082D               	movf	___ftadd@sign,w
  4616  0228  3907               	andlw	7
  4617  0229  1903               	btfsc	3,2
  4618  022A  2A36               	goto	l2592
  4619  022B  2A19               	goto	l2584
  4620  022C                     l2590:	
  4621  022C  3001               	movlw	1
  4622  022D                     u3535:	
  4623  022D  36A8               	lsrf	___ftadd@f2+2,f
  4624  022E  0CA7               	rrf	___ftadd@f2+1,f
  4625  022F  0CA6               	rrf	___ftadd@f2,f
  4626  0230  0B89               	decfsz	9,f
  4627  0231  2A2D               	goto	u3535
  4628  0232  3001               	movlw	1
  4629  0233  00A9               	movwf	??___ftadd
  4630  0234  0829               	movf	??___ftadd,w
  4631  0235  07AE               	addwf	___ftadd@exp2,f
  4632  0236                     l2592:	
  4633  0236  082F               	movf	___ftadd@exp1,w
  4634  0237  062E               	xorwf	___ftadd@exp2,w
  4635  0238  1D03               	skipz
  4636  0239  2A2C               	goto	l2590
  4637  023A                     l593:	
  4638  023A  1FAD               	btfss	___ftadd@sign,7
  4639  023B  2A4C               	goto	l2596
  4640  023C  30FF               	movlw	255
  4641  023D  06A3               	xorwf	___ftadd@f1,f
  4642  023E  30FF               	movlw	255
  4643  023F  06A4               	xorwf	___ftadd@f1+1,f
  4644  0240  30FF               	movlw	255
  4645  0241  06A5               	xorwf	___ftadd@f1+2,f
  4646  0242  3001               	movlw	1
  4647  0243  07A3               	addwf	___ftadd@f1,f
  4648  0244  3000               	movlw	0
  4649  0245  1803               	skipnc
  4650  0246  3001               	movlw	1
  4651  0247  07A4               	addwf	___ftadd@f1+1,f
  4652  0248  3000               	movlw	0
  4653  0249  1803               	skipnc
  4654  024A  3001               	movlw	1
  4655  024B  07A5               	addwf	___ftadd@f1+2,f
  4656  024C                     l2596:	
  4657  024C  1F2D               	btfss	___ftadd@sign,6
  4658  024D  2A5E               	goto	l2600
  4659  024E  30FF               	movlw	255
  4660  024F  06A6               	xorwf	___ftadd@f2,f
  4661  0250  30FF               	movlw	255
  4662  0251  06A7               	xorwf	___ftadd@f2+1,f
  4663  0252  30FF               	movlw	255
  4664  0253  06A8               	xorwf	___ftadd@f2+2,f
  4665  0254  3001               	movlw	1
  4666  0255  07A6               	addwf	___ftadd@f2,f
  4667  0256  3000               	movlw	0
  4668  0257  1803               	skipnc
  4669  0258  3001               	movlw	1
  4670  0259  07A7               	addwf	___ftadd@f2+1,f
  4671  025A  3000               	movlw	0
  4672  025B  1803               	skipnc
  4673  025C  3001               	movlw	1
  4674  025D  07A8               	addwf	___ftadd@f2+2,f
  4675  025E                     l2600:	
  4676  025E  01AD               	clrf	___ftadd@sign
  4677  025F  0823               	movf	___ftadd@f1,w
  4678  0260  07A6               	addwf	___ftadd@f2,f
  4679  0261  0824               	movf	___ftadd@f1+1,w
  4680  0262  3DA7               	addwfc	___ftadd@f2+1,f
  4681  0263  0825               	movf	___ftadd@f1+2,w
  4682  0264  3DA8               	addwfc	___ftadd@f2+2,f
  4683  0265  1FA8               	btfss	___ftadd@f2+2,7
  4684  0266  2A79               	goto	l2610
  4685  0267  30FF               	movlw	255
  4686  0268  06A6               	xorwf	___ftadd@f2,f
  4687  0269  30FF               	movlw	255
  4688  026A  06A7               	xorwf	___ftadd@f2+1,f
  4689  026B  30FF               	movlw	255
  4690  026C  06A8               	xorwf	___ftadd@f2+2,f
  4691  026D  3001               	movlw	1
  4692  026E  07A6               	addwf	___ftadd@f2,f
  4693  026F  3000               	movlw	0
  4694  0270  1803               	skipnc
  4695  0271  3001               	movlw	1
  4696  0272  07A7               	addwf	___ftadd@f2+1,f
  4697  0273  3000               	movlw	0
  4698  0274  1803               	skipnc
  4699  0275  3001               	movlw	1
  4700  0276  07A8               	addwf	___ftadd@f2+2,f
  4701  0277  01AD               	clrf	___ftadd@sign
  4702  0278  0AAD               	incf	___ftadd@sign,f
  4703  0279                     l2610:	
  4704  0279  0826               	movf	___ftadd@f2,w
  4705  027A  00F3               	movwf	___ftpack@arg
  4706  027B  0827               	movf	___ftadd@f2+1,w
  4707  027C  00F4               	movwf	___ftpack@arg+1
  4708  027D  0828               	movf	___ftadd@f2+2,w
  4709  027E  00F5               	movwf	___ftpack@arg+2
  4710  027F  082F               	movf	___ftadd@exp1,w
  4711  0280  00A9               	movwf	??___ftadd
  4712  0281  0829               	movf	??___ftadd,w
  4713  0282  00F6               	movwf	___ftpack@exp
  4714  0283  082D               	movf	___ftadd@sign,w
  4715  0284  00AA               	movwf	??___ftadd+1
  4716  0285  082A               	movf	??___ftadd+1,w
  4717  0286  00F7               	movwf	___ftpack@sign
  4718  0287  3186  2613         	fcall	___ftpack
  4719  0289  0873               	movf	?___ftpack,w
  4720  028A  0020               	movlb	0	; select bank0
  4721  028B  00A3               	movwf	?___ftadd
  4722  028C  0874               	movf	?___ftpack+1,w
  4723  028D  00A4               	movwf	?___ftadd+1
  4724  028E  0875               	movf	?___ftpack+2,w
  4725  028F  00A5               	movwf	?___ftadd+2
  4726  0290  0008               	return
  4727  0291                     __end_of___ftadd:	
  4728                           
  4729                           	psect	text21
  4730  0793                     __ptext21:	
  4731 ;; *************** function ___altoft *****************
  4732 ;; Defined at:
  4733 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  c               4   39[BANK0 ] long 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  sign            1   46[BANK0 ] unsigned char 
  4738 ;;  exp             1   45[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  3   39[BANK0 ] float 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0, pclath, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4748 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;Total ram usage:        8 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    3
  4755 ;; This function calls:
  4756 ;;		___ftpack
  4757 ;; This function is called by:
  4758 ;;		_ceil
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           
  4763                           ;psect for function ___altoft
  4764  0793                     ___altoft:	
  4765                           
  4766                           ;incstack = 0
  4767                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4768  0793  0020               	movlb	0	; select bank0
  4769  0794  01CE               	clrf	___altoft@sign
  4770  0795  308E               	movlw	142
  4771  0796  00CB               	movwf	??___altoft
  4772  0797  084B               	movf	??___altoft,w
  4773  0798  00CD               	movwf	___altoft@exp
  4774  0799  1FCA               	btfss	___altoft@c+3,7
  4775  079A  2FA8               	goto	l2522
  4776  079B  09C7               	comf	___altoft@c,f
  4777  079C  09C8               	comf	___altoft@c+1,f
  4778  079D  09C9               	comf	___altoft@c+2,f
  4779  079E  09CA               	comf	___altoft@c+3,f
  4780  079F  0AC7               	incf	___altoft@c,f
  4781  07A0  1903               	skipnz
  4782  07A1  0AC8               	incf	___altoft@c+1,f
  4783  07A2  1903               	skipnz
  4784  07A3  0AC9               	incf	___altoft@c+2,f
  4785  07A4  1903               	skipnz
  4786  07A5  0ACA               	incf	___altoft@c+3,f
  4787  07A6  01CE               	clrf	___altoft@sign
  4788  07A7  0ACE               	incf	___altoft@sign,f
  4789  07A8                     l2522:	
  4790  07A8  30FF               	movlw	255
  4791  07A9  054A               	andwf	___altoft@c+3,w
  4792  07AA  1903               	btfsc	3,2
  4793  07AB  2FB8               	goto	l2524
  4794  07AC  3001               	movlw	1
  4795  07AD                     u3325:	
  4796  07AD  36CA               	lsrf	___altoft@c+3,f
  4797  07AE  0CC9               	rrf	___altoft@c+2,f
  4798  07AF  0CC8               	rrf	___altoft@c+1,f
  4799  07B0  0CC7               	rrf	___altoft@c,f
  4800  07B1  0B89               	decfsz	9,f
  4801  07B2  2FAD               	goto	u3325
  4802  07B3  3001               	movlw	1
  4803  07B4  00CB               	movwf	??___altoft
  4804  07B5  084B               	movf	??___altoft,w
  4805  07B6  07CD               	addwf	___altoft@exp,f
  4806  07B7  2FA8               	goto	l2522
  4807  07B8                     l2524:	
  4808  07B8  0847               	movf	___altoft@c,w
  4809  07B9  00F3               	movwf	___ftpack@arg
  4810  07BA  0848               	movf	___altoft@c+1,w
  4811  07BB  00F4               	movwf	___ftpack@arg+1
  4812  07BC  0849               	movf	___altoft@c+2,w
  4813  07BD  00F5               	movwf	___ftpack@arg+2
  4814  07BE  084D               	movf	___altoft@exp,w
  4815  07BF  00CB               	movwf	??___altoft
  4816  07C0  084B               	movf	??___altoft,w
  4817  07C1  00F6               	movwf	___ftpack@exp
  4818  07C2  084E               	movf	___altoft@sign,w
  4819  07C3  00CC               	movwf	??___altoft+1
  4820  07C4  084C               	movf	??___altoft+1,w
  4821  07C5  00F7               	movwf	___ftpack@sign
  4822  07C6  3186  2613         	fcall	___ftpack
  4823  07C8  0873               	movf	?___ftpack,w
  4824  07C9  0020               	movlb	0	; select bank0
  4825  07CA  00C7               	movwf	?___altoft
  4826  07CB  0874               	movf	?___ftpack+1,w
  4827  07CC  00C8               	movwf	?___altoft+1
  4828  07CD  0875               	movf	?___ftpack+2,w
  4829  07CE  00C9               	movwf	?___altoft+2
  4830  07CF  0008               	return
  4831  07D0                     __end_of___altoft:	
  4832                           
  4833                           	psect	text22
  4834  03F3                     __ptext22:	
  4835 ;; *************** function ___ftdiv *****************
  4836 ;; Defined at:
  4837 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  f2              3    9[BANK0 ] float 
  4840 ;;  f1              3   12[BANK0 ] float 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  f3              3   20[BANK0 ] float 
  4843 ;;  sign            1   24[BANK0 ] unsigned char 
  4844 ;;  exp             1   23[BANK0 ] unsigned char 
  4845 ;;  cntr            1   19[BANK0 ] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  3    9[BANK0 ] float 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, pclath, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4855 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;Total ram usage:       16 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    3
  4862 ;; This function calls:
  4863 ;;		___ftpack
  4864 ;; This function is called by:
  4865 ;;		_step
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           
  4870                           ;psect for function ___ftdiv
  4871  03F3                     ___ftdiv:	
  4872                           
  4873                           ;incstack = 0
  4874                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4875  03F3  0020               	movlb	0	; select bank0
  4876  03F4  082C               	movf	___ftdiv@f1,w
  4877  03F5  00AF               	movwf	??___ftdiv
  4878  03F6  082D               	movf	___ftdiv@f1+1,w
  4879  03F7  00B0               	movwf	??___ftdiv+1
  4880  03F8  082E               	movf	___ftdiv@f1+2,w
  4881  03F9  00B1               	movwf	??___ftdiv+2
  4882  03FA  1003               	clrc
  4883  03FB  0D30               	rlf	??___ftdiv+1,w
  4884  03FC  0D31               	rlf	??___ftdiv+2,w
  4885  03FD  00B2               	movwf	??___ftdiv+3
  4886  03FE  0832               	movf	??___ftdiv+3,w
  4887  03FF  00B7               	movwf	___ftdiv@exp
  4888  0400  0837               	movf	___ftdiv@exp,w
  4889  0401  1D03               	btfss	3,2
  4890  0402  2C0A               	goto	l2746
  4891  0403  3000               	movlw	0
  4892  0404  00A9               	movwf	?___ftdiv
  4893  0405  3000               	movlw	0
  4894  0406  00AA               	movwf	?___ftdiv+1
  4895  0407  3000               	movlw	0
  4896  0408  00AB               	movwf	?___ftdiv+2
  4897  0409  0008               	return
  4898  040A                     l2746:	
  4899  040A  0829               	movf	___ftdiv@f2,w
  4900  040B  00AF               	movwf	??___ftdiv
  4901  040C  082A               	movf	___ftdiv@f2+1,w
  4902  040D  00B0               	movwf	??___ftdiv+1
  4903  040E  082B               	movf	___ftdiv@f2+2,w
  4904  040F  00B1               	movwf	??___ftdiv+2
  4905  0410  1003               	clrc
  4906  0411  0D30               	rlf	??___ftdiv+1,w
  4907  0412  0D31               	rlf	??___ftdiv+2,w
  4908  0413  00B2               	movwf	??___ftdiv+3
  4909  0414  0832               	movf	??___ftdiv+3,w
  4910  0415  00B8               	movwf	___ftdiv@sign
  4911  0416  0838               	movf	___ftdiv@sign,w
  4912  0417  1D03               	btfss	3,2
  4913  0418  2C20               	goto	l2752
  4914  0419  3000               	movlw	0
  4915  041A  00A9               	movwf	?___ftdiv
  4916  041B  3000               	movlw	0
  4917  041C  00AA               	movwf	?___ftdiv+1
  4918  041D  3000               	movlw	0
  4919  041E  00AB               	movwf	?___ftdiv+2
  4920  041F  0008               	return
  4921  0420                     l2752:	
  4922  0420  3000               	movlw	0
  4923  0421  00B4               	movwf	___ftdiv@f3
  4924  0422  3000               	movlw	0
  4925  0423  00B5               	movwf	___ftdiv@f3+1
  4926  0424  3000               	movlw	0
  4927  0425  00B6               	movwf	___ftdiv@f3+2
  4928  0426  3089               	movlw	137
  4929  0427  0738               	addwf	___ftdiv@sign,w
  4930  0428  00AF               	movwf	??___ftdiv
  4931  0429  082F               	movf	??___ftdiv,w
  4932  042A  02B7               	subwf	___ftdiv@exp,f
  4933  042B  082C               	movf	___ftdiv@f1,w
  4934  042C  00AF               	movwf	??___ftdiv
  4935  042D  082D               	movf	___ftdiv@f1+1,w
  4936  042E  00B0               	movwf	??___ftdiv+1
  4937  042F  082E               	movf	___ftdiv@f1+2,w
  4938  0430  00B1               	movwf	??___ftdiv+2
  4939  0431  3010               	movlw	16
  4940  0432                     u3835:	
  4941  0432  36B1               	lsrf	??___ftdiv+2,f
  4942  0433  0CB0               	rrf	??___ftdiv+1,f
  4943  0434  0CAF               	rrf	??___ftdiv,f
  4944  0435  0B89               	decfsz	9,f
  4945  0436  2C32               	goto	u3835
  4946  0437  082F               	movf	??___ftdiv,w
  4947  0438  00B2               	movwf	??___ftdiv+3
  4948  0439  0832               	movf	??___ftdiv+3,w
  4949  043A  00B8               	movwf	___ftdiv@sign
  4950  043B  0829               	movf	___ftdiv@f2,w
  4951  043C  00AF               	movwf	??___ftdiv
  4952  043D  082A               	movf	___ftdiv@f2+1,w
  4953  043E  00B0               	movwf	??___ftdiv+1
  4954  043F  082B               	movf	___ftdiv@f2+2,w
  4955  0440  00B1               	movwf	??___ftdiv+2
  4956  0441  3010               	movlw	16
  4957  0442                     u3845:	
  4958  0442  36B1               	lsrf	??___ftdiv+2,f
  4959  0443  0CB0               	rrf	??___ftdiv+1,f
  4960  0444  0CAF               	rrf	??___ftdiv,f
  4961  0445  0B89               	decfsz	9,f
  4962  0446  2C42               	goto	u3845
  4963  0447  082F               	movf	??___ftdiv,w
  4964  0448  00B2               	movwf	??___ftdiv+3
  4965  0449  0832               	movf	??___ftdiv+3,w
  4966  044A  06B8               	xorwf	___ftdiv@sign,f
  4967  044B  3080               	movlw	128
  4968  044C  00AF               	movwf	??___ftdiv
  4969  044D  082F               	movf	??___ftdiv,w
  4970  044E  05B8               	andwf	___ftdiv@sign,f
  4971  044F  17AD               	bsf	___ftdiv@f1+1,7
  4972  0450  30FF               	movlw	255
  4973  0451  05AC               	andwf	___ftdiv@f1,f
  4974  0452  30FF               	movlw	255
  4975  0453  05AD               	andwf	___ftdiv@f1+1,f
  4976  0454  3000               	movlw	0
  4977  0455  05AE               	andwf	___ftdiv@f1+2,f
  4978  0456  17AA               	bsf	___ftdiv@f2+1,7
  4979  0457  30FF               	movlw	255
  4980  0458  05A9               	andwf	___ftdiv@f2,f
  4981  0459  30FF               	movlw	255
  4982  045A  05AA               	andwf	___ftdiv@f2+1,f
  4983  045B  3000               	movlw	0
  4984  045C  05AB               	andwf	___ftdiv@f2+2,f
  4985  045D  3018               	movlw	24
  4986  045E  00AF               	movwf	??___ftdiv
  4987  045F  082F               	movf	??___ftdiv,w
  4988  0460  00B3               	movwf	___ftdiv@cntr
  4989  0461                     l2766:	
  4990  0461  3001               	movlw	1
  4991  0462                     u3855:	
  4992  0462  35B4               	lslf	___ftdiv@f3,f
  4993  0463  0DB5               	rlf	___ftdiv@f3+1,f
  4994  0464  0DB6               	rlf	___ftdiv@f3+2,f
  4995  0465  0B89               	decfsz	9,f
  4996  0466  2C62               	goto	u3855
  4997  0467  082B               	movf	___ftdiv@f2+2,w
  4998  0468  022E               	subwf	___ftdiv@f1+2,w
  4999  0469  1D03               	skipz
  5000  046A  2C71               	goto	u3865
  5001  046B  082A               	movf	___ftdiv@f2+1,w
  5002  046C  022D               	subwf	___ftdiv@f1+1,w
  5003  046D  1D03               	skipz
  5004  046E  2C71               	goto	u3865
  5005  046F  0829               	movf	___ftdiv@f2,w
  5006  0470  022C               	subwf	___ftdiv@f1,w
  5007  0471                     u3865:	
  5008  0471  1C03               	skipc
  5009  0472  2C7A               	goto	l2774
  5010  0473  0829               	movf	___ftdiv@f2,w
  5011  0474  02AC               	subwf	___ftdiv@f1,f
  5012  0475  082A               	movf	___ftdiv@f2+1,w
  5013  0476  3BAD               	subwfb	___ftdiv@f1+1,f
  5014  0477  082B               	movf	___ftdiv@f2+2,w
  5015  0478  3BAE               	subwfb	___ftdiv@f1+2,f
  5016  0479  1434               	bsf	___ftdiv@f3,0
  5017  047A                     l2774:	
  5018  047A  3001               	movlw	1
  5019  047B                     u3875:	
  5020  047B  35AC               	lslf	___ftdiv@f1,f
  5021  047C  0DAD               	rlf	___ftdiv@f1+1,f
  5022  047D  0DAE               	rlf	___ftdiv@f1+2,f
  5023  047E  0B89               	decfsz	9,f
  5024  047F  2C7B               	goto	u3875
  5025  0480  3001               	movlw	1
  5026  0481  02B3               	subwf	___ftdiv@cntr,f
  5027  0482  1D03               	btfss	3,2
  5028  0483  2C61               	goto	l2766
  5029  0484  0834               	movf	___ftdiv@f3,w
  5030  0485  00F3               	movwf	___ftpack@arg
  5031  0486  0835               	movf	___ftdiv@f3+1,w
  5032  0487  00F4               	movwf	___ftpack@arg+1
  5033  0488  0836               	movf	___ftdiv@f3+2,w
  5034  0489  00F5               	movwf	___ftpack@arg+2
  5035  048A  0837               	movf	___ftdiv@exp,w
  5036  048B  00AF               	movwf	??___ftdiv
  5037  048C  082F               	movf	??___ftdiv,w
  5038  048D  00F6               	movwf	___ftpack@exp
  5039  048E  0838               	movf	___ftdiv@sign,w
  5040  048F  00B0               	movwf	??___ftdiv+1
  5041  0490  0830               	movf	??___ftdiv+1,w
  5042  0491  00F7               	movwf	___ftpack@sign
  5043  0492  3186  2613         	fcall	___ftpack
  5044  0494  0873               	movf	?___ftpack,w
  5045  0495  0020               	movlb	0	; select bank0
  5046  0496  00A9               	movwf	?___ftdiv
  5047  0497  0874               	movf	?___ftpack+1,w
  5048  0498  00AA               	movwf	?___ftdiv+1
  5049  0499  0875               	movf	?___ftpack+2,w
  5050  049A  00AB               	movwf	?___ftdiv+2
  5051  049B  0008               	return
  5052  049C                     __end_of___ftdiv:	
  5053                           
  5054                           	psect	text23
  5055  0EBF                     __ptext23:	
  5056 ;; *************** function ___awtoft *****************
  5057 ;; Defined at:
  5058 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  c               2    3[BANK0 ] int 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  sign            1    8[BANK0 ] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  3    3[BANK0 ] float 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0, pclath, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5072 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;Total ram usage:        6 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    3
  5079 ;; This function calls:
  5080 ;;		___ftpack
  5081 ;; This function is called by:
  5082 ;;		_step
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           
  5087                           ;psect for function ___awtoft
  5088  0EBF                     ___awtoft:	
  5089                           
  5090                           ;incstack = 0
  5091                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5092  0EBF  0020               	movlb	0	; select bank0
  5093  0EC0  01A8               	clrf	___awtoft@sign
  5094  0EC1  1FA4               	btfss	___awtoft@c+1,7
  5095  0EC2  2ECA               	goto	l2736
  5096  0EC3  09A3               	comf	___awtoft@c,f
  5097  0EC4  09A4               	comf	___awtoft@c+1,f
  5098  0EC5  0AA3               	incf	___awtoft@c,f
  5099  0EC6  1903               	skipnz
  5100  0EC7  0AA4               	incf	___awtoft@c+1,f
  5101  0EC8  01A8               	clrf	___awtoft@sign
  5102  0EC9  0AA8               	incf	___awtoft@sign,f
  5103  0ECA                     l2736:	
  5104  0ECA  0823               	movf	___awtoft@c,w
  5105  0ECB  00F3               	movwf	___ftpack@arg
  5106  0ECC  0824               	movf	___awtoft@c+1,w
  5107  0ECD  00F4               	movwf	___ftpack@arg+1
  5108  0ECE  01F5               	clrf	___ftpack@arg+2
  5109  0ECF  308E               	movlw	142
  5110  0ED0  00A6               	movwf	??___awtoft
  5111  0ED1  0826               	movf	??___awtoft,w
  5112  0ED2  00F6               	movwf	___ftpack@exp
  5113  0ED3  0828               	movf	___awtoft@sign,w
  5114  0ED4  00A7               	movwf	??___awtoft+1
  5115  0ED5  0827               	movf	??___awtoft+1,w
  5116  0ED6  00F7               	movwf	___ftpack@sign
  5117  0ED7  3186  2613         	fcall	___ftpack
  5118  0ED9  0873               	movf	?___ftpack,w
  5119  0EDA  0020               	movlb	0	; select bank0
  5120  0EDB  00A3               	movwf	?___awtoft
  5121  0EDC  0874               	movf	?___ftpack+1,w
  5122  0EDD  00A4               	movwf	?___awtoft+1
  5123  0EDE  0875               	movf	?___ftpack+2,w
  5124  0EDF  00A5               	movwf	?___awtoft+2
  5125  0EE0  0008               	return
  5126  0EE1                     __end_of___awtoft:	
  5127                           
  5128                           	psect	text24
  5129  0613                     __ptext24:	
  5130 ;; *************** function ___ftpack *****************
  5131 ;; Defined at:
  5132 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  arg             3    3[COMMON] unsigned um
  5135 ;;  exp             1    6[COMMON] unsigned char 
  5136 ;;  sign            1    7[COMMON] unsigned char 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  3    3[COMMON] float 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5148 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;Total ram usage:        8 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    2
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		___altoft
  5159 ;;		___awtoft
  5160 ;;		___ftadd
  5161 ;;		___ftdiv
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function ___ftpack
  5167  0613                     ___ftpack:	
  5168                           
  5169                           ;incstack = 0
  5170                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5171  0613  0876               	movf	___ftpack@exp,w
  5172  0614  1903               	btfsc	3,2
  5173  0615  2E1B               	goto	l2484
  5174  0616  0875               	movf	___ftpack@arg+2,w
  5175  0617  0474               	iorwf	___ftpack@arg+1,w
  5176  0618  0473               	iorwf	___ftpack@arg,w
  5177  0619  1D03               	skipz
  5178  061A  2E2D               	goto	l2490
  5179  061B                     l2484:	
  5180  061B  3000               	movlw	0
  5181  061C  00F3               	movwf	?___ftpack
  5182  061D  3000               	movlw	0
  5183  061E  00F4               	movwf	?___ftpack+1
  5184  061F  3000               	movlw	0
  5185  0620  00F5               	movwf	?___ftpack+2
  5186  0621  0008               	return
  5187  0622                     l2488:	
  5188  0622  3001               	movlw	1
  5189  0623  0020               	movlb	0	; select bank0
  5190  0624  00A0               	movwf	??___ftpack
  5191  0625  0820               	movf	??___ftpack,w
  5192  0626  07F6               	addwf	___ftpack@exp,f
  5193  0627  3001               	movlw	1
  5194  0628                     u3215:	
  5195  0628  36F5               	lsrf	___ftpack@arg+2,f
  5196  0629  0CF4               	rrf	___ftpack@arg+1,f
  5197  062A  0CF3               	rrf	___ftpack@arg,f
  5198  062B  0B89               	decfsz	9,f
  5199  062C  2E28               	goto	u3215
  5200  062D                     l2490:	
  5201  062D  30FE               	movlw	254
  5202  062E  0575               	andwf	___ftpack@arg+2,w
  5203  062F  1903               	btfsc	3,2
  5204  0630  2E47               	goto	l538
  5205  0631  2E22               	goto	l2488
  5206  0632                     l2492:	
  5207  0632  3001               	movlw	1
  5208  0633  0020               	movlb	0	; select bank0
  5209  0634  00A0               	movwf	??___ftpack
  5210  0635  0820               	movf	??___ftpack,w
  5211  0636  07F6               	addwf	___ftpack@exp,f
  5212  0637  3001               	movlw	1
  5213  0638  07F3               	addwf	___ftpack@arg,f
  5214  0639  3000               	movlw	0
  5215  063A  1803               	skipnc
  5216  063B  3001               	movlw	1
  5217  063C  07F4               	addwf	___ftpack@arg+1,f
  5218  063D  3000               	movlw	0
  5219  063E  1803               	skipnc
  5220  063F  3001               	movlw	1
  5221  0640  07F5               	addwf	___ftpack@arg+2,f
  5222  0641  3001               	movlw	1
  5223  0642                     u3235:	
  5224  0642  36F5               	lsrf	___ftpack@arg+2,f
  5225  0643  0CF4               	rrf	___ftpack@arg+1,f
  5226  0644  0CF3               	rrf	___ftpack@arg,f
  5227  0645  0B89               	decfsz	9,f
  5228  0646  2E42               	goto	u3235
  5229  0647                     l538:	
  5230  0647  30FF               	movlw	255
  5231  0648  0575               	andwf	___ftpack@arg+2,w
  5232  0649  1903               	btfsc	3,2
  5233  064A  2E58               	goto	l2500
  5234  064B  2E32               	goto	l2492
  5235  064C                     l2502:	
  5236  064C  3002               	movlw	2
  5237  064D  0276               	subwf	___ftpack@exp,w
  5238  064E  1C03               	btfss	3,0
  5239  064F  2E5A               	goto	l545
  5240  0650  3001               	movlw	1
  5241  0651  02F6               	subwf	___ftpack@exp,f
  5242  0652  3001               	movlw	1
  5243  0653                     u3255:	
  5244  0653  35F3               	lslf	___ftpack@arg,f
  5245  0654  0DF4               	rlf	___ftpack@arg+1,f
  5246  0655  0DF5               	rlf	___ftpack@arg+2,f
  5247  0656  0B89               	decfsz	9,f
  5248  0657  2E53               	goto	u3255
  5249  0658                     l2500:	
  5250  0658  1FF4               	btfss	___ftpack@arg+1,7
  5251  0659  2E4C               	goto	l2502
  5252  065A                     l545:	
  5253  065A  1876               	btfsc	___ftpack@exp,0
  5254  065B  2E62               	goto	l546
  5255  065C  30FF               	movlw	255
  5256  065D  05F3               	andwf	___ftpack@arg,f
  5257  065E  307F               	movlw	127
  5258  065F  05F4               	andwf	___ftpack@arg+1,f
  5259  0660  30FF               	movlw	255
  5260  0661  05F5               	andwf	___ftpack@arg+2,f
  5261  0662                     l546:	
  5262  0662  1003               	clrc
  5263  0663  0CF6               	rrf	___ftpack@exp,f
  5264  0664  0876               	movf	___ftpack@exp,w
  5265  0665  0020               	movlb	0	; select bank0
  5266  0666  00A0               	movwf	??___ftpack
  5267  0667  01A1               	clrf	??___ftpack+1
  5268  0668  01A2               	clrf	??___ftpack+2
  5269  0669  3010               	movlw	16
  5270  066A                     u3295:	
  5271  066A  35A0               	lslf	??___ftpack,f
  5272  066B  0DA1               	rlf	??___ftpack+1,f
  5273  066C  0DA2               	rlf	??___ftpack+2,f
  5274  066D  0B89               	decfsz	9,f
  5275  066E  2E6A               	goto	u3295
  5276  066F  0820               	movf	??___ftpack,w
  5277  0670  04F3               	iorwf	___ftpack@arg,f
  5278  0671  0821               	movf	??___ftpack+1,w
  5279  0672  04F4               	iorwf	___ftpack@arg+1,f
  5280  0673  0822               	movf	??___ftpack+2,w
  5281  0674  04F5               	iorwf	___ftpack@arg+2,f
  5282  0675  0877               	movf	___ftpack@sign,w
  5283  0676  1903               	btfsc	3,2
  5284  0677  0008               	return
  5285  0678  17F5               	bsf	___ftpack@arg+2,7
  5286  0679  0008               	return
  5287  067A                     __end_of___ftpack:	
  5288                           
  5289                           	psect	text25
  5290  05A8                     __ptext25:	
  5291 ;; *************** function _atoi *****************
  5292 ;; Defined at:
  5293 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\atoi.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  s               1    wreg     PTR const unsigned char 
  5296 ;;		 -> main@line(32), NULL(0), 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  5299 ;;		 -> main@line(32), NULL(0), 
  5300 ;;  a               2    7[BANK0 ] int 
  5301 ;;  sign            1    6[BANK0 ] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  2    2[BANK0 ] int 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5311 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;Total ram usage:        8 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    3
  5318 ;; This function calls:
  5319 ;;		___wmul
  5320 ;;		_isdigit
  5321 ;; This function is called by:
  5322 ;;		_main
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function _atoi
  5328  05A8                     _atoi:	
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5332                           ;atoi@s stored from wreg
  5333  05A8  0020               	movlb	0	; select bank0
  5334  05A9  00A9               	movwf	atoi@s
  5335  05AA                     l3018:	
  5336  05AA  0829               	movf	atoi@s,w
  5337  05AB  0086               	movwf	6
  5338  05AC  0187               	clrf	7
  5339  05AD  3020               	movlw	32
  5340  05AE  0601               	xorwf	1,w
  5341  05AF  1D03               	btfss	3,2
  5342  05B0  2DB6               	goto	l3020
  5343  05B1                     l3016:	
  5344  05B1  3001               	movlw	1
  5345  05B2  00A4               	movwf	??_atoi
  5346  05B3  0824               	movf	??_atoi,w
  5347  05B4  07A9               	addwf	atoi@s,f
  5348  05B5  2DAA               	goto	l3018
  5349  05B6                     l3020:	
  5350  05B6  0829               	movf	atoi@s,w
  5351  05B7  0086               	movwf	6
  5352  05B8  0187               	clrf	7
  5353  05B9  3009               	movlw	9
  5354  05BA  0601               	xorwf	1,w
  5355  05BB  1903               	btfsc	3,2
  5356  05BC  2DB1               	goto	l3016
  5357  05BD  01A7               	clrf	atoi@a
  5358  05BE  01A8               	clrf	atoi@a+1
  5359  05BF  01A6               	clrf	atoi@sign
  5360  05C0  0829               	movf	atoi@s,w
  5361  05C1  0086               	movwf	6
  5362  05C2  0187               	clrf	7
  5363  05C3  302D               	movlw	45
  5364  05C4  0601               	xorwf	1,w
  5365  05C5  1D03               	btfss	3,2
  5366  05C6  2DCC               	goto	l3028
  5367  05C7  3001               	movlw	1
  5368  05C8  00A4               	movwf	??_atoi
  5369  05C9  0824               	movf	??_atoi,w
  5370  05CA  07A6               	addwf	atoi@sign,f
  5371  05CB  2DD3               	goto	l3034
  5372  05CC                     l3028:	
  5373  05CC  0829               	movf	atoi@s,w
  5374  05CD  0086               	movwf	6
  5375  05CE  0187               	clrf	7
  5376  05CF  302B               	movlw	43
  5377  05D0  0601               	xorwf	1,w
  5378  05D1  1D03               	btfss	3,2
  5379  05D2  2DD7               	goto	l3036
  5380  05D3                     l3034:	
  5381  05D3  3001               	movlw	1
  5382  05D4  00A4               	movwf	??_atoi
  5383  05D5  0824               	movf	??_atoi,w
  5384  05D6  07A9               	addwf	atoi@s,f
  5385  05D7                     l3036:	
  5386  05D7  0829               	movf	atoi@s,w
  5387  05D8  0086               	movwf	6
  5388  05D9  0187               	clrf	7
  5389  05DA  0801               	movf	1,w
  5390  05DB  318E  2610  3185   	fcall	_isdigit
  5391  05DE  1C03               	btfss	3,0
  5392  05DF  2DFE               	goto	l3038
  5393  05E0  0020               	movlb	0	; select bank0
  5394  05E1  0828               	movf	atoi@a+1,w
  5395  05E2  00F4               	movwf	___wmul@multiplier+1
  5396  05E3  0827               	movf	atoi@a,w
  5397  05E4  00F3               	movwf	___wmul@multiplier
  5398  05E5  300A               	movlw	10
  5399  05E6  00F5               	movwf	___wmul@multiplicand
  5400  05E7  3000               	movlw	0
  5401  05E8  00F6               	movwf	___wmul@multiplicand+1
  5402  05E9  318E  2663  3185   	fcall	___wmul
  5403  05EC  0020               	movlb	0	; select bank0
  5404  05ED  0829               	movf	atoi@s,w
  5405  05EE  0086               	movwf	6
  5406  05EF  0187               	clrf	7
  5407  05F0  0801               	movf	1,w
  5408  05F1  0773               	addwf	?___wmul,w
  5409  05F2  00A4               	movwf	??_atoi
  5410  05F3  0874               	movf	?___wmul+1,w
  5411  05F4  1803               	skipnc
  5412  05F5  0A74               	incf	?___wmul+1,w
  5413  05F6  00A5               	movwf	??_atoi+1
  5414  05F7  0824               	movf	??_atoi,w
  5415  05F8  3ED0               	addlw	208
  5416  05F9  00A7               	movwf	atoi@a
  5417  05FA  30FF               	movlw	255
  5418  05FB  3D25               	addwfc	??_atoi+1,w
  5419  05FC  00A8               	movwf	atoi@a+1
  5420  05FD  2DD3               	goto	l3034
  5421  05FE                     l3038:	
  5422  05FE  0020               	movlb	0	; select bank0
  5423  05FF  0826               	movf	atoi@sign,w
  5424  0600  1903               	btfsc	3,2
  5425  0601  2E0E               	goto	l3044
  5426  0602  0927               	comf	atoi@a,w
  5427  0603  00A4               	movwf	??_atoi
  5428  0604  0928               	comf	atoi@a+1,w
  5429  0605  00A5               	movwf	??_atoi+1
  5430  0606  0AA4               	incf	??_atoi,f
  5431  0607  1903               	skipnz
  5432  0608  0AA5               	incf	??_atoi+1,f
  5433  0609  0824               	movf	??_atoi,w
  5434  060A  00A2               	movwf	?_atoi
  5435  060B  0825               	movf	??_atoi+1,w
  5436  060C  00A3               	movwf	?_atoi+1
  5437  060D  0008               	return
  5438  060E                     l3044:	
  5439  060E  0828               	movf	atoi@a+1,w
  5440  060F  00A3               	movwf	?_atoi+1
  5441  0610  0827               	movf	atoi@a,w
  5442  0611  00A2               	movwf	?_atoi
  5443  0612  0008               	return
  5444  0613                     __end_of_atoi:	
  5445                           
  5446                           	psect	text26
  5447  0E10                     __ptext26:	
  5448 ;; *************** function _isdigit *****************
  5449 ;; Defined at:
  5450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  c               1    wreg     unsigned char 
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;  c               1    4[COMMON] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;		None               void
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;Total ram usage:        2 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    2
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_atoi
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           
  5479                           ;psect for function _isdigit
  5480  0E10                     _isdigit:	
  5481                           
  5482                           ;incstack = 0
  5483                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5484                           ;isdigit@c stored from wreg
  5485  0E10  00F4               	movwf	isdigit@c
  5486  0E11  01F3               	clrf	_isdigit$439
  5487  0E12  303A               	movlw	58
  5488  0E13  0274               	subwf	isdigit@c,w
  5489  0E14  1803               	skipnc
  5490  0E15  2E1C               	goto	l2050
  5491  0E16  3030               	movlw	48
  5492  0E17  0274               	subwf	isdigit@c,w
  5493  0E18  1C03               	skipc
  5494  0E19  2E1C               	goto	l2050
  5495  0E1A  01F3               	clrf	_isdigit$439
  5496  0E1B  0AF3               	incf	_isdigit$439,f
  5497  0E1C                     l2050:	
  5498  0E1C  0C73               	rrf	_isdigit$439,w
  5499  0E1D  0008               	return
  5500  0E1E                     __end_of_isdigit:	
  5501                           
  5502                           	psect	text27
  5503  0E63                     __ptext27:	
  5504 ;; *************** function ___wmul *****************
  5505 ;; Defined at:
  5506 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;  multiplier      2    3[COMMON] unsigned int 
  5509 ;;  multiplicand    2    5[COMMON] unsigned int 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  product         2    0[BANK0 ] unsigned int 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  2    3[COMMON] unsigned int 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;Total ram usage:        6 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    2
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_step
  5532 ;;		_atoi
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function ___wmul
  5538  0E63                     ___wmul:	
  5539                           
  5540                           ;incstack = 0
  5541                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5542  0E63  0020               	movlb	0	; select bank0
  5543  0E64  01A0               	clrf	___wmul@product
  5544  0E65  01A1               	clrf	___wmul@product+1
  5545  0E66                     l2716:	
  5546  0E66  1C73               	btfss	___wmul@multiplier,0
  5547  0E67  2E6D               	goto	l352
  5548  0E68  0875               	movf	___wmul@multiplicand,w
  5549  0E69  0020               	movlb	0	; select bank0
  5550  0E6A  07A0               	addwf	___wmul@product,f
  5551  0E6B  0876               	movf	___wmul@multiplicand+1,w
  5552  0E6C  3DA1               	addwfc	___wmul@product+1,f
  5553  0E6D                     l352:	
  5554  0E6D  3001               	movlw	1
  5555  0E6E                     u3775:	
  5556  0E6E  35F5               	lslf	___wmul@multiplicand,f
  5557  0E6F  0DF6               	rlf	___wmul@multiplicand+1,f
  5558  0E70  0B89               	decfsz	9,f
  5559  0E71  2E6E               	goto	u3775
  5560  0E72  3001               	movlw	1
  5561  0E73                     u3785:	
  5562  0E73  36F4               	lsrf	___wmul@multiplier+1,f
  5563  0E74  0CF3               	rrf	___wmul@multiplier,f
  5564  0E75  0B89               	decfsz	9,f
  5565  0E76  2E73               	goto	u3785
  5566  0E77  0873               	movf	___wmul@multiplier,w
  5567  0E78  0474               	iorwf	___wmul@multiplier+1,w
  5568  0E79  1D03               	btfss	3,2
  5569  0E7A  2E66               	goto	l2716
  5570  0E7B  0020               	movlb	0	; select bank0
  5571  0E7C  0821               	movf	___wmul@product+1,w
  5572  0E7D  00F4               	movwf	?___wmul+1
  5573  0E7E  0820               	movf	___wmul@product,w
  5574  0E7F  00F3               	movwf	?___wmul
  5575  0E80  0008               	return
  5576  0E81                     __end_of___wmul:	
  5577                           
  5578                           	psect	intentry
  5579  0004                     __pintentry:	
  5580 ;; *************** function _isr *****************
  5581 ;; Defined at:
  5582 ;;		line 4 in file "interrupt.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;		None               void
  5589 ;; Registers used:
  5590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;Total ram usage:        1 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    1
  5603 ;; This function calls:
  5604 ;;		_receive_isr
  5605 ;; This function is called by:
  5606 ;;		Interrupt level 1
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610  0004                     _isr:	
  5611                           
  5612                           ;incstack = 0
  5613                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5614  0004  3180               	pagesel	$
  5615  0005  0020               	movlb	0	; select bank0
  5616  0006  087F               	movf	127,w
  5617  0007  00F2               	movwf	??_isr
  5618                           
  5619                           ;interrupt.c: 5: if(TMR0IF){
  5620  0008  190B               	btfsc	11,2	;volatile
  5621                           
  5622                           ;interrupt.c: 7: TMR0IF = 0;
  5623  0009  110B               	bcf	11,2	;volatile
  5624                           
  5625                           ;interrupt.c: 8: }
  5626                           ;interrupt.c: 9: if(RCIF){
  5627  000A  1E91               	btfss	17,5	;volatile
  5628  000B  2812               	goto	i1l13
  5629                           
  5630                           ;interrupt.c: 10: RA1=!RA1;
  5631  000C  3002               	movlw	2
  5632  000D  068C               	xorwf	12,f
  5633                           
  5634                           ;interrupt.c: 11: receive_isr();
  5635  000E  318E  2681         	fcall	_receive_isr
  5636                           
  5637                           ;interrupt.c: 12: RCIF = 0;
  5638  0010  0020               	movlb	0	; select bank0
  5639  0011  1291               	bcf	17,5	;volatile
  5640  0012                     i1l13:	
  5641  0012  0872               	movf	??_isr,w
  5642  0013  00FF               	movwf	127
  5643  0014  0009               	retfie
  5644  0015                     __end_of_isr:	
  5645                           
  5646                           	psect	text29
  5647  0E81                     __ptext29:	
  5648 ;; *************** function _receive_isr *****************
  5649 ;; Defined at:
  5650 ;;		line 125 in file "uart.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  temp            1    1[COMMON] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;		None               void
  5657 ;; Registers used:
  5658 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		_isr
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           
  5678                           ;psect for function _receive_isr
  5679  0E81                     _receive_isr:	
  5680                           
  5681                           ;uart.c: 126: uint8_t temp;
  5682                           ;uart.c: 127: temp=RCREG;
  5683                           
  5684                           ;incstack = 0
  5685                           ; Regs used in _receive_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  5686  0E81  0023               	movlb	3	; select bank3
  5687  0E82  0819               	movf	25,w	;volatile
  5688  0E83  00F0               	movwf	??_receive_isr
  5689  0E84  0870               	movf	??_receive_isr,w
  5690  0E85  00F1               	movwf	receive_isr@temp
  5691                           
  5692                           ;uart.c: 128: if (rx_used<32) {
  5693  0E86  3020               	movlw	32
  5694  0E87  0020               	movlb	0	; select bank0
  5695  0E88  0268               	subwf	_rx_used,w
  5696  0E89  1803               	skipnc
  5697  0E8A  2E9E               	goto	i1l2086
  5698                           
  5699                           ;uart.c: 129: rxbuf[rx_in]=temp;
  5700  0E8B  0871               	movf	receive_isr@temp,w
  5701  0E8C  00F0               	movwf	??_receive_isr
  5702  0E8D  0878               	movf	_rx_in,w
  5703  0E8E  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  5704  0E8F  0086               	movwf	6
  5705  0E90  3001               	movlw	1	; select bank3/4
  5706  0E91  0087               	movwf	7
  5707  0E92  0870               	movf	??_receive_isr,w
  5708  0E93  0081               	movwf	1
  5709                           
  5710                           ;uart.c: 130: rx_in=(rx_in+1)%32;
  5711  0E94  0878               	movf	_rx_in,w
  5712  0E95  3E01               	addlw	1
  5713  0E96  391F               	andlw	31
  5714  0E97  00F0               	movwf	??_receive_isr
  5715  0E98  0870               	movf	??_receive_isr,w
  5716  0E99  00F8               	movwf	_rx_in
  5717                           
  5718                           ;uart.c: 131: rx_used++;
  5719  0E9A  3001               	movlw	1
  5720  0E9B  00F0               	movwf	??_receive_isr
  5721  0E9C  0870               	movf	??_receive_isr,w
  5722  0E9D  07E8               	addwf	_rx_used,f
  5723  0E9E                     i1l2086:	
  5724                           
  5725                           ;uart.c: 132: }
  5726                           ;uart.c: 133: RCIF=0;
  5727  0E9E  1291               	bcf	17,5	;volatile
  5728  0E9F  0008               	return
  5729  0EA0                     __end_of_receive_isr:	
  5730                           ;uart.c: 134: return;
  5731                           
  5732  007E                     btemp	set	126	;btemp
  5733  007E                     wtemp	set	126
  5734  007E                     wtemp0	set	126
  5735  0080                     wtemp1	set	128
  5736  0082                     wtemp2	set	130
  5737  0084                     wtemp3	set	132
  5738  0086                     wtemp4	set	134
  5739  0088                     wtemp5	set	136
  5740  007F                     wtemp6	set	127
  5741  007E                     ttemp	set	126
  5742  007E                     ttemp0	set	126
  5743  0081                     ttemp1	set	129
  5744  0084                     ttemp2	set	132
  5745  0087                     ttemp3	set	135
  5746  007F                     ttemp4	set	127
  5747  007E                     ltemp	set	126
  5748  007E                     ltemp0	set	126
  5749  0082                     ltemp1	set	130
  5750  0086                     ltemp2	set	134
  5751  0080                     ltemp3	set	128


Data Sizes:
    Strings     20
    Constant    3
    Data        64
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     70      76
    BANK1            80     68      68
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[6]), STR_1(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> ceil@expon(BANK0[2]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@val	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@title	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@it	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@argv	PTR unsigned char [4] size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__uart_get	PTR const unsigned char  size(1) Largest target is 32
		 -> NULL(NULL[0]), rxbuf(BANK3[32]), 

    sp__uart_gets	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    uart_gets@mem	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), 

    uart_gets@it	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 


Critical Paths under _main in COMMON

    _main->_strcmp
    _main->_strtok
    _uart_gets->_find
    _strspn->_strchr
    _strcspn->_strchr
    _uart_setup->_memset
    ___ftadd->___ftpack
    ___altoft->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _atoi->___wmul

Critical Paths under _isr in COMMON

    _isr->_receive_isr

Critical Paths under _main in BANK0

    _main->_left
    _main->_right
    _uart_gets->_find
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _uart_setup->_memset
    _right->_step
    _left->_step
    _step->_ceil
    _ceil->___altoft
    ___fttol->___ftdiv
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _atoi->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_left
    _main->_right

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   34421
                                              6 BANK1     62    62      0
                               _atoi
                               _left
                              _right
                              _setup
                             _strcmp
                             _strlen
                             _strtok
                          _uart_gets
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_gets                                            9     7      2     723
                                              6 COMMON     1     1      0
                                              5 BANK0      8     6      2
                               _find
 ---------------------------------------------------------------------------------
 (2) _find                                                 8     6      2     235
                                              3 COMMON     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _strtok                                               6     4      2    1699
                                              7 COMMON     1     1      0
                                             10 BANK0      5     3      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     612
                                              3 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     612
                                              3 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               7     3      4     384
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _strlen                                               8     6      2     190
                                              3 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2     411
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     297
                         _uart_setup
 ---------------------------------------------------------------------------------
 (2) _uart_setup                                           0     0      0     297
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     297
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _right                                               13     9      4   14494
                                             63 BANK0      7     3      4
                                              0 BANK1      6     6      0
                               _step
 ---------------------------------------------------------------------------------
 (1) _left                                                13     9      4   14494
                                             63 BANK0      7     3      4
                                              0 BANK1      6     6      0
                               _step
 ---------------------------------------------------------------------------------
 (2) _step                                                 7     5      2   14070
                                             56 BANK0      7     5      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                               _ceil
 ---------------------------------------------------------------------------------
 (3) _ceil                                                 9     6      3    7760
                                             47 BANK0      9     6      3
                           ___altoft
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___fttol
                             ___wmul (ARG)
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     428
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     501
                                             25 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     548
                                              3 COMMON     3     3      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3513
                                              3 BANK0     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2337
                                             39 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2618
                                              9 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2266
                                              3 BANK0      6     3      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2068
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2    1128
                                              2 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     696
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  1     1      0      23
                                              2 COMMON     1     1      0
                        _receive_isr
 ---------------------------------------------------------------------------------
 (7) _receive_isr                                          2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _left
     _step
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul
       _ceil
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
   _right
     _step
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul
       _ceil
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
   _setup
     _uart_setup
       _memset
   _strcmp
   _strlen
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr
   _uart_gets
     _find
   _uart_send

 _isr (ROOT)
   _receive_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     44      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Aug 16 12:46:16 2018

           ___altoft@exp 004D              __CFG_CP$OFF 0000            ___altoft@sign 004E  
    ___wmul@multiplicand 0075             ___ftadd@exp1 002F             ___ftadd@exp2 002E  
           ___ftadd@sign 002D                      l242 007B                      l163 0E09  
                    l245 0085                      l352 0E6D                      l545 065A  
                    l546 0662                      l538 0647                      l653 0509  
                    l593 023A                      l819 0E2D                      _GIE 005F  
                    _RA0 0060                      _RA1 0061                      _RB0 0068  
                    _RA2 0062                      _RB1 0069                      _RA3 0063  
                    _RB2 006A                      _RA4 0064                      _RC1 0071  
                    _RB3 006B                      _RA5 0065                      _RC2 0072  
           __CFG_CPD$OFF 0000                      _isr 0004             __CFG_BORV$HI 0000  
                    wreg 0009              main@address 00D6             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 0033             ___ftdiv@sign 0038                     l3000 06E8  
                   l2050 0E1C                     l3010 070A                     l3020 05B6  
                   l3110 014A                     l3102 011E                     l3016 05B1  
                   l3008 0709                     l3104 0126                     l3034 05D3  
                   l3018 05AA                     l3044 060E                     l3036 05D7  
                   l3028 05CC                     l2500 0658                     l2252 0F08  
                   l3124 017E                     l3116 016E                     l3038 05FE  
                   l2502 064C                     l2254 0F10                     l2600 025E  
                   l2522 07A8                     l2610 0279                     l2258 0F27  
                   l2524 07B8                     l2700 0555                     l3084 00DB  
                   l3076 00BB                     l2550 01C3                     l2622 0FF1  
                   l2534 0F9A                     l2710 05A0                     l3094 010A  
                   l2560 01D9                     l2640 04B5                     l2490 062D  
                   l2554 01CA                     l2618 0FDB                     l3098 0116  
                   l2716 0E66                     l2492 0632                     l2484 061B  
                   l2580 0210                     l2572 01F3                     l2660 04F3  
                   l2590 022C                     l2582 0215                     l2488 0622  
                   l2736 0ECA                     l2752 0420                     l2592 0236  
                   l2584 0219                     l2672 051A                     l2840 0F8B  
                   l2832 0F82                     l2912 06B6                     l2746 040A  
                   l2578 0206                     l2666 0500                     l2658 04E5  
                   l2682 0E4D                     l2596 024C                     l2668 050C  
                   l2940 032F                     l2860 07F9                     l2836 0F87  
                   l2924 06C1                     l2774 047A                     l2766 0461  
                   l2854 07D5                     l2696 054D                     l2872 0F56  
                   l2856 07DE                     l2962 03E0                     l2970 0355  
                   l2866 0F32                     l2948 02A4                     l2868 0F3B  
                   l2976 0EE7                     l2992 06D1                     l2978 0EF2  
                   l2986 06CC                     ?_isr 0070                     STR_1 1013  
                   STR_2 1003                     STR_3 1003                     STR_4 100E  
                   STR_5 100E                     STR_6 1009                     u4030 02DF  
                   u3215 0628                     u4015 02C6                     u4120 032D  
                   u4104 0315                     u4025 02CD                     u4210 03AA  
                   u3235 0642                     u4115 031A                     u4060 02F9  
                   u4044 02E1                     u3325 07AD                     u4205 0397  
                   u3255 0653                     u4055 02E6                     u4240 03C4  
                   u4224 03AC                     u3505 021A                     u4305 0368  
                   u4090 0313                     u4074 02FB                     u4235 03B1  
                   u4155 02B7                     u4180 0390                     u3445 01F4  
                   u4165 0377                     u4085 0300                     u4270 03DE  
                   u4254 03C6                     u3295 066A                     u3535 022D  
                   u4175 037E                     u3625 04BC                     u4265 03CB  
                   u4505 0111                     u4194 0392                     u3475 0207  
                   _PEIE 005E                     i1l13 0012                     u3655 04E6  
                   u3835 0432                     u4555 0189                     _RCIE 048D  
                   _RCIF 008D                     u3845 0442                     u3685 0501  
                   u3775 0E6E                     u3855 0462                     u4567 0333  
                   u4495 00FB                     u3785 0E73                     u3865 0471  
                   u4577 03E4                     u3875 047B                     u3995 0692  
                   _PLLR 04D6                     _TXIE 048C                     _TXIF 008C  
           __CFG_WRT$OFF 0000                     _ceil 0523                     _find 0F5C  
                   _atoi 05A8                     _main 0036                     _left 0342  
           ___ftpack@arg 0073             ___ftpack@exp 0076                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     _step 070C  
                   btemp 007E                     ltemp 007E                     start 0015  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000             ___fttol@exp1 0046             ___fttol@lval 0042  
                  ??_isr 0072            __CFG_PLLEN$ON 0000                    ?_ceil 004F  
                  ?_find 0073                    ?_atoi 0022                    ?_main 0070  
                  ?_left 005F          __end_of___ftadd 0291            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 049C                    ?_step 0058          __end_of___fttol 0523  
                  _RCREG 0199                    _RCSTA 019D                    _SPBRG 019B  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TXREG 019A                    _TXSTA 019E             main@mode_sel 00DA  
         __CFG_FCMEN$OFF 0000            ___awtoft@sign 0028                    ceil@i 0053  
                  ceil@x 004F                    _frexp 0F8E                    _errno 0066  
        __end_of_isdigit 0E1E                    _right 0291            ___ftpack@sign 0077  
                  atoi@a 0027                    _setup 0E1E                    atoi@s 0029  
                  _rx_in 0078                    _rxbuf 01C0                    main@i 00DE  
                  _tx_in 0069                    _txbuf 01A0                    left@i 00A4  
                  left@k 00A2           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  step@a 005D                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __end_of_strcspn 0F5C  
           ?_receive_isr 0070          __initialization 0017             __end_of_ceil 05A8  
           __end_of_find 0F8E             __end_of_atoi 0613             __end_of_main 019B  
           __end_of_left 03F3       _step_pattern_right 0140             __end_of_step 0753  
                 ??_ceil 0052                   ??_find 0075                   ??_atoi 0024  
                 ??_main 00A6                   ??_left 0063            ___fttol@sign1 0041  
                 ??_step 0078                   ?_frexp 0073         __end_of___altoft 07D0  
                 ?_right 005F                   ?_setup 0070         __end_of___awtoft 0EE1  
                 _ANSELA 018C                   _ANSELB 018D         __end_of___ftpack 067A  
                 i1l2086 0E9E                   _OSCCON 0099                   _TMR0IF 005A  
         __CFG_PWRTE$OFF 0000                   ___ftge 0FC4                   ___wmul 0E63  
              ??___ftadd 0029           __CFG_STVREN$ON 0000                ??___ftdiv 002F  
              ??___fttol 003D                   _memset 0E47                   find@it 0023  
                 _rx_out 0079                   main@it 00DB                   _strchr 0E2D  
                 _strcmp 0F06                   _tx_out 007A                   _strlen 0EE1  
                 _strtok 06C3                   _strspn 07D0                ??_isdigit 0073  
                 right@i 00A4                   right@k 00A2                ??_strcspn 0025  
__end_of__initialization 0033               ___altoft@c 0047               ___ftadd@f1 0023  
             ___ftadd@f2 0026               ___ftge@ff1 0020               ___ftge@ff2 0023  
             ___ftdiv@f1 002C               ___ftdiv@f2 0029               ___ftdiv@f3 0034  
             ___awtoft@c 0023               ___fttol@f1 0039           __pcstackCOMMON 0070  
           __pidataBANK2 0753            __end_of_frexp 0FC4            __end_of_right 0342  
          __end_of_setup 0E2D                  ??_frexp 0020                  ??_right 0063  
                ??_setup 0078               __pbssBANK0 0066               __pbssBANK3 01A0  
        __CFG_VCAPEN$OFF 0000               __pmaintext 0036     __size_of_receive_isr 001F  
                ?___ftge 0020                  ?___wmul 0073               __pintentry 0004  
              ?___altoft 0047                  ?_memset 0073                ?___awtoft 0023  
              ?___ftpack 0073                  ?_strchr 0073                  ?_strcmp 0073  
                ?_strlen 0073                  ?_strtok 002A                  ?_strspn 0023  
     __size_of_uart_gets 0049       __size_of_uart_send 0008          __size_of___ftge 003C  
                ___ftadd 019B                  ___ftdiv 03F3          __size_of___wmul 001E  
                ___fttol 049C               ??___altoft 004B               ??___awtoft 0026  
             ??___ftpack 0020          __size_of_memset 001C                  __ptext1 0E08  
                __ptext2 067A                  __ptext3 0F5C                  __ptext4 06C3  
                __ptext5 07D0                  __ptext6 0F2D                  __ptext7 0E2D  
                __ptext8 0EE1                  __ptext9 0F06          __size_of_strchr 001A  
        __size_of_strcmp 0027          __size_of_strlen 0025          __size_of_strtok 0049  
        __size_of_strspn 002F                  _isdigit 0E10             __size_of_isr 0011  
                find@idx 0024                  _rx_used 0068                  main@len 00D8  
                clrloop0 0E03                  main@val 00E3                  _tx_used 006A  
                _strcspn 0F2D                  left@mal 005F     end_of_initialization 0033  
                init_ram 0DFC                  memset@c 0073                  memset@n 0075  
                memset@p 0021                  initloop 0DFD        __end_of_uart_gets 06C3  
      __end_of_uart_send 0E10                  step@deg 0058             __pstringtext 1000  
            uart_gets@it 0029                  strcmp@r 0076                  strlen@s 0075  
             _uart_setup 0EA0                  strspn@i 0027         __CFG_FOSC$INTOSC 0000  
            ___ftdiv@exp 0037               main@tokens 1000           __end_of___ftge 1000  
         __end_of___wmul 0E81           __end_of_memset 0E63           __end_of_strchr 0E47  
         __end_of_strcmp 0F2D           __end_of_strlen 0F06           __end_of_strtok 070C  
         __end_of_strspn 07FF      start_initialization 0017        _step_pattern_left 0120  
            __end_of_isr 0015               frexp@value 0073                 ??___ftge 0073  
               ??___wmul 0077              __pdataBANK2 0120          receive_isr@temp 0071  
               ??_memset 0077              ?_uart_setup 0070                 ??_strchr 0020  
               ??_strcmp 0075                 ??_strlen 0020                 ??_strtok 002C  
               ??_strspn 0025        __size_of___altoft 003D        __size_of___awtoft 0022  
      __size_of___ftpack 0067              __pbssCOMMON 0078                ___latbits 0003  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            ??_receive_isr 0070  
               ?___ftadd 0023                 ?___ftdiv 0029                 ?___fttol 0039  
             right@speed 0061               right@pluse 00A0                ceil@expon 0056  
               ?_isdigit 0070           __size_of_frexp 0036                 ?_strcspn 0023  
         __size_of_right 00B1           __size_of_setup 000F      __size_of_uart_setup 001F  
         ___wmul@product 0020                clear_ram0 0E02                _uart_gets 067A  
              _uart_send 0E08      __end_of_receive_isr 0EA0        ___wmul@multiplier 0073  
              main@title 00E0                left@speed 0061                left@pluse 00A0  
              frexp@eptr 0076               ?_uart_gets 0025               ?_uart_send 0070  
       __size_of___ftadd 00F6         __size_of___ftdiv 00A9                 ___altoft 0793  
       __size_of___fttol 0087                 ___awtoft 0EBF                 ___ftpack 0613  
            _isdigit$439 0073         __size_of_isdigit 000E                 __ptext10 0E1E  
               __ptext11 0EA0                 __ptext20 019B                 __ptext12 0E47  
               __ptext21 0793                 __ptext13 0291                 __ptext22 03F3  
               __ptext14 0342                 __ptext23 0EBF                 __ptext15 070C  
               __ptext24 0613                 __ptext16 0523                 __ptext25 05A8  
               __ptext17 0F8E                 __ptext26 0E10                 __ptext18 049C  
               __ptext27 0E63                 __ptext19 0FC4                 __ptext29 0E81  
       __size_of_strcspn 002F            __size_of_ceil 0085            __size_of_find 0032  
          __size_of_atoi 006B            __size_of_main 0165            __size_of_left 00B1  
          __size_of_step 0047              _receive_isr 0E81                 _step$726 005A  
               find@tail 0020                 find@size 0021                 atoi@sign 0026  
               main@addr 00DC                 main@argc 00E1                 main@argv 00D2  
           ??_uart_setup 0078                 main@line 00B2                 isdigit@c 0074  
               memset@p1 0020                 intlevel1 0000                strchr@chr 0075  
          uart_gets@tail 0027                strchr@ptr 0073            uart_gets@size 0025  
               right@mal 005F        __CFG_CLKOUTEN$OFF 0000       __end_of_uart_setup 0EBF  
              strcspn@s1 0029                strcspn@s2 0023              ??_uart_gets 0076  
            ??_uart_send 0073            uart_send@data 0073             uart_gets@idx 002C  
           uart_gets@mem 0028                 strcmp@s1 0077                 strcmp@s2 0073  
           uart_gets@pos 002A                 strlen@cp 0076                 strcspn@i 0027  
               strtok@s1 0077                 strtok@s2 002A                 strspn@s1 0029  
               strspn@s2 0023                 strtok@sp 006B       __end_ofmain@tokens 1003  
