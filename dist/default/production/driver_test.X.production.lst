

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Aug 11 10:35:19 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  0110                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020D                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029C                     	;# 
   157  029C                     	;# 
   158  029D                     	;# 
   159  029E                     	;# 
   160  029F                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0314                     	;# 
   166  0315                     	;# 
   167  0315                     	;# 
   168  0316                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  0394                     	;# 
   178  0395                     	;# 
   179  0396                     	;# 
   180  0415                     	;# 
   181  0416                     	;# 
   182  0417                     	;# 
   183  041C                     	;# 
   184  041D                     	;# 
   185  041E                     	;# 
   186  0791                     	;# 
   187  0792                     	;# 
   188  0793                     	;# 
   189  0794                     	;# 
   190  0795                     	;# 
   191  0798                     	;# 
   192  0799                     	;# 
   193  07A0                     	;# 
   194  07A1                     	;# 
   195  07A3                     	;# 
   196  07A4                     	;# 
   197  07A6                     	;# 
   198  07A7                     	;# 
   199  07A9                     	;# 
   200  07AA                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  0110                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020D                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0291                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029C                     	;# 
   323  029D                     	;# 
   324  029E                     	;# 
   325  029F                     	;# 
   326  0311                     	;# 
   327  0311                     	;# 
   328  0312                     	;# 
   329  0313                     	;# 
   330  0314                     	;# 
   331  0315                     	;# 
   332  0315                     	;# 
   333  0316                     	;# 
   334  0318                     	;# 
   335  0318                     	;# 
   336  0319                     	;# 
   337  031A                     	;# 
   338  031C                     	;# 
   339  031C                     	;# 
   340  031D                     	;# 
   341  031E                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  0415                     	;# 
   346  0416                     	;# 
   347  0417                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  0791                     	;# 
   352  0792                     	;# 
   353  0793                     	;# 
   354  0794                     	;# 
   355  0795                     	;# 
   356  0798                     	;# 
   357  0799                     	;# 
   358  07A0                     	;# 
   359  07A1                     	;# 
   360  07A3                     	;# 
   361  07A4                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A9                     	;# 
   365  07AA                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  0110                     	;# 
   429  0111                     	;# 
   430  0112                     	;# 
   431  0113                     	;# 
   432  0114                     	;# 
   433  0115                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  0118                     	;# 
   437  0119                     	;# 
   438  011A                     	;# 
   439  011B                     	;# 
   440  011D                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0194                     	;# 
   450  0195                     	;# 
   451  0196                     	;# 
   452  0199                     	;# 
   453  019A                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019E                     	;# 
   462  019F                     	;# 
   463  020D                     	;# 
   464  0210                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0217                     	;# 
   473  0291                     	;# 
   474  0291                     	;# 
   475  0292                     	;# 
   476  0293                     	;# 
   477  0294                     	;# 
   478  0295                     	;# 
   479  0295                     	;# 
   480  0296                     	;# 
   481  0298                     	;# 
   482  0298                     	;# 
   483  0299                     	;# 
   484  029A                     	;# 
   485  029B                     	;# 
   486  029C                     	;# 
   487  029C                     	;# 
   488  029D                     	;# 
   489  029E                     	;# 
   490  029F                     	;# 
   491  0311                     	;# 
   492  0311                     	;# 
   493  0312                     	;# 
   494  0313                     	;# 
   495  0314                     	;# 
   496  0315                     	;# 
   497  0315                     	;# 
   498  0316                     	;# 
   499  0318                     	;# 
   500  0318                     	;# 
   501  0319                     	;# 
   502  031A                     	;# 
   503  031C                     	;# 
   504  031C                     	;# 
   505  031D                     	;# 
   506  031E                     	;# 
   507  0394                     	;# 
   508  0395                     	;# 
   509  0396                     	;# 
   510  0415                     	;# 
   511  0416                     	;# 
   512  0417                     	;# 
   513  041C                     	;# 
   514  041D                     	;# 
   515  041E                     	;# 
   516  0791                     	;# 
   517  0792                     	;# 
   518  0793                     	;# 
   519  0794                     	;# 
   520  0795                     	;# 
   521  0798                     	;# 
   522  0799                     	;# 
   523  07A0                     	;# 
   524  07A1                     	;# 
   525  07A3                     	;# 
   526  07A4                     	;# 
   527  07A6                     	;# 
   528  07A7                     	;# 
   529  07A9                     	;# 
   530  07AA                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  0090                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0093                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  0110                     	;# 
   594  0111                     	;# 
   595  0112                     	;# 
   596  0113                     	;# 
   597  0114                     	;# 
   598  0115                     	;# 
   599  0116                     	;# 
   600  0117                     	;# 
   601  0118                     	;# 
   602  0119                     	;# 
   603  011A                     	;# 
   604  011B                     	;# 
   605  011D                     	;# 
   606  018C                     	;# 
   607  018D                     	;# 
   608  0191                     	;# 
   609  0191                     	;# 
   610  0192                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0199                     	;# 
   618  019A                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019C                     	;# 
   624  019C                     	;# 
   625  019D                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  020D                     	;# 
   629  0210                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0217                     	;# 
   638  0291                     	;# 
   639  0291                     	;# 
   640  0292                     	;# 
   641  0293                     	;# 
   642  0294                     	;# 
   643  0295                     	;# 
   644  0295                     	;# 
   645  0296                     	;# 
   646  0298                     	;# 
   647  0298                     	;# 
   648  0299                     	;# 
   649  029A                     	;# 
   650  029B                     	;# 
   651  029C                     	;# 
   652  029C                     	;# 
   653  029D                     	;# 
   654  029E                     	;# 
   655  029F                     	;# 
   656  0311                     	;# 
   657  0311                     	;# 
   658  0312                     	;# 
   659  0313                     	;# 
   660  0314                     	;# 
   661  0315                     	;# 
   662  0315                     	;# 
   663  0316                     	;# 
   664  0318                     	;# 
   665  0318                     	;# 
   666  0319                     	;# 
   667  031A                     	;# 
   668  031C                     	;# 
   669  031C                     	;# 
   670  031D                     	;# 
   671  031E                     	;# 
   672  0394                     	;# 
   673  0395                     	;# 
   674  0396                     	;# 
   675  0415                     	;# 
   676  0416                     	;# 
   677  0417                     	;# 
   678  041C                     	;# 
   679  041D                     	;# 
   680  041E                     	;# 
   681  0791                     	;# 
   682  0792                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0798                     	;# 
   687  0799                     	;# 
   688  07A0                     	;# 
   689  07A1                     	;# 
   690  07A3                     	;# 
   691  07A4                     	;# 
   692  07A6                     	;# 
   693  07A7                     	;# 
   694  07A9                     	;# 
   695  07AA                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  000E                     	;# 
   722  0010                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0013                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  008E                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010E                     	;# 
   758  0110                     	;# 
   759  0111                     	;# 
   760  0112                     	;# 
   761  0113                     	;# 
   762  0114                     	;# 
   763  0115                     	;# 
   764  0116                     	;# 
   765  0117                     	;# 
   766  0118                     	;# 
   767  0119                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011D                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020D                     	;# 
   794  0210                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0217                     	;# 
   803  0291                     	;# 
   804  0291                     	;# 
   805  0292                     	;# 
   806  0293                     	;# 
   807  0294                     	;# 
   808  0295                     	;# 
   809  0295                     	;# 
   810  0296                     	;# 
   811  0298                     	;# 
   812  0298                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029B                     	;# 
   816  029C                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  029E                     	;# 
   820  029F                     	;# 
   821  0311                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0315                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0318                     	;# 
   830  0318                     	;# 
   831  0319                     	;# 
   832  031A                     	;# 
   833  031C                     	;# 
   834  031C                     	;# 
   835  031D                     	;# 
   836  031E                     	;# 
   837  0394                     	;# 
   838  0395                     	;# 
   839  0396                     	;# 
   840  0415                     	;# 
   841  0416                     	;# 
   842  0417                     	;# 
   843  041C                     	;# 
   844  041D                     	;# 
   845  041E                     	;# 
   846  0791                     	;# 
   847  0792                     	;# 
   848  0793                     	;# 
   849  0794                     	;# 
   850  0795                     	;# 
   851  0798                     	;# 
   852  0799                     	;# 
   853  07A0                     	;# 
   854  07A1                     	;# 
   855  07A3                     	;# 
   856  07A4                     	;# 
   857  07A6                     	;# 
   858  07A7                     	;# 
   859  07A9                     	;# 
   860  07AA                     	;# 
   861  0FE4                     	;# 
   862  0FE5                     	;# 
   863  0FE6                     	;# 
   864  0FE7                     	;# 
   865  0FE8                     	;# 
   866  0FE9                     	;# 
   867  0FEA                     	;# 
   868  0FEB                     	;# 
   869  0FED                     	;# 
   870  0FEE                     	;# 
   871  0FEF                     	;# 
   872                           
   873                           	psect	idataBANK2
   874  0760                     __pidataBANK2:	
   875                           
   876                           ;initializer for _step_pattern_left
   877  0760  3400               	retlw	0
   878  0761  3400               	retlw	0
   879  0762  3400               	retlw	0
   880  0763  3400               	retlw	0
   881  0764  3400               	retlw	0
   882  0765  3400               	retlw	0
   883  0766  3401               	retlw	1
   884  0767  3400               	retlw	0
   885  0768  3400               	retlw	0
   886  0769  3400               	retlw	0
   887  076A  3401               	retlw	1
   888  076B  3400               	retlw	0
   889  076C  3400               	retlw	0
   890  076D  3400               	retlw	0
   891  076E  3400               	retlw	0
   892  076F  3400               	retlw	0
   893  0770  3400               	retlw	0
   894  0771  3400               	retlw	0
   895  0772  3400               	retlw	0
   896  0773  3400               	retlw	0
   897  0774  3401               	retlw	1
   898  0775  3400               	retlw	0
   899  0776  3400               	retlw	0
   900  0777  3400               	retlw	0
   901  0778  3401               	retlw	1
   902  0779  3400               	retlw	0
   903  077A  3400               	retlw	0
   904  077B  3400               	retlw	0
   905  077C  3400               	retlw	0
   906  077D  3400               	retlw	0
   907  077E  3400               	retlw	0
   908  077F  3400               	retlw	0
   909                           
   910                           ;initializer for _step_pattern_right
   911  0780  3400               	retlw	0
   912  0781  3400               	retlw	0
   913  0782  3401               	retlw	1
   914  0783  3400               	retlw	0
   915  0784  3400               	retlw	0
   916  0785  3400               	retlw	0
   917  0786  3400               	retlw	0
   918  0787  3400               	retlw	0
   919  0788  3400               	retlw	0
   920  0789  3400               	retlw	0
   921  078A  3400               	retlw	0
   922  078B  3400               	retlw	0
   923  078C  3400               	retlw	0
   924  078D  3400               	retlw	0
   925  078E  3401               	retlw	1
   926  078F  3400               	retlw	0
   927  0790  3401               	retlw	1
   928  0791  3400               	retlw	0
   929  0792  3400               	retlw	0
   930  0793  3400               	retlw	0
   931  0794  3400               	retlw	0
   932  0795  3400               	retlw	0
   933  0796  3400               	retlw	0
   934  0797  3400               	retlw	0
   935  0798  3400               	retlw	0
   936  0799  3400               	retlw	0
   937  079A  3400               	retlw	0
   938  079B  3400               	retlw	0
   939  079C  3401               	retlw	1
   940  079D  3400               	retlw	0
   941  079E  3400               	retlw	0
   942  079F  3400               	retlw	0
   943                           
   944                           	psect	stringtext
   945  1000                     __pstringtext:	
   946  1000                     main@tokens:	
   947  1000  3420               	retlw	32
   948  1001  342C               	retlw	44
   949  1002  3400               	retlw	0
   950  1003                     __end_ofmain@tokens:	
   951  0015                     _TMR0	set	21
   952  005F                     _GIE	set	95
   953  005E                     _PEIE	set	94
   954  0060                     _RA0	set	96
   955  0061                     _RA1	set	97
   956  0062                     _RA2	set	98
   957  0063                     _RA3	set	99
   958  0064                     _RA4	set	100
   959  0065                     _RA5	set	101
   960  0068                     _RB0	set	104
   961  0069                     _RB1	set	105
   962  006A                     _RB2	set	106
   963  006B                     _RB3	set	107
   964  0071                     _RC1	set	113
   965  0072                     _RC2	set	114
   966  008D                     _RCIF	set	141
   967  005D                     _T0IE	set	93
   968  005A                     _T0IF	set	90
   969  005A                     _TMR0IF	set	90
   970  008C                     _TXIF	set	140
   971  0099                     _OSCCON	set	153
   972  008C                     _TRISA	set	140
   973  008D                     _TRISB	set	141
   974  008E                     _TRISC	set	142
   975  04A8                     _PS0	set	1192
   976  04A9                     _PS1	set	1193
   977  04AA                     _PS2	set	1194
   978  04AB                     _PSA	set	1195
   979  048D                     _RCIE	set	1165
   980  04AD                     _T0CS	set	1197
   981  048C                     _TXIE	set	1164
   982  018C                     _ANSELA	set	396
   983  018D                     _ANSELB	set	397
   984  0199                     _RCREG	set	409
   985  019D                     _RCSTA	set	413
   986  019B                     _SPBRG	set	411
   987  019A                     _TXREG	set	410
   988  019E                     _TXSTA	set	414
   989  1003                     STR_2:	
   990  1003  3472               	retlw	114	;'r'
   991  1004  3469               	retlw	105	;'i'
   992  1005  3467               	retlw	103	;'g'
   993  1006  3468               	retlw	104	;'h'
   994  1007  3474               	retlw	116	;'t'
   995  1008  3400               	retlw	0
   996  1009                     STR_6:	
   997  1009  3465               	retlw	101	;'e'
   998  100A  3463               	retlw	99	;'c'
   999  100B  3468               	retlw	104	;'h'
  1000  100C  346F               	retlw	111	;'o'
  1001  100D  3400               	retlw	0
  1002  100E                     STR_4:	
  1003  100E  346C               	retlw	108	;'l'
  1004  100F  3465               	retlw	101	;'e'
  1005  1010  3466               	retlw	102	;'f'
  1006  1011  3474               	retlw	116	;'t'
  1007  1012  3400               	retlw	0
  1008  1013                     STR_1:	
  1009  1013  3473               	retlw	115	;'s'
  1010  1014  3465               	retlw	101	;'e'
  1011  1015  346C               	retlw	108	;'l'
  1012  1016  3400               	retlw	0
  1013  100E                     
  1014                           ; #config settings
  1015  0000                     
  1016                           	psect	cinit
  1017  0015                     start_initialization:	
  1018  0015                     __initialization:	
  1019                           
  1020                           ; Clear objects allocated to COMMON
  1021  0015  01F8               	clrf	__pbssCOMMON& (0+127)
  1022  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1023  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1024                           
  1025                           ; Clear objects allocated to BANK0
  1026  0018  01E6               	clrf	__pbssBANK0& (0+127)
  1027  0019  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1028  001A  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1029  001B  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1030  001C  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1031  001D  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  1032                           
  1033                           ; Clear objects allocated to BANK3
  1034  001E  30A0               	movlw	low __pbssBANK3
  1035  001F  0084               	movwf	4
  1036  0020  3001               	movlw	high __pbssBANK3
  1037  0021  0085               	movwf	5
  1038  0022  3040               	movlw	64
  1039  0023  318D  25EF  3180   	fcall	clear_ram0
  1040                           
  1041                           ; Initialize objects allocated to BANK2
  1042  0026  3060               	movlw	low __pidataBANK2
  1043  0027  0084               	movwf	4
  1044  0028  3087               	movlw	(high __pidataBANK2)| (0+128)
  1045  0029  0085               	movwf	5
  1046  002A  3020               	movlw	low __pdataBANK2
  1047  002B  0086               	movwf	6
  1048  002C  3001               	movlw	high __pdataBANK2
  1049  002D  0087               	movwf	7
  1050  002E  3040               	movlw	64
  1051  002F  318D  25E9         	fcall	init_ram
  1052  0031                     end_of_initialization:	
  1053                           ;End of C runtime variable initialization code
  1054                           
  1055  0031                     __end_of__initialization:	
  1056  0031  0020               	movlb	0
  1057  0032  3180  2834         	ljmp	_main	;jump to C main() function
  1058                           
  1059                           	psect	bssCOMMON
  1060  0078                     __pbssCOMMON:	
  1061  0078                     _rx_in:	
  1062  0078                     	ds	1
  1063  0079                     _rx_out:	
  1064  0079                     	ds	1
  1065  007A                     _tx_out:	
  1066  007A                     	ds	1
  1067                           
  1068                           	psect	bssBANK0
  1069  0066                     __pbssBANK0:	
  1070  0066                     _errno:	
  1071  0066                     	ds	2
  1072  0068                     _rx_used:	
  1073  0068                     	ds	1
  1074  0069                     _tx_in:	
  1075  0069                     	ds	1
  1076  006A                     _tx_used:	
  1077  006A                     	ds	1
  1078  006B                     strtok@sp:	
  1079  006B                     	ds	1
  1080                           
  1081                           	psect	dataBANK2
  1082  0120                     __pdataBANK2:	
  1083  0120                     _step_pattern_left:	
  1084  0120                     	ds	32
  1085  0140                     _step_pattern_right:	
  1086  0140                     	ds	32
  1087                           
  1088                           	psect	bssBANK3
  1089  01A0                     __pbssBANK3:	
  1090  01A0                     _txbuf:	
  1091  01A0                     	ds	32
  1092  01C0                     _rxbuf:	
  1093  01C0                     	ds	32
  1094                           
  1095                           	psect	clrtext
  1096  0DEF                     clear_ram0:	
  1097                           ;	Called with FSR0 containing the base address, and
  1098                           ;	WREG with the size to clear
  1099                           
  1100  0DEF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1101  0DF0                     clrloop0:	
  1102  0DF0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1103  0DF1  3101               	addfsr 0,1
  1104  0DF2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1105  0DF3  2DF0               	goto	clrloop0	;have we reached the end yet?
  1106  0DF4  3400               	retlw	0	;all done for this memory range, return
  1107                           
  1108                           	psect	inittext
  1109  0DE9                     init_ram:	
  1110  0DE9  00FE               	movwf	126
  1111  0DEA                     initloop:	
  1112  0DEA  0012               	moviw fsr0++
  1113  0DEB  001E               	movwi fsr1++
  1114  0DEC  0BFE               	decfsz	126,f
  1115  0DED  2DEA               	goto	initloop
  1116  0DEE  3400               	retlw	0
  1117                           
  1118                           	psect	cstackBANK1
  1119  00A0                     __pcstackBANK1:	
  1120  00A0                     right@pluse:	
  1121  00A0                     left@pluse:	
  1122                           ; 2 bytes @ 0x0
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x0
  1126  00A0                     	ds	2
  1127  00A2                     right@k:	
  1128  00A2                     left@k:	
  1129                           ; 2 bytes @ 0x2
  1130                           
  1131                           
  1132                           ; 2 bytes @ 0x2
  1133  00A2                     	ds	2
  1134  00A4                     right@i:	
  1135  00A4                     left@i:	
  1136                           ; 2 bytes @ 0x4
  1137                           
  1138                           
  1139                           ; 2 bytes @ 0x4
  1140  00A4                     	ds	2
  1141  00A6                     ??_main:	
  1142                           
  1143                           ; 0 bytes @ 0x6
  1144  00A6                     	ds	16
  1145  00B6                     main@line:	
  1146                           
  1147                           ; 32 bytes @ 0x16
  1148  00B6                     	ds	32
  1149  00D6                     main@argv:	
  1150                           
  1151                           ; 4 bytes @ 0x36
  1152  00D6                     	ds	4
  1153  00DA                     main@address:	
  1154                           
  1155                           ; 2 bytes @ 0x3A
  1156  00DA                     	ds	2
  1157  00DC                     main@len:	
  1158                           
  1159                           ; 2 bytes @ 0x3C
  1160  00DC                     	ds	2
  1161  00DE                     main@mode_sel:	
  1162                           
  1163                           ; 1 bytes @ 0x3E
  1164  00DE                     	ds	1
  1165  00DF                     main@it:	
  1166                           
  1167                           ; 1 bytes @ 0x3F
  1168  00DF                     	ds	1
  1169  00E0                     main@addr:	
  1170                           
  1171                           ; 2 bytes @ 0x40
  1172  00E0                     	ds	2
  1173  00E2                     main@i:	
  1174                           
  1175                           ; 2 bytes @ 0x42
  1176  00E2                     	ds	2
  1177  00E4                     main@title:	
  1178                           
  1179                           ; 1 bytes @ 0x44
  1180  00E4                     	ds	1
  1181  00E5                     main@argc:	
  1182                           
  1183                           ; 2 bytes @ 0x45
  1184  00E5                     	ds	2
  1185  00E7                     main@val:	
  1186                           
  1187                           ; 1 bytes @ 0x47
  1188  00E7                     	ds	1
  1189                           
  1190                           	psect	cstackCOMMON
  1191  0070                     __pcstackCOMMON:	
  1192  0070                     ?_receive_isr:	
  1193  0070                     ??_receive_isr:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?_isdigit:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ?_isr:	
  1200                           ; 1 bit 
  1201                           
  1202  0070                     ?_uart_send:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ?_main:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?_uart_setup:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ?_setup:	
  1212                           ; 2 bytes @ 0x0
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x0
  1216  0070                     	ds	1
  1217  0071                     receive_isr@temp:	
  1218                           
  1219                           ; 1 bytes @ 0x1
  1220  0071                     	ds	1
  1221  0072                     ??_isr:	
  1222                           
  1223                           ; 0 bytes @ 0x2
  1224  0072                     	ds	1
  1225  0073                     ??_isdigit:	
  1226  0073                     ??_uart_send:	
  1227                           ; 0 bytes @ 0x3
  1228                           
  1229  0073                     ??___ftge:	
  1230                           ; 0 bytes @ 0x3
  1231                           
  1232  0073                     ?_memset:	
  1233                           ; 0 bytes @ 0x3
  1234                           
  1235  0073                     ?_strlen:	
  1236                           ; 1 bytes @ 0x3
  1237                           
  1238  0073                     ?_strcmp:	
  1239                           ; 2 bytes @ 0x3
  1240                           
  1241  0073                     ?_strchr:	
  1242                           ; 2 bytes @ 0x3
  1243                           
  1244  0073                     ?_find:	
  1245                           ; 2 bytes @ 0x3
  1246                           
  1247  0073                     ?___wmul:	
  1248                           ; 2 bytes @ 0x3
  1249                           
  1250  0073                     ?___ftpack:	
  1251                           ; 2 bytes @ 0x3
  1252                           
  1253  0073                     ?_frexp:	
  1254                           ; 3 bytes @ 0x3
  1255                           
  1256  0073                     uart_send@data:	
  1257                           ; 3 bytes @ 0x3
  1258                           
  1259  0073                     _isdigit$445:	
  1260                           ; 1 bytes @ 0x3
  1261                           
  1262  0073                     ___wmul@multiplier:	
  1263                           ; 1 bytes @ 0x3
  1264                           
  1265  0073                     memset@c:	
  1266                           ; 2 bytes @ 0x3
  1267                           
  1268  0073                     strcmp@s2:	
  1269                           ; 2 bytes @ 0x3
  1270                           
  1271  0073                     strchr@ptr:	
  1272                           ; 2 bytes @ 0x3
  1273                           
  1274  0073                     ___ftpack@arg:	
  1275                           ; 2 bytes @ 0x3
  1276                           
  1277  0073                     frexp@value:	
  1278                           ; 3 bytes @ 0x3
  1279                           
  1280                           
  1281                           ; 3 bytes @ 0x3
  1282  0073                     	ds	1
  1283  0074                     isdigit@c:	
  1284                           
  1285                           ; 1 bytes @ 0x4
  1286  0074                     	ds	1
  1287  0075                     ??_strcmp:	
  1288  0075                     ??_find:	
  1289                           ; 0 bytes @ 0x5
  1290                           
  1291  0075                     strlen@s:	
  1292                           ; 0 bytes @ 0x5
  1293                           
  1294  0075                     ___wmul@multiplicand:	
  1295                           ; 1 bytes @ 0x5
  1296                           
  1297  0075                     memset@n:	
  1298                           ; 2 bytes @ 0x5
  1299                           
  1300  0075                     strchr@chr:	
  1301                           ; 2 bytes @ 0x5
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x5
  1305  0075                     	ds	1
  1306  0076                     ??_uart_gets:	
  1307  0076                     ___ftpack@exp:	
  1308                           ; 0 bytes @ 0x6
  1309                           
  1310  0076                     frexp@eptr:	
  1311                           ; 1 bytes @ 0x6
  1312                           
  1313  0076                     strcmp@r:	
  1314                           ; 1 bytes @ 0x6
  1315                           
  1316  0076                     strlen@cp:	
  1317                           ; 1 bytes @ 0x6
  1318                           
  1319                           
  1320                           ; 1 bytes @ 0x6
  1321  0076                     	ds	1
  1322  0077                     ??_memset:	
  1323  0077                     ??___wmul:	
  1324                           ; 0 bytes @ 0x7
  1325                           
  1326  0077                     ___ftpack@sign:	
  1327                           ; 0 bytes @ 0x7
  1328                           
  1329  0077                     strcmp@s1:	
  1330                           ; 1 bytes @ 0x7
  1331                           
  1332  0077                     strtok@s1:	
  1333                           ; 1 bytes @ 0x7
  1334                           
  1335                           
  1336                           ; 1 bytes @ 0x7
  1337  0077                     	ds	1
  1338  0078                     ??_uart_setup:	
  1339  0078                     ??_setup:	
  1340                           ; 0 bytes @ 0x8
  1341                           
  1342  0078                     ??_step:	
  1343                           ; 0 bytes @ 0x8
  1344                           
  1345                           
  1346                           	psect	cstackBANK0
  1347  0020                     __pcstackBANK0:	
  1348                           ; 0 bytes @ 0x8
  1349                           
  1350  0020                     ??_strlen:	
  1351  0020                     ??___ftpack:	
  1352                           ; 0 bytes @ 0x0
  1353                           
  1354  0020                     ??_frexp:	
  1355                           ; 0 bytes @ 0x0
  1356                           
  1357  0020                     ??_strchr:	
  1358                           ; 0 bytes @ 0x0
  1359                           
  1360  0020                     ?___ftge:	
  1361                           ; 0 bytes @ 0x0
  1362                           
  1363  0020                     find@tail:	
  1364                           ; 1 bit 
  1365                           
  1366  0020                     memset@p1:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0020                     ___wmul@product:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0020                     ___ftge@ff1:	
  1373                           ; 2 bytes @ 0x0
  1374                           
  1375                           
  1376                           ; 3 bytes @ 0x0
  1377  0020                     	ds	1
  1378  0021                     memset@p:	
  1379  0021                     find@size:	
  1380                           ; 1 bytes @ 0x1
  1381                           
  1382                           
  1383                           ; 2 bytes @ 0x1
  1384  0021                     	ds	1
  1385  0022                     ?_atoi:	
  1386                           
  1387                           ; 2 bytes @ 0x2
  1388  0022                     	ds	1
  1389  0023                     ?_strspn:	
  1390  0023                     ?_strcspn:	
  1391                           ; 2 bytes @ 0x3
  1392                           
  1393  0023                     ?___awtoft:	
  1394                           ; 2 bytes @ 0x3
  1395                           
  1396  0023                     ?___ftadd:	
  1397                           ; 3 bytes @ 0x3
  1398                           
  1399  0023                     find@it:	
  1400                           ; 3 bytes @ 0x3
  1401                           
  1402  0023                     ___awtoft@c:	
  1403                           ; 1 bytes @ 0x3
  1404                           
  1405  0023                     strcspn@s2:	
  1406                           ; 2 bytes @ 0x3
  1407                           
  1408  0023                     strspn@s2:	
  1409                           ; 2 bytes @ 0x3
  1410                           
  1411  0023                     ___ftadd@f1:	
  1412                           ; 2 bytes @ 0x3
  1413                           
  1414  0023                     ___ftge@ff2:	
  1415                           ; 3 bytes @ 0x3
  1416                           
  1417                           
  1418                           ; 3 bytes @ 0x3
  1419  0023                     	ds	1
  1420  0024                     ??_atoi:	
  1421  0024                     find@idx:	
  1422                           ; 0 bytes @ 0x4
  1423                           
  1424                           
  1425                           ; 1 bytes @ 0x4
  1426  0024                     	ds	1
  1427  0025                     ??_strspn:	
  1428  0025                     ??_strcspn:	
  1429                           ; 0 bytes @ 0x5
  1430                           
  1431  0025                     ?_uart_gets:	
  1432                           ; 0 bytes @ 0x5
  1433                           
  1434  0025                     uart_gets@size:	
  1435                           ; 1 bytes @ 0x5
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x5
  1439  0025                     	ds	1
  1440  0026                     ??___awtoft:	
  1441  0026                     atoi@sign:	
  1442                           ; 0 bytes @ 0x6
  1443                           
  1444  0026                     ___ftadd@f2:	
  1445                           ; 1 bytes @ 0x6
  1446                           
  1447                           
  1448                           ; 3 bytes @ 0x6
  1449  0026                     	ds	1
  1450  0027                     uart_gets@tail:	
  1451  0027                     atoi@a:	
  1452                           ; 1 bytes @ 0x7
  1453                           
  1454  0027                     strcspn@i:	
  1455                           ; 2 bytes @ 0x7
  1456                           
  1457  0027                     strspn@i:	
  1458                           ; 2 bytes @ 0x7
  1459                           
  1460                           
  1461                           ; 2 bytes @ 0x7
  1462  0027                     	ds	1
  1463  0028                     uart_gets@mem:	
  1464  0028                     ___awtoft@sign:	
  1465                           ; 1 bytes @ 0x8
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x8
  1469  0028                     	ds	1
  1470  0029                     ??___ftadd:	
  1471  0029                     ?___ftdiv:	
  1472                           ; 0 bytes @ 0x9
  1473                           
  1474  0029                     uart_gets@it:	
  1475                           ; 3 bytes @ 0x9
  1476                           
  1477  0029                     atoi@s:	
  1478                           ; 1 bytes @ 0x9
  1479                           
  1480  0029                     strcspn@s1:	
  1481                           ; 1 bytes @ 0x9
  1482                           
  1483  0029                     strspn@s1:	
  1484                           ; 1 bytes @ 0x9
  1485                           
  1486  0029                     ___ftdiv@f2:	
  1487                           ; 1 bytes @ 0x9
  1488                           
  1489                           
  1490                           ; 3 bytes @ 0x9
  1491  0029                     	ds	1
  1492  002A                     ?_strtok:	
  1493  002A                     uart_gets@pos:	
  1494                           ; 1 bytes @ 0xA
  1495                           
  1496  002A                     strtok@s2:	
  1497                           ; 2 bytes @ 0xA
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0xA
  1501  002A                     	ds	2
  1502  002C                     ??_strtok:	
  1503  002C                     uart_gets@idx:	
  1504                           ; 0 bytes @ 0xC
  1505                           
  1506  002C                     ___ftdiv@f1:	
  1507                           ; 1 bytes @ 0xC
  1508                           
  1509                           
  1510                           ; 3 bytes @ 0xC
  1511  002C                     	ds	1
  1512  002D                     ___ftadd@sign:	
  1513                           
  1514                           ; 1 bytes @ 0xD
  1515  002D                     	ds	1
  1516  002E                     ___ftadd@exp2:	
  1517                           
  1518                           ; 1 bytes @ 0xE
  1519  002E                     	ds	1
  1520  002F                     ??___ftdiv:	
  1521  002F                     ___ftadd@exp1:	
  1522                           ; 0 bytes @ 0xF
  1523                           
  1524                           
  1525                           ; 1 bytes @ 0xF
  1526  002F                     	ds	4
  1527  0033                     ___ftdiv@cntr:	
  1528                           
  1529                           ; 1 bytes @ 0x13
  1530  0033                     	ds	1
  1531  0034                     ___ftdiv@f3:	
  1532                           
  1533                           ; 3 bytes @ 0x14
  1534  0034                     	ds	3
  1535  0037                     ___ftdiv@exp:	
  1536                           
  1537                           ; 1 bytes @ 0x17
  1538  0037                     	ds	1
  1539  0038                     ___ftdiv@sign:	
  1540                           
  1541                           ; 1 bytes @ 0x18
  1542  0038                     	ds	1
  1543  0039                     ?___fttol:	
  1544  0039                     ___fttol@f1:	
  1545                           ; 4 bytes @ 0x19
  1546                           
  1547                           
  1548                           ; 3 bytes @ 0x19
  1549  0039                     	ds	4
  1550  003D                     ??___fttol:	
  1551                           
  1552                           ; 0 bytes @ 0x1D
  1553  003D                     	ds	4
  1554  0041                     ___fttol@sign1:	
  1555                           
  1556                           ; 1 bytes @ 0x21
  1557  0041                     	ds	1
  1558  0042                     ___fttol@lval:	
  1559                           
  1560                           ; 4 bytes @ 0x22
  1561  0042                     	ds	4
  1562  0046                     ___fttol@exp1:	
  1563                           
  1564                           ; 1 bytes @ 0x26
  1565  0046                     	ds	1
  1566  0047                     ?___altoft:	
  1567  0047                     ___altoft@c:	
  1568                           ; 3 bytes @ 0x27
  1569                           
  1570                           
  1571                           ; 4 bytes @ 0x27
  1572  0047                     	ds	4
  1573  004B                     ??___altoft:	
  1574                           
  1575                           ; 0 bytes @ 0x2B
  1576  004B                     	ds	2
  1577  004D                     ___altoft@exp:	
  1578                           
  1579                           ; 1 bytes @ 0x2D
  1580  004D                     	ds	1
  1581  004E                     ___altoft@sign:	
  1582                           
  1583                           ; 1 bytes @ 0x2E
  1584  004E                     	ds	1
  1585  004F                     ?_ceil:	
  1586  004F                     ceil@x:	
  1587                           ; 3 bytes @ 0x2F
  1588                           
  1589                           
  1590                           ; 3 bytes @ 0x2F
  1591  004F                     	ds	3
  1592  0052                     ??_ceil:	
  1593                           
  1594                           ; 0 bytes @ 0x32
  1595  0052                     	ds	1
  1596  0053                     ceil@i:	
  1597                           
  1598                           ; 3 bytes @ 0x33
  1599  0053                     	ds	3
  1600  0056                     ceil@expon:	
  1601                           
  1602                           ; 2 bytes @ 0x36
  1603  0056                     	ds	2
  1604  0058                     ?_step:	
  1605  0058                     step@deg:	
  1606                           ; 2 bytes @ 0x38
  1607                           
  1608                           
  1609                           ; 2 bytes @ 0x38
  1610  0058                     	ds	2
  1611  005A                     _step$732:	
  1612                           
  1613                           ; 3 bytes @ 0x3A
  1614  005A                     	ds	3
  1615  005D                     step@a:	
  1616                           
  1617                           ; 2 bytes @ 0x3D
  1618  005D                     	ds	2
  1619  005F                     ?_right:	
  1620  005F                     ?_left:	
  1621                           ; 0 bytes @ 0x3F
  1622                           
  1623  005F                     right@mal:	
  1624                           ; 0 bytes @ 0x3F
  1625                           
  1626  005F                     left@mal:	
  1627                           ; 2 bytes @ 0x3F
  1628                           
  1629                           
  1630                           ; 2 bytes @ 0x3F
  1631  005F                     	ds	2
  1632  0061                     right@speed:	
  1633  0061                     left@speed:	
  1634                           ; 2 bytes @ 0x41
  1635                           
  1636                           
  1637                           ; 2 bytes @ 0x41
  1638  0061                     	ds	2
  1639  0063                     ??_right:	
  1640  0063                     ??_left:	
  1641                           ; 0 bytes @ 0x43
  1642                           
  1643                           
  1644                           ; 0 bytes @ 0x43
  1645  0063                     	ds	3
  1646                           
  1647                           	psect	maintext
  1648  0034                     __pmaintext:	
  1649 ;;
  1650 ;;Main: autosize = 0, tempsize = 16, incstack = 0, save=0
  1651 ;;
  1652 ;; *************** function _main *****************
  1653 ;; Defined at:
  1654 ;;		line 56 in file "newmain.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  i               2   66[BANK1 ] int 
  1659 ;;  addr            2   64[BANK1 ] int 
  1660 ;;  len             2   60[BANK1 ] unsigned int 
  1661 ;;  line           32   22[BANK1 ] unsigned char [32]
  1662 ;;  argv            4   54[BANK1 ] PTR unsigned char [4]
  1663 ;;		 -> main@line(32), NULL(0), 
  1664 ;;  argc            2   69[BANK1 ] int 
  1665 ;;  address         2   58[BANK1 ] int 
  1666 ;;  val             1   71[BANK1 ] PTR unsigned char 
  1667 ;;		 -> main@line(32), NULL(0), 
  1668 ;;  title           1   68[BANK1 ] PTR unsigned char 
  1669 ;;		 -> main@line(32), NULL(0), 
  1670 ;;  it              1   63[BANK1 ] PTR unsigned char 
  1671 ;;		 -> main@line(32), NULL(0), 
  1672 ;;  mode_sel        1   62[BANK1 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;		None               void
  1675 ;; Registers used:
  1676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : B1F/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1685 ;;      Totals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0
  1686 ;;Total ram usage:       66 bytes
  1687 ;; Hardware stack levels required when called:    7
  1688 ;; This function calls:
  1689 ;;		_atoi
  1690 ;;		_left
  1691 ;;		_right
  1692 ;;		_setup
  1693 ;;		_strcmp
  1694 ;;		_strlen
  1695 ;;		_strtok
  1696 ;;		_uart_gets
  1697 ;;		_uart_send
  1698 ;; This function is called by:
  1699 ;;		Startup code after reset
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _main
  1705  0034                     _main:	
  1706                           
  1707                           ;newmain.c: 57: char line[32];
  1708                           ;newmain.c: 58: char* argv[4],* title,* val;
  1709                           ;newmain.c: 59: int argc;
  1710                           ;newmain.c: 60: char* it;
  1711                           ;newmain.c: 61: const char tokens[]=" ,";
  1712                           ;newmain.c: 62: int address = 16- (RB2*1+RB3*2+RB0*4+RB1*8)-1;;
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1716  0034  1003               	clrc
  1717  0035  0020               	movlb	0	; select bank0
  1718  0036  188D               	btfsc	13,1	;volatile
  1719  0037  1403               	setc
  1720  0038  3000               	movlw	0
  1721  0039  3D09               	addwfc	9,w
  1722  003A  0021               	movlb	1	; select bank1
  1723  003B  00A6               	movwf	??_main^(0+128)
  1724  003C  01A7               	clrf	(??_main^(0+128)+1)
  1725  003D  35A6               	lslf	??_main^(0+128),f
  1726  003E  0DA7               	rlf	(??_main^(0+128)+1),f
  1727  003F  35A6               	lslf	??_main^(0+128),f
  1728  0040  0DA7               	rlf	(??_main^(0+128)+1),f
  1729  0041  35A6               	lslf	??_main^(0+128),f
  1730  0042  0DA7               	rlf	(??_main^(0+128)+1),f
  1731  0043  1003               	clrc
  1732  0044  0020               	movlb	0	; select bank0
  1733  0045  180D               	btfsc	13,0	;volatile
  1734  0046  1403               	setc
  1735  0047  3000               	movlw	0
  1736  0048  3D09               	addwfc	9,w
  1737  0049  0021               	movlb	1	; select bank1
  1738  004A  00A8               	movwf	(??_main+2)^(0+128)
  1739  004B  01A9               	clrf	((??_main+2)^(0+128)+1)
  1740  004C  35A8               	lslf	(??_main+2)^(0+128),f
  1741  004D  0DA9               	rlf	((??_main+2)^(0+128)+1),f
  1742  004E  35A8               	lslf	(??_main+2)^(0+128),f
  1743  004F  0DA9               	rlf	((??_main+2)^(0+128)+1),f
  1744  0050  1003               	clrc
  1745  0051  0020               	movlb	0	; select bank0
  1746  0052  198D               	btfsc	13,3	;volatile
  1747  0053  1403               	setc
  1748  0054  3000               	movlw	0
  1749  0055  3D09               	addwfc	9,w
  1750  0056  0021               	movlb	1	; select bank1
  1751  0057  00AA               	movwf	(??_main+4)^(0+128)
  1752  0058  01AB               	clrf	((??_main+4)^(0+128)+1)
  1753  0059  35AA               	lslf	(??_main+4)^(0+128),f
  1754  005A  0DAB               	rlf	((??_main+4)^(0+128)+1),f
  1755  005B  1003               	clrc
  1756  005C  0020               	movlb	0	; select bank0
  1757  005D  190D               	btfsc	13,2	;volatile
  1758  005E  1403               	setc
  1759  005F  3000               	movlw	0
  1760  0060  3D09               	addwfc	9,w
  1761  0061  0021               	movlb	1	; select bank1
  1762  0062  072A               	addwf	(??_main+4)^(0+128),w
  1763  0063  00AC               	movwf	(??_main+6)^(0+128)
  1764  0064  082B               	movf	(??_main+5)^(0+128),w
  1765  0065  1803               	skipnc
  1766  0066  0A2B               	incf	(??_main+5)^(0+128),w
  1767  0067  00AD               	movwf	((??_main+6)^(0+128)+1)
  1768  0068  0828               	movf	(??_main+2)^(0+128),w
  1769  0069  072C               	addwf	(??_main+6)^(0+128),w
  1770  006A  00AE               	movwf	(??_main+8)^(0+128)
  1771  006B  0829               	movf	(??_main+3)^(0+128),w
  1772  006C  3D2D               	addwfc	(??_main+7)^(0+128),w
  1773  006D  00AF               	movwf	(??_main+9)^(0+128)
  1774  006E  0826               	movf	??_main^(0+128),w
  1775  006F  072E               	addwf	(??_main+8)^(0+128),w
  1776  0070  00B0               	movwf	(??_main+10)^(0+128)
  1777  0071  0827               	movf	(??_main+1)^(0+128),w
  1778  0072  3D2F               	addwfc	(??_main+9)^(0+128),w
  1779  0073  00B1               	movwf	(??_main+11)^(0+128)
  1780  0074  0830               	movf	(??_main+10)^(0+128),w
  1781  0075  3E01               	addlw	1
  1782  0076  00B2               	movwf	(??_main+12)^(0+128)
  1783  0077  3000               	movlw	0
  1784  0078  3D31               	addwfc	(??_main+11)^(0+128),w
  1785  0079  00B3               	movwf	(??_main+13)^(0+128)
  1786  007A  09B2               	comf	(??_main+12)^(0+128),f
  1787  007B  09B3               	comf	((??_main+12)^(0+128)+1),f
  1788  007C  0AB2               	incf	(??_main+12)^(0+128),f
  1789  007D  1903               	skipnz
  1790  007E  0AB3               	incf	((??_main+12)^(0+128)+1),f
  1791  007F  0832               	movf	(??_main+12)^(0+128),w
  1792  0080  3E10               	addlw	16
  1793  0081  00B4               	movwf	(??_main+14)^(0+128)
  1794  0082  3000               	movlw	0
  1795  0083  3D33               	addwfc	(??_main+13)^(0+128),w
  1796  0084  00B5               	movwf	(??_main+15)^(0+128)
  1797  0085  0834               	movf	(??_main+14)^(0+128),w
  1798  0086  00DA               	movwf	main@address^(0+128)
  1799  0087  0835               	movf	(??_main+15)^(0+128),w
  1800  0088  00DB               	movwf	(main@address+1)^(0+128)
  1801                           
  1802                           ;newmain.c: 63: bool mode_sel=0;
  1803  0089  01DE               	clrf	main@mode_sel^(0+128)
  1804                           
  1805                           ;newmain.c: 64: setup();
  1806  008A  318E  260B  3180   	fcall	_setup
  1807                           
  1808                           ;newmain.c: 65: RA1 = 0;
  1809  008D  0020               	movlb	0	; select bank0
  1810  008E  108C               	bcf	12,1	;volatile
  1811                           
  1812                           ;newmain.c: 66: RA2 = 0;
  1813  008F  110C               	bcf	12,2	;volatile
  1814                           
  1815                           ;newmain.c: 67: RA3 = 0;
  1816  0090  118C               	bcf	12,3	;volatile
  1817  0091                     L2:	
  1818                           
  1819                           ;newmain.c: 68: RA5 = 0;
  1820  0091  128C               	bcf	12,5	;volatile
  1821  0092                     l3101:	
  1822                           ;newmain.c: 69: while(1){
  1823                           
  1824                           
  1825                           ;newmain.c: 70: if(uart_gets(line,sizeof(line))!=(0)){
  1826  0092  3020               	movlw	32
  1827  0093  0020               	movlb	0	; select bank0
  1828  0094  00A5               	movwf	uart_gets@size
  1829  0095  3000               	movlw	0
  1830  0096  00A6               	movwf	uart_gets@size+1
  1831  0097  30B6               	movlw	(low (main@line| 0))& (0+255)
  1832  0098  3186  2687  3180   	fcall	_uart_gets
  1833  009B  3A00               	xorlw	0
  1834  009C  1903               	skipnz
  1835  009D  2892               	goto	l3101
  1836                           
  1837                           ;newmain.c: 71: size_t len=strlen(line);
  1838  009E  30B6               	movlw	(low (main@line| 0))& (0+255)
  1839  009F  318E  26B2  3180   	fcall	_strlen
  1840  00A2  0874               	movf	?_strlen+1,w
  1841  00A3  0021               	movlb	1	; select bank1
  1842  00A4  00DD               	movwf	(main@len+1)^(0+128)
  1843  00A5  0873               	movf	?_strlen,w
  1844  00A6  00DC               	movwf	main@len^(0+128)
  1845                           
  1846                           ;newmain.c: 72: if (line[len-1]=='!')continue;
  1847  00A7  085C               	movf	main@len^(0+128),w
  1848  00A8  3EFF               	addlw	255
  1849  00A9  3EB6               	addlw	(low (main@line| 0))& (0+255)
  1850  00AA  0086               	movwf	6
  1851  00AB  0187               	clrf	7
  1852  00AC  3021               	movlw	33
  1853  00AD  0601               	xorwf	1,w
  1854  00AE  1903               	btfsc	3,2
  1855  00AF  2892               	goto	l3101
  1856                           
  1857                           ;newmain.c: 73: argv[0] = strtok(line,tokens);
  1858  00B0  3000               	movlw	low (main@tokens| (0+32768))
  1859  00B1  0020               	movlb	0	; select bank0
  1860  00B2  00AA               	movwf	strtok@s2
  1861  00B3  3090               	movlw	high (main@tokens| (0+32768))
  1862  00B4  00AB               	movwf	strtok@s2+1
  1863  00B5  30B6               	movlw	(low (main@line| 0))& (0+255)
  1864  00B6  3186  26D0  3180   	fcall	_strtok
  1865  00B9  0021               	movlb	1	; select bank1
  1866  00BA  00A6               	movwf	??_main^(0+128)
  1867  00BB  0826               	movf	??_main^(0+128),w
  1868  00BC  00D6               	movwf	main@argv^(0+128)
  1869                           
  1870                           ;newmain.c: 74: for (argc=1;argc<sizeof(argv)/sizeof(argv[0]);argc++){
  1871  00BD  3001               	movlw	1
  1872  00BE  00E5               	movwf	main@argc^(0+128)
  1873  00BF  3000               	movlw	0
  1874  00C0  00E6               	movwf	(main@argc^(0+128)+1)
  1875  00C1  3000               	movlw	0
  1876  00C2  0266               	subwf	(main@argc+1)^(0+128),w
  1877  00C3  3004               	movlw	4
  1878  00C4  1903               	skipnz
  1879  00C5  0265               	subwf	main@argc^(0+128),w
  1880  00C6  1803               	btfsc	3,0
  1881  00C7  28E8               	goto	l3125
  1882  00C8                     l3117:	
  1883                           
  1884                           ;newmain.c: 75: argv[argc]=it=strtok((0),tokens);
  1885  00C8  3000               	movlw	low (main@tokens| (0+32768))
  1886  00C9  0020               	movlb	0	; select bank0
  1887  00CA  00AA               	movwf	strtok@s2
  1888  00CB  3090               	movlw	high (main@tokens| (0+32768))
  1889  00CC  00AB               	movwf	strtok@s2+1
  1890  00CD  3000               	movlw	0
  1891  00CE  3186  26D0  3180   	fcall	_strtok
  1892  00D1  0021               	movlb	1	; select bank1
  1893  00D2  00DF               	movwf	main@it^(0+128)
  1894  00D3  00A6               	movwf	??_main^(0+128)
  1895  00D4  0865               	movf	main@argc^(0+128),w
  1896  00D5  3ED6               	addlw	(low (main@argv| 0))& (0+255)
  1897  00D6  0086               	movwf	6
  1898  00D7  0187               	clrf	7
  1899  00D8  0826               	movf	??_main^(0+128),w
  1900  00D9  0081               	movwf	1
  1901                           
  1902                           ;newmain.c: 76: if(it==(0))break;
  1903  00DA  085F               	movf	main@it^(0+128),w
  1904  00DB  1903               	btfsc	3,2
  1905  00DC  28E8               	goto	l3125
  1906  00DD  3001               	movlw	1
  1907  00DE  07E5               	addwf	main@argc^(0+128),f
  1908  00DF  3000               	movlw	0
  1909  00E0  3DE6               	addwfc	(main@argc+1)^(0+128),f
  1910  00E1  3000               	movlw	0
  1911  00E2  0266               	subwf	(main@argc+1)^(0+128),w
  1912  00E3  3004               	movlw	4
  1913  00E4  1903               	skipnz
  1914  00E5  0265               	subwf	main@argc^(0+128),w
  1915  00E6  1C03               	skipc
  1916  00E7  28C8               	goto	l3117
  1917  00E8                     l3125:	
  1918                           
  1919                           ;newmain.c: 77: }
  1920                           ;newmain.c: 78: title=argv[0];
  1921  00E8  0856               	movf	main@argv^(0+128),w
  1922  00E9  00A6               	movwf	??_main^(0+128)
  1923  00EA  0826               	movf	??_main^(0+128),w
  1924  00EB  00E4               	movwf	main@title^(0+128)
  1925                           
  1926                           ;newmain.c: 79: val=argv[1];
  1927  00EC  0857               	movf	(low ((main@argv| 0+1)))^(0+128),w
  1928  00ED  00A6               	movwf	??_main^(0+128)
  1929  00EE  0826               	movf	??_main^(0+128),w
  1930  00EF  00E7               	movwf	main@val^(0+128)
  1931                           
  1932                           ;newmain.c: 80: if(!strcmp(title,"sel")){
  1933  00F0  3013               	movlw	low (STR_1| (0+32768))
  1934  00F1  00F3               	movwf	strcmp@s2
  1935  00F2  3090               	movlw	high (STR_1| (0+32768))
  1936  00F3  00F4               	movwf	strcmp@s2+1
  1937  00F4  0864               	movf	main@title^(0+128),w
  1938  00F5  318E  26D7  3180   	fcall	_strcmp
  1939  00F8  0873               	movf	?_strcmp,w
  1940  00F9  0474               	iorwf	?_strcmp+1,w
  1941  00FA  1D03               	btfss	3,2
  1942  00FB  2933               	goto	l3145
  1943                           
  1944                           ;newmain.c: 81: int addr=0;
  1945  00FC  0021               	movlb	1	; select bank1
  1946  00FD  01E0               	clrf	main@addr^(0+128)
  1947  00FE  01E1               	clrf	(main@addr+1)^(0+128)
  1948                           
  1949                           ;newmain.c: 82: if(argc>=2&&argv!=(0))addr=atoi(val);
  1950  00FF  0866               	movf	(main@argc+1)^(0+128),w
  1951  0100  3A80               	xorlw	128
  1952  0101  00A6               	movwf	??_main^(0+128)
  1953  0102  3080               	movlw	128
  1954  0103  0226               	subwf	??_main^(0+128),w
  1955  0104  1D03               	skipz
  1956  0105  2908               	goto	u4465
  1957  0106  3002               	movlw	2
  1958  0107  0265               	subwf	main@argc^(0+128),w
  1959  0108                     u4465:	
  1960  0108  1C03               	skipc
  1961  0109  2917               	goto	l3135
  1962  010A  0021               	movlb	1	; select bank1
  1963  010B  0867               	movf	main@val^(0+128),w
  1964  010C  3185  25B5  3180   	fcall	_atoi
  1965  010F  0020               	movlb	0	; select bank0
  1966  0110  0823               	movf	?_atoi+1,w
  1967  0111  0021               	movlb	1	; select bank1
  1968  0112  00E1               	movwf	(main@addr+1)^(0+128)
  1969  0113  0020               	movlb	0	; select bank0
  1970  0114  0822               	movf	?_atoi,w
  1971  0115  0021               	movlb	1	; select bank1
  1972  0116  00E0               	movwf	main@addr^(0+128)
  1973  0117                     l3135:	
  1974                           
  1975                           ;newmain.c: 83: if(addr==address)mode_sel=RA5=1;
  1976  0117  0021               	movlb	1	; select bank1
  1977  0118  085B               	movf	(main@address+1)^(0+128),w
  1978  0119  0661               	xorwf	(main@addr+1)^(0+128),w
  1979  011A  1D03               	skipz
  1980  011B  291E               	goto	u4475
  1981  011C  085A               	movf	main@address^(0+128),w
  1982  011D  0660               	xorwf	main@addr^(0+128),w
  1983  011E                     u4475:	
  1984  011E  1D03               	skipz
  1985  011F  2923               	goto	l3139
  1986  0120  0020               	movlb	0	; select bank0
  1987  0121  168C               	bsf	12,5	;volatile
  1988  0122  292D               	goto	L1
  1989  0123                     l3139:	
  1990                           
  1991                           ;newmain.c: 84: else if(!addr){
  1992  0123  0860               	movf	main@addr^(0+128),w
  1993  0124  0461               	iorwf	(main@addr+1)^(0+128),w
  1994  0125  1D03               	btfss	3,2
  1995  0126  292B               	goto	l3143
  1996                           
  1997                           ;newmain.c: 85: mode_sel=1;
  1998  0127  01DE               	clrf	main@mode_sel^(0+128)
  1999  0128  0ADE               	incf	main@mode_sel^(0+128),f
  2000                           
  2001                           ;newmain.c: 86: RA5=0;
  2002  0129  0020               	movlb	0	; select bank0
  2003  012A  2891               	goto	L2
  2004  012B                     l3143:	
  2005                           ;newmain.c: 87: }else mode_sel=RA5=0;
  2006                           
  2007  012B  0020               	movlb	0	; select bank0
  2008  012C  128C               	bcf	12,5	;volatile
  2009  012D                     L1:	
  2010  012D  3000               	movlw	0
  2011  012E  1A8C               	btfsc	12,5	;volatile
  2012  012F  3001               	movlw	1
  2013  0130  0021               	movlb	1	; select bank1
  2014  0131  00DE               	movwf	main@mode_sel^(0+128)
  2015                           
  2016                           ;newmain.c: 88: }else if(!strcmp(title,"right")){
  2017  0132  2892               	goto	l3101
  2018  0133                     l3145:	
  2019  0133  3003               	movlw	low (STR_2| (0+32768))
  2020  0134  00F3               	movwf	strcmp@s2
  2021  0135  3090               	movlw	high (STR_2| (0+32768))
  2022  0136  00F4               	movwf	strcmp@s2+1
  2023  0137  0021               	movlb	1	; select bank1
  2024  0138  0864               	movf	main@title^(0+128),w
  2025  0139  318E  26D7  3180   	fcall	_strcmp
  2026  013C  0873               	movf	?_strcmp,w
  2027  013D  0474               	iorwf	?_strcmp+1,w
  2028  013E  1D03               	btfss	3,2
  2029  013F  2957               	goto	l3151
  2030                           
  2031                           ;newmain.c: 89: uart_send("right");
  2032  0140  3003               	movlw	(low (STR_2| (0+32768)))& (0+255)
  2033  0141  318D  25F5  3180   	fcall	_uart_send
  2034                           
  2035                           ;newmain.c: 90: right(val,0);
  2036  0144  0021               	movlb	1	; select bank1
  2037  0145  0867               	movf	main@val^(0+128),w
  2038  0146  00A6               	movwf	??_main^(0+128)
  2039  0147  3000               	movlw	0
  2040  0148  00A7               	movwf	(??_main^(0+128)+1)
  2041  0149  0826               	movf	??_main^(0+128),w
  2042  014A  0020               	movlb	0	; select bank0
  2043  014B  00DF               	movwf	right@mal
  2044  014C  0021               	movlb	1	; select bank1
  2045  014D  0827               	movf	(??_main+1)^(0+128),w
  2046  014E  0020               	movlb	0	; select bank0
  2047  014F  00E0               	movwf	right@mal+1
  2048  0150  3000               	movlw	0
  2049  0151  00E1               	movwf	right@speed
  2050  0152  00E2               	movwf	right@speed+1
  2051  0153  3182  229E  3180   	fcall	_right
  2052                           
  2053                           ;newmain.c: 91: }
  2054  0156  2892               	goto	l3101
  2055  0157                     l3151:	
  2056                           
  2057                           ;newmain.c: 92: else if(!strcmp(title,"left")){
  2058  0157  300E               	movlw	low (STR_4| (0+32768))
  2059  0158  00F3               	movwf	strcmp@s2
  2060  0159  3090               	movlw	high (STR_4| (0+32768))
  2061  015A  00F4               	movwf	strcmp@s2+1
  2062  015B  0021               	movlb	1	; select bank1
  2063  015C  0864               	movf	main@title^(0+128),w
  2064  015D  318E  26D7  3180   	fcall	_strcmp
  2065  0160  0873               	movf	?_strcmp,w
  2066  0161  0474               	iorwf	?_strcmp+1,w
  2067  0162  1D03               	btfss	3,2
  2068  0163  297B               	goto	l3157
  2069                           
  2070                           ;newmain.c: 93: uart_send("left");
  2071  0164  300E               	movlw	(low (STR_4| (0+32768)))& (0+255)
  2072  0165  318D  25F5  3180   	fcall	_uart_send
  2073                           
  2074                           ;newmain.c: 94: left(val,0);
  2075  0168  0021               	movlb	1	; select bank1
  2076  0169  0867               	movf	main@val^(0+128),w
  2077  016A  00A6               	movwf	??_main^(0+128)
  2078  016B  3000               	movlw	0
  2079  016C  00A7               	movwf	(??_main^(0+128)+1)
  2080  016D  0826               	movf	??_main^(0+128),w
  2081  016E  0020               	movlb	0	; select bank0
  2082  016F  00DF               	movwf	left@mal
  2083  0170  0021               	movlb	1	; select bank1
  2084  0171  0827               	movf	(??_main+1)^(0+128),w
  2085  0172  0020               	movlb	0	; select bank0
  2086  0173  00E0               	movwf	left@mal+1
  2087  0174  3000               	movlw	0
  2088  0175  00E1               	movwf	left@speed
  2089  0176  00E2               	movwf	left@speed+1
  2090  0177  3183  234F  3180   	fcall	_left
  2091                           
  2092                           ;newmain.c: 95: }else if(!strcmp(title,"echo")){
  2093  017A  2892               	goto	l3101
  2094  017B                     l3157:	
  2095  017B  3009               	movlw	low (STR_6| (0+32768))
  2096  017C  00F3               	movwf	strcmp@s2
  2097  017D  3090               	movlw	high (STR_6| (0+32768))
  2098  017E  00F4               	movwf	strcmp@s2+1
  2099  017F  0021               	movlb	1	; select bank1
  2100  0180  0864               	movf	main@title^(0+128),w
  2101  0181  318E  26D7  3180   	fcall	_strcmp
  2102  0184  0873               	movf	?_strcmp,w
  2103  0185  0474               	iorwf	?_strcmp+1,w
  2104  0186  1D03               	btfss	3,2
  2105  0187  2892               	goto	l3101
  2106                           
  2107                           ;newmain.c: 96: for(int i=0;i<strlen(val);i++){
  2108  0188  0021               	movlb	1	; select bank1
  2109  0189  01E2               	clrf	main@i^(0+128)
  2110  018A  01E3               	clrf	(main@i+1)^(0+128)
  2111  018B                     l3165:	
  2112  018B  0867               	movf	main@val^(0+128),w
  2113  018C  318E  26B2  3180   	fcall	_strlen
  2114  018F  0874               	movf	?_strlen+1,w
  2115  0190  0021               	movlb	1	; select bank1
  2116  0191  0263               	subwf	(main@i+1)^(0+128),w
  2117  0192  1D03               	skipz
  2118  0193  2996               	goto	u4525
  2119  0194  0873               	movf	?_strlen,w
  2120  0195  0262               	subwf	main@i^(0+128),w
  2121  0196                     u4525:	
  2122  0196  1803               	btfsc	3,0
  2123  0197  2892               	goto	l3101
  2124                           
  2125                           ;newmain.c: 97: uart_send(val[i]);
  2126  0198  0862               	movf	main@i^(0+128),w
  2127  0199  0767               	addwf	main@val^(0+128),w
  2128  019A  00A6               	movwf	??_main^(0+128)
  2129  019B  0826               	movf	??_main^(0+128),w
  2130  019C  0086               	movwf	6
  2131  019D  0187               	clrf	7
  2132  019E  0801               	movf	1,w
  2133  019F  318D  25F5  3180   	fcall	_uart_send
  2134  01A2  3001               	movlw	1
  2135  01A3  0021               	movlb	1	; select bank1
  2136  01A4  07E2               	addwf	main@i^(0+128),f
  2137  01A5  3000               	movlw	0
  2138  01A6  3DE3               	addwfc	(main@i+1)^(0+128),f
  2139  01A7  298B               	goto	l3165
  2140  01A8                     __end_of_main:	
  2141                           
  2142                           	psect	text1
  2143  0DF5                     __ptext1:	
  2144 ;; *************** function _uart_send *****************
  2145 ;; Defined at:
  2146 ;;		line 154 in file "uart.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  data            1    wreg     unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  data            1    3[COMMON] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		wreg
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2163 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;Total ram usage:        1 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    2
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _uart_send
  2176  0DF5                     _uart_send:	
  2177                           
  2178                           ;incstack = 0
  2179                           ; Regs used in _uart_send: [wreg]
  2180                           ;uart_send@data stored from wreg
  2181  0DF5  00F3               	movwf	uart_send@data
  2182  0DF6                     l177:	
  2183                           ;uart.c: 155: while(!TXIF);
  2184                           
  2185  0DF6  0020               	movlb	0	; select bank0
  2186  0DF7  1E11               	btfss	17,4	;volatile
  2187  0DF8  2DF6               	goto	l177
  2188                           
  2189                           ;uart.c: 156: TXREG=data;
  2190  0DF9  0873               	movf	uart_send@data,w
  2191  0DFA  0023               	movlb	3	; select bank3
  2192  0DFB  009A               	movwf	26	;volatile
  2193  0DFC  0008               	return
  2194  0DFD                     __end_of_uart_send:	
  2195                           ;uart.c: 157: return;
  2196                           
  2197                           
  2198                           	psect	text2
  2199  0687                     __ptext2:	
  2200 ;; *************** function _uart_gets *****************
  2201 ;; Defined at:
  2202 ;;		line 90 in file "uart.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  mem             1    wreg     PTR unsigned char 
  2205 ;;		 -> main@line(32), 
  2206 ;;  size            2    5[BANK0 ] unsigned int 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  mem             1    8[BANK0 ] PTR unsigned char 
  2209 ;;		 -> main@line(32), 
  2210 ;;  idx             1   12[BANK0 ] unsigned char 
  2211 ;;  tail            1    7[BANK0 ] unsigned char 
  2212 ;;  pos             2   10[BANK0 ] unsigned int 
  2213 ;;  it              1    9[BANK0 ] PTR unsigned char 
  2214 ;;		 -> main@line(32), 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      PTR unsigned char 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2225 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2227 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2228 ;;Total ram usage:        9 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    3
  2231 ;; This function calls:
  2232 ;;		_find
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _uart_gets
  2240  0687                     _uart_gets:	
  2241                           
  2242                           ;incstack = 0
  2243                           ; Regs used in _uart_gets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2244                           ;uart_gets@mem stored from wreg
  2245  0687  0020               	movlb	0	; select bank0
  2246  0688  00A8               	movwf	uart_gets@mem
  2247                           
  2248                           ;uart.c: 91: size_t pos=find();
  2249  0689  318F  275C  3186   	fcall	_find
  2250  068C  0874               	movf	?_find+1,w
  2251  068D  0020               	movlb	0	; select bank0
  2252  068E  00AB               	movwf	uart_gets@pos+1
  2253  068F  0873               	movf	?_find,w
  2254  0690  00AA               	movwf	uart_gets@pos
  2255                           
  2256                           ;uart.c: 92: uint8_t *it=mem;
  2257  0691  0828               	movf	uart_gets@mem,w
  2258  0692  00F6               	movwf	??_uart_gets
  2259  0693  0876               	movf	??_uart_gets,w
  2260  0694  00A9               	movwf	uart_gets@it
  2261                           
  2262                           ;uart.c: 93: if(0<pos && pos<size){
  2263  0695  082A               	movf	uart_gets@pos,w
  2264  0696  042B               	iorwf	uart_gets@pos+1,w
  2265  0697  1903               	btfsc	3,2
  2266  0698  2ECE               	goto	l2963
  2267  0699  0826               	movf	uart_gets@size+1,w
  2268  069A  022B               	subwf	uart_gets@pos+1,w
  2269  069B  1D03               	skipz
  2270  069C  2E9F               	goto	u3975
  2271  069D  0825               	movf	uart_gets@size,w
  2272  069E  022A               	subwf	uart_gets@pos,w
  2273  069F                     u3975:	
  2274  069F  1803               	skipnc
  2275  06A0  2ECE               	goto	l2963
  2276                           
  2277                           ;uart.c: 94: uint8_t idx;
  2278                           ;uart.c: 95: uint8_t tail=(rx_out+pos)%32;
  2279  06A1  0879               	movf	_rx_out,w
  2280  06A2  072A               	addwf	uart_gets@pos,w
  2281  06A3  391F               	andlw	31
  2282  06A4  00F6               	movwf	??_uart_gets
  2283  06A5  0876               	movf	??_uart_gets,w
  2284  06A6  00A7               	movwf	uart_gets@tail
  2285                           
  2286                           ;uart.c: 96: for (idx=rx_out;idx!=tail;idx=(idx+1)%32){
  2287  06A7  0879               	movf	_rx_out,w
  2288  06A8                     L3:	
  2289  06A8  00F6               	movwf	??_uart_gets
  2290  06A9  0876               	movf	??_uart_gets,w
  2291  06AA  00AC               	movwf	uart_gets@idx
  2292  06AB  082C               	movf	uart_gets@idx,w
  2293  06AC  0627               	xorwf	uart_gets@tail,w
  2294  06AD  1903               	btfsc	3,2
  2295  06AE  2EC3               	goto	l2951
  2296                           
  2297                           ;uart.c: 97: *(it++)=rxbuf[idx];
  2298  06AF  082C               	movf	uart_gets@idx,w
  2299  06B0  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  2300  06B1  0086               	movwf	6
  2301  06B2  3001               	movlw	1	; select bank3/4
  2302  06B3  0087               	movwf	7
  2303  06B4  0801               	movf	1,w
  2304  06B5  00F6               	movwf	??_uart_gets
  2305  06B6  0829               	movf	uart_gets@it,w
  2306  06B7  0086               	movwf	6
  2307  06B8  0187               	clrf	7
  2308  06B9  0876               	movf	??_uart_gets,w
  2309  06BA  0081               	movwf	1
  2310  06BB  3001               	movlw	1
  2311  06BC  00F6               	movwf	??_uart_gets
  2312  06BD  0876               	movf	??_uart_gets,w
  2313  06BE  07A9               	addwf	uart_gets@it,f
  2314  06BF  082C               	movf	uart_gets@idx,w
  2315  06C0  3E01               	addlw	1
  2316  06C1  391F               	andlw	31
  2317  06C2  2EA8               	goto	L3
  2318  06C3                     l2951:	
  2319                           
  2320                           ;uart.c: 98: }
  2321                           ;uart.c: 99: it--;
  2322  06C3  3001               	movlw	1
  2323  06C4  02A9               	subwf	uart_gets@it,f
  2324                           
  2325                           ;uart.c: 100: *it='\0';
  2326  06C5  0829               	movf	uart_gets@it,w
  2327  06C6  0086               	movwf	6
  2328  06C7  0187               	clrf	7
  2329  06C8  0181               	clrf	1
  2330                           
  2331                           ;uart.c: 101: rx_in=rx_out=rx_used=0;
  2332  06C9  01E8               	clrf	_rx_used
  2333  06CA  01F9               	clrf	_rx_out
  2334  06CB  01F8               	clrf	_rx_in
  2335                           
  2336                           ;uart.c: 102: return mem;
  2337  06CC  0828               	movf	uart_gets@mem,w
  2338                           
  2339                           ;uart.c: 103: }else{
  2340  06CD  0008               	return
  2341  06CE                     l2963:	
  2342                           
  2343                           ;uart.c: 104: return (0);
  2344  06CE  3000               	movlw	0
  2345  06CF  0008               	return
  2346  06D0                     __end_of_uart_gets:	
  2347                           
  2348                           	psect	text3
  2349  0F5C                     __ptext3:	
  2350 ;; *************** function _find *****************
  2351 ;; Defined at:
  2352 ;;		line 77 in file "uart.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  size            2    1[BANK0 ] unsigned int 
  2357 ;;  idx             1    4[BANK0 ] unsigned char 
  2358 ;;  it              1    3[BANK0 ] unsigned char 
  2359 ;;  tail            1    0[BANK0 ] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    3[COMMON] unsigned int 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2373 ;;Total ram usage:        8 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    2
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_uart_gets
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _find
  2385  0F5C                     _find:	
  2386                           
  2387                           ;uart.c: 78: uint8_t idx;
  2388                           ;uart.c: 79: uint8_t tail=(rx_out+rx_used)%32;
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _find: [wreg+fsr1l+fsr1h+status,2+status,0]
  2392  0F5C  0879               	movf	_rx_out,w
  2393  0F5D  0020               	movlb	0	; select bank0
  2394  0F5E  0768               	addwf	_rx_used,w
  2395  0F5F  391F               	andlw	31
  2396  0F60  00F5               	movwf	??_find
  2397  0F61  0875               	movf	??_find,w
  2398  0F62  00A0               	movwf	find@tail
  2399                           
  2400                           ;uart.c: 80: uint8_t it;
  2401                           ;uart.c: 81: size_t size=0;
  2402  0F63  01A1               	clrf	find@size
  2403  0F64  01A2               	clrf	find@size+1
  2404                           
  2405                           ;uart.c: 82: for (idx=rx_out;idx!=tail;idx=(idx+1)%32){
  2406  0F65  0879               	movf	_rx_out,w
  2407  0F66                     L4:	
  2408  0F66  00F5               	movwf	??_find
  2409  0F67  0875               	movf	??_find,w
  2410  0F68  00A4               	movwf	find@idx
  2411  0F69  0824               	movf	find@idx,w
  2412  0F6A  0620               	xorwf	find@tail,w
  2413  0F6B  1903               	btfsc	3,2
  2414  0F6C  2F8B               	goto	l2863
  2415                           
  2416                           ;uart.c: 83: it=rxbuf[idx];
  2417  0F6D  0824               	movf	find@idx,w
  2418  0F6E  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  2419  0F6F  0086               	movwf	6
  2420  0F70  3001               	movlw	1	; select bank3/4
  2421  0F71  0087               	movwf	7
  2422  0F72  0801               	movf	1,w
  2423  0F73  00F5               	movwf	??_find
  2424  0F74  0875               	movf	??_find,w
  2425  0F75  00A3               	movwf	find@it
  2426                           
  2427                           ;uart.c: 84: size++;
  2428  0F76  3001               	movlw	1
  2429  0F77  07A1               	addwf	find@size,f
  2430  0F78  3000               	movlw	0
  2431  0F79  3DA2               	addwfc	find@size+1,f
  2432                           
  2433                           ;uart.c: 85: if(it=='\n'||it=='\r')return size;
  2434  0F7A  300A               	movlw	10
  2435  0F7B  0623               	xorwf	find@it,w
  2436  0F7C  1903               	btfsc	3,2
  2437  0F7D  2F82               	goto	l2855
  2438  0F7E  300D               	movlw	13
  2439  0F7F  0623               	xorwf	find@it,w
  2440  0F80  1D03               	btfss	3,2
  2441  0F81  2F87               	goto	l2859
  2442  0F82                     l2855:	
  2443  0F82  0822               	movf	find@size+1,w
  2444  0F83  00F4               	movwf	?_find+1
  2445  0F84  0821               	movf	find@size,w
  2446  0F85  00F3               	movwf	?_find
  2447  0F86  0008               	return
  2448  0F87                     l2859:	
  2449  0F87  0824               	movf	find@idx,w
  2450  0F88  3E01               	addlw	1
  2451  0F89  391F               	andlw	31
  2452  0F8A  2F66               	goto	L4
  2453  0F8B                     l2863:	
  2454                           
  2455                           ;uart.c: 86: }
  2456                           ;uart.c: 87: return 0;
  2457  0F8B  01F3               	clrf	?_find
  2458  0F8C  01F4               	clrf	?_find+1
  2459  0F8D  0008               	return
  2460  0F8E                     __end_of_find:	
  2461                           
  2462                           	psect	text4
  2463  06D0                     __ptext4:	
  2464 ;; *************** function _strtok *****************
  2465 ;; Defined at:
  2466 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strtok.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  s1              1    wreg     PTR unsigned char 
  2469 ;;		 -> main@line(32), NULL(0), 
  2470 ;;  s2              2   10[BANK0 ] PTR const unsigned char 
  2471 ;;		 -> main@tokens(3), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  s1              1    7[COMMON] PTR unsigned char 
  2474 ;;		 -> main@line(32), NULL(0), 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      PTR unsigned char 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2484 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;Total ram usage:        6 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    4
  2491 ;; This function calls:
  2492 ;;		_strcspn
  2493 ;;		_strspn
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _strtok
  2501  06D0                     _strtok:	
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2505                           ;strtok@s1 stored from wreg
  2506  06D0  00F7               	movwf	strtok@s1
  2507  06D1  0877               	movf	strtok@s1,w
  2508  06D2  1D03               	btfss	3,2
  2509  06D3  2ED9               	goto	l3025
  2510  06D4  0020               	movlb	0	; select bank0
  2511  06D5  086B               	movf	strtok@sp,w
  2512  06D6  00AC               	movwf	??_strtok
  2513  06D7  082C               	movf	??_strtok,w
  2514  06D8  00F7               	movwf	strtok@s1
  2515  06D9                     l3025:	
  2516  06D9  0877               	movf	strtok@s1,w
  2517  06DA  1D03               	btfss	3,2
  2518  06DB  2EDE               	goto	l3031
  2519  06DC  3000               	movlw	0
  2520  06DD  0008               	return
  2521  06DE                     l3031:	
  2522  06DE  0020               	movlb	0	; select bank0
  2523  06DF  082A               	movf	strtok@s2,w
  2524  06E0  00A3               	movwf	strspn@s2
  2525  06E1  082B               	movf	strtok@s2+1,w
  2526  06E2  00A4               	movwf	strspn@s2+1
  2527  06E3  0877               	movf	strtok@s1,w
  2528  06E4  318F  272D  3186   	fcall	_strspn
  2529  06E7  0020               	movlb	0	; select bank0
  2530  06E8  0823               	movf	?_strspn,w
  2531  06E9  00AC               	movwf	??_strtok
  2532  06EA  082C               	movf	??_strtok,w
  2533  06EB  07F7               	addwf	strtok@s1,f
  2534  06EC  0877               	movf	strtok@s1,w
  2535  06ED  0086               	movwf	6
  2536  06EE  0187               	clrf	7
  2537  06EF  0801               	movf	1,w
  2538  06F0  1D03               	btfss	3,2
  2539  06F1  2EF5               	goto	l3039
  2540  06F2  01EB               	clrf	strtok@sp
  2541  06F3  3000               	movlw	0
  2542  06F4  0008               	return
  2543  06F5                     l3039:	
  2544  06F5  082A               	movf	strtok@s2,w
  2545  06F6  00A3               	movwf	strcspn@s2
  2546  06F7  082B               	movf	strtok@s2+1,w
  2547  06F8  00A4               	movwf	strcspn@s2+1
  2548  06F9  0877               	movf	strtok@s1,w
  2549  06FA  318E  26FE  3186   	fcall	_strcspn
  2550  06FD  0020               	movlb	0	; select bank0
  2551  06FE  0823               	movf	?_strcspn,w
  2552  06FF  00AC               	movwf	??_strtok
  2553  0700  0824               	movf	?_strcspn+1,w
  2554  0701  00AD               	movwf	??_strtok+1
  2555  0702  0877               	movf	strtok@s1,w
  2556  0703  072C               	addwf	??_strtok,w
  2557  0704  00AE               	movwf	??_strtok+2
  2558  0705  082E               	movf	??_strtok+2,w
  2559  0706  00EB               	movwf	strtok@sp
  2560  0707  086B               	movf	strtok@sp,w
  2561  0708  0086               	movwf	6
  2562  0709  0187               	clrf	7
  2563  070A  0801               	movf	1,w
  2564  070B  1903               	btfsc	3,2
  2565  070C  2F16               	goto	l3047
  2566  070D  086B               	movf	strtok@sp,w
  2567  070E  0086               	movwf	6
  2568  070F  0187               	clrf	7
  2569  0710  0181               	clrf	1
  2570  0711  3001               	movlw	1
  2571  0712  00AC               	movwf	??_strtok
  2572  0713  082C               	movf	??_strtok,w
  2573  0714  07EB               	addwf	strtok@sp,f
  2574  0715  2F17               	goto	l3049
  2575  0716                     l3047:	
  2576  0716  01EB               	clrf	strtok@sp
  2577  0717                     l3049:	
  2578  0717  0877               	movf	strtok@s1,w
  2579  0718  0008               	return
  2580  0719                     __end_of_strtok:	
  2581                           
  2582                           	psect	text5
  2583  0F2D                     __ptext5:	
  2584 ;; *************** function _strspn *****************
  2585 ;; Defined at:
  2586 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strspn.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  s1              1    wreg     PTR const unsigned char 
  2589 ;;		 -> main@line(32), NULL(0), 
  2590 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
  2591 ;;		 -> main@tokens(3), 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  s1              1    9[BANK0 ] PTR const unsigned char 
  2594 ;;		 -> main@line(32), NULL(0), 
  2595 ;;  i               2    7[BANK0 ] unsigned int 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2    3[BANK0 ] unsigned int 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2606 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;Total ram usage:        7 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    3
  2612 ;; This function calls:
  2613 ;;		_strchr
  2614 ;; This function is called by:
  2615 ;;		_strtok
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _strspn
  2621  0F2D                     _strspn:	
  2622                           
  2623                           ;incstack = 0
  2624                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2625                           ;strspn@s1 stored from wreg
  2626  0F2D  0020               	movlb	0	; select bank0
  2627  0F2E  00A9               	movwf	strspn@s1
  2628  0F2F  01A7               	clrf	strspn@i
  2629  0F30  01A8               	clrf	strspn@i+1
  2630  0F31  2F3B               	goto	l2879
  2631  0F32                     l2877:	
  2632  0F32  3001               	movlw	1
  2633  0F33  0020               	movlb	0	; select bank0
  2634  0F34  00A5               	movwf	??_strspn
  2635  0F35  0825               	movf	??_strspn,w
  2636  0F36  07A9               	addwf	strspn@s1,f
  2637  0F37  3001               	movlw	1
  2638  0F38  07A7               	addwf	strspn@i,f
  2639  0F39  3000               	movlw	0
  2640  0F3A  3DA8               	addwfc	strspn@i+1,f
  2641  0F3B                     l2879:	
  2642  0F3B  0829               	movf	strspn@s1,w
  2643  0F3C  0086               	movwf	6
  2644  0F3D  0187               	clrf	7
  2645  0F3E  0801               	movf	1,w
  2646  0F3F  1903               	btfsc	3,2
  2647  0F40  2F56               	goto	l2883
  2648  0F41  0823               	movf	strspn@s2,w
  2649  0F42  00F3               	movwf	strchr@ptr
  2650  0F43  0824               	movf	strspn@s2+1,w
  2651  0F44  00F4               	movwf	strchr@ptr+1
  2652  0F45  0829               	movf	strspn@s1,w
  2653  0F46  0086               	movwf	6
  2654  0F47  0187               	clrf	7
  2655  0F48  0801               	movf	1,w
  2656  0F49  00A5               	movwf	??_strspn
  2657  0F4A  01A6               	clrf	??_strspn+1
  2658  0F4B  0825               	movf	??_strspn,w
  2659  0F4C  00F5               	movwf	strchr@chr
  2660  0F4D  0826               	movf	??_strspn+1,w
  2661  0F4E  00F6               	movwf	strchr@chr+1
  2662  0F4F  318E  2624  318F   	fcall	_strchr
  2663  0F52  0873               	movf	?_strchr,w
  2664  0F53  0474               	iorwf	?_strchr+1,w
  2665  0F54  1D03               	btfss	3,2
  2666  0F55  2F32               	goto	l2877
  2667  0F56                     l2883:	
  2668  0F56  0020               	movlb	0	; select bank0
  2669  0F57  0828               	movf	strspn@i+1,w
  2670  0F58  00A4               	movwf	?_strspn+1
  2671  0F59  0827               	movf	strspn@i,w
  2672  0F5A  00A3               	movwf	?_strspn
  2673  0F5B  0008               	return
  2674  0F5C                     __end_of_strspn:	
  2675                           
  2676                           	psect	text6
  2677  0EFE                     __ptext6:	
  2678 ;; *************** function _strcspn *****************
  2679 ;; Defined at:
  2680 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcspn.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  s1              1    wreg     PTR const unsigned char 
  2683 ;;		 -> main@line(32), NULL(0), 
  2684 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
  2685 ;;		 -> main@tokens(3), 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  s1              1    9[BANK0 ] PTR const unsigned char 
  2688 ;;		 -> main@line(32), NULL(0), 
  2689 ;;  i               2    7[BANK0 ] unsigned int 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    3[BANK0 ] unsigned int 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;Total ram usage:        7 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    3
  2706 ;; This function calls:
  2707 ;;		_strchr
  2708 ;; This function is called by:
  2709 ;;		_strtok
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _strcspn
  2715  0EFE                     _strcspn:	
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2719                           ;strcspn@s1 stored from wreg
  2720  0EFE  0020               	movlb	0	; select bank0
  2721  0EFF  00A9               	movwf	strcspn@s1
  2722  0F00  01A7               	clrf	strcspn@i
  2723  0F01  01A8               	clrf	strcspn@i+1
  2724  0F02  2F0C               	goto	l2891
  2725  0F03                     l2889:	
  2726  0F03  3001               	movlw	1
  2727  0F04  0020               	movlb	0	; select bank0
  2728  0F05  00A5               	movwf	??_strcspn
  2729  0F06  0825               	movf	??_strcspn,w
  2730  0F07  07A9               	addwf	strcspn@s1,f
  2731  0F08  3001               	movlw	1
  2732  0F09  07A7               	addwf	strcspn@i,f
  2733  0F0A  3000               	movlw	0
  2734  0F0B  3DA8               	addwfc	strcspn@i+1,f
  2735  0F0C                     l2891:	
  2736  0F0C  0829               	movf	strcspn@s1,w
  2737  0F0D  0086               	movwf	6
  2738  0F0E  0187               	clrf	7
  2739  0F0F  0801               	movf	1,w
  2740  0F10  1903               	btfsc	3,2
  2741  0F11  2F27               	goto	l2895
  2742  0F12  0823               	movf	strcspn@s2,w
  2743  0F13  00F3               	movwf	strchr@ptr
  2744  0F14  0824               	movf	strcspn@s2+1,w
  2745  0F15  00F4               	movwf	strchr@ptr+1
  2746  0F16  0829               	movf	strcspn@s1,w
  2747  0F17  0086               	movwf	6
  2748  0F18  0187               	clrf	7
  2749  0F19  0801               	movf	1,w
  2750  0F1A  00A5               	movwf	??_strcspn
  2751  0F1B  01A6               	clrf	??_strcspn+1
  2752  0F1C  0825               	movf	??_strcspn,w
  2753  0F1D  00F5               	movwf	strchr@chr
  2754  0F1E  0826               	movf	??_strcspn+1,w
  2755  0F1F  00F6               	movwf	strchr@chr+1
  2756  0F20  318E  2624  318E   	fcall	_strchr
  2757  0F23  0873               	movf	?_strchr,w
  2758  0F24  0474               	iorwf	?_strchr+1,w
  2759  0F25  1903               	btfsc	3,2
  2760  0F26  2F03               	goto	l2889
  2761  0F27                     l2895:	
  2762  0F27  0020               	movlb	0	; select bank0
  2763  0F28  0828               	movf	strcspn@i+1,w
  2764  0F29  00A4               	movwf	?_strcspn+1
  2765  0F2A  0827               	movf	strcspn@i,w
  2766  0F2B  00A3               	movwf	?_strcspn
  2767  0F2C  0008               	return
  2768  0F2D                     __end_of_strcspn:	
  2769                           
  2770                           	psect	text7
  2771  0E24                     __ptext7:	
  2772 ;; *************** function _strchr *****************
  2773 ;; Defined at:
  2774 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strchr.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  ptr             2    3[COMMON] PTR const unsigned char 
  2777 ;;		 -> main@tokens(3), 
  2778 ;;  chr             2    5[COMMON] int 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  2    3[COMMON] PTR unsigned char 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2792 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2793 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;Total ram usage:        7 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_strcspn
  2801 ;;		_strspn
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _strchr
  2807  0E24                     _strchr:	
  2808  0E24                     l828:	
  2809                           ;incstack = 0
  2810                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  2811                           
  2812  0E24  0873               	movf	strchr@ptr,w
  2813  0E25  0084               	movwf	4
  2814  0E26  0874               	movf	strchr@ptr+1,w
  2815  0E27  0085               	movwf	5
  2816  0E28  0800               	movf	0,w	;code access
  2817  0E29  0675               	xorwf	strchr@chr,w
  2818  0E2A  1903               	btfsc	3,2
  2819  0E2B  0008               	return
  2820  0E2C  0874               	movf	strchr@ptr+1,w
  2821  0E2D  0020               	movlb	0	; select bank0
  2822  0E2E  00A1               	movwf	??_strchr+1
  2823  0E2F  0873               	movf	strchr@ptr,w
  2824  0E30  00A0               	movwf	??_strchr
  2825  0E31  0AF3               	incf	strchr@ptr,f
  2826  0E32  1903               	skipnz
  2827  0E33  0AF4               	incf	strchr@ptr+1,f
  2828  0E34  0820               	movf	??_strchr,w
  2829  0E35  0084               	movwf	4
  2830  0E36  0821               	movf	??_strchr+1,w
  2831  0E37  0085               	movwf	5
  2832  0E38  0012               	moviw fsr0++
  2833  0E39  1D03               	btfss	3,2
  2834  0E3A  2E24               	goto	l828
  2835  0E3B  01F3               	clrf	?_strchr
  2836  0E3C  01F4               	clrf	?_strchr+1
  2837  0E3D  0008               	return
  2838  0E3E                     __end_of_strchr:	
  2839                           
  2840                           	psect	text8
  2841  0EB2                     __ptext8:	
  2842 ;; *************** function _strlen *****************
  2843 ;; Defined at:
  2844 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  s               1    wreg     PTR const unsigned char 
  2847 ;;		 -> main@line(32), NULL(0), 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  s               1    5[COMMON] PTR const unsigned char 
  2850 ;;		 -> main@line(32), NULL(0), 
  2851 ;;  cp              1    6[COMMON] PTR const unsigned char 
  2852 ;;		 -> main@line(32), NULL(0), 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2    3[COMMON] unsigned int 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;Total ram usage:        8 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    2
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           
  2877                           ;psect for function _strlen
  2878  0EB2                     _strlen:	
  2879                           
  2880                           ;incstack = 0
  2881                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2882                           ;strlen@s stored from wreg
  2883  0EB2  00F5               	movwf	strlen@s
  2884  0EB3  0875               	movf	strlen@s,w
  2885  0EB4  0020               	movlb	0	; select bank0
  2886  0EB5  00A0               	movwf	??_strlen
  2887  0EB6  0820               	movf	??_strlen,w
  2888  0EB7  00F6               	movwf	strlen@cp
  2889  0EB8                     l3015:	
  2890  0EB8  0876               	movf	strlen@cp,w
  2891  0EB9  0086               	movwf	6
  2892  0EBA  0187               	clrf	7
  2893  0EBB  0801               	movf	1,w
  2894  0EBC  1903               	btfsc	3,2
  2895  0EBD  2EC3               	goto	l3017
  2896  0EBE  3001               	movlw	1
  2897  0EBF  00A0               	movwf	??_strlen
  2898  0EC0  0820               	movf	??_strlen,w
  2899  0EC1  07F6               	addwf	strlen@cp,f
  2900  0EC2  2EB8               	goto	l3015
  2901  0EC3                     l3017:	
  2902  0EC3  0875               	movf	strlen@s,w
  2903  0EC4  00A0               	movwf	??_strlen
  2904  0EC5  3000               	movlw	0
  2905  0EC6  00A1               	movwf	??_strlen+1
  2906  0EC7  09A0               	comf	??_strlen,f
  2907  0EC8  09A1               	comf	??_strlen+1,f
  2908  0EC9  0AA0               	incf	??_strlen,f
  2909  0ECA  1903               	skipnz
  2910  0ECB  0AA1               	incf	??_strlen+1,f
  2911  0ECC  0876               	movf	strlen@cp,w
  2912  0ECD  00A2               	movwf	??_strlen+2
  2913  0ECE  3000               	movlw	0
  2914  0ECF  00A3               	movwf	??_strlen+3
  2915  0ED0  0820               	movf	??_strlen,w
  2916  0ED1  0722               	addwf	??_strlen+2,w
  2917  0ED2  00F3               	movwf	?_strlen
  2918  0ED3  0821               	movf	??_strlen+1,w
  2919  0ED4  3D23               	addwfc	??_strlen+3,w
  2920  0ED5  00F4               	movwf	?_strlen+1
  2921  0ED6  0008               	return
  2922  0ED7                     __end_of_strlen:	
  2923                           
  2924                           	psect	text9
  2925  0ED7                     __ptext9:	
  2926 ;; *************** function _strcmp *****************
  2927 ;; Defined at:
  2928 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  s1              1    wreg     PTR const unsigned char 
  2931 ;;		 -> main@line(32), NULL(0), 
  2932 ;;  s2              2    3[COMMON] PTR const unsigned char 
  2933 ;;		 -> STR_6(5), STR_4(5), STR_2(6), STR_1(4), 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  s1              1    7[COMMON] PTR const unsigned char 
  2936 ;;		 -> main@line(32), NULL(0), 
  2937 ;;  r               1    6[COMMON] char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2    3[COMMON] int 
  2940 ;; Registers used:
  2941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;Total ram usage:        5 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    2
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function _strcmp
  2963  0ED7                     _strcmp:	
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  2967                           ;strcmp@s1 stored from wreg
  2968  0ED7  00F7               	movwf	strcmp@s1
  2969  0ED8  2EE1               	goto	l2283
  2970  0ED9                     l2281:	
  2971  0ED9  3001               	movlw	1
  2972  0EDA  00F5               	movwf	??_strcmp
  2973  0EDB  0875               	movf	??_strcmp,w
  2974  0EDC  07F7               	addwf	strcmp@s1,f
  2975  0EDD  3001               	movlw	1
  2976  0EDE  07F3               	addwf	strcmp@s2,f
  2977  0EDF  3000               	movlw	0
  2978  0EE0  3DF4               	addwfc	strcmp@s2+1,f
  2979  0EE1                     l2283:	
  2980  0EE1  0877               	movf	strcmp@s1,w
  2981  0EE2  0086               	movwf	6
  2982  0EE3  0187               	clrf	7
  2983  0EE4  0873               	movf	strcmp@s2,w
  2984  0EE5  0084               	movwf	4
  2985  0EE6  0874               	movf	strcmp@s2+1,w
  2986  0EE7  0085               	movwf	5
  2987  0EE8  0800               	movf	0,w	;code access
  2988  0EE9  3AFF               	xorlw	255
  2989  0EEA  3E01               	addlw	1
  2990  0EEB  0701               	addwf	1,w
  2991  0EEC  00F5               	movwf	??_strcmp
  2992  0EED  0875               	movf	??_strcmp,w
  2993  0EEE  00F6               	movwf	strcmp@r
  2994  0EEF  0876               	movf	strcmp@r,w
  2995  0EF0  1D03               	btfss	3,2
  2996  0EF1  2EF8               	goto	l2287
  2997  0EF2  0877               	movf	strcmp@s1,w
  2998  0EF3  0086               	movwf	6
  2999  0EF4  0187               	clrf	7
  3000  0EF5  0801               	movf	1,w
  3001  0EF6  1D03               	btfss	3,2
  3002  0EF7  2ED9               	goto	l2281
  3003  0EF8                     l2287:	
  3004  0EF8  0876               	movf	strcmp@r,w
  3005  0EF9  00F3               	movwf	?_strcmp
  3006  0EFA  01F4               	clrf	?_strcmp+1
  3007  0EFB  1BF3               	btfsc	?_strcmp,7
  3008  0EFC  03F4               	decf	?_strcmp+1,f
  3009  0EFD  0008               	return
  3010  0EFE                     __end_of_strcmp:	
  3011                           
  3012                           	psect	text10
  3013  0E0B                     __ptext10:	
  3014 ;; *************** function _setup *****************
  3015 ;; Defined at:
  3016 ;;		line 7 in file "settings.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  2   45[None  ] int 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3034 ;;Total ram usage:        0 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    4
  3037 ;; This function calls:
  3038 ;;		_uart_setup
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function _setup
  3046  0E0B                     _setup:	
  3047                           
  3048                           ;settings.c: 8: uart_setup();
  3049                           
  3050                           ;incstack = 0
  3051                           ; Regs used in _setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3052  0E0B  318E  263E         	fcall	_uart_setup
  3053                           
  3054                           ;settings.c: 9: TRISA = 0x00;
  3055  0E0D  0021               	movlb	1	; select bank1
  3056  0E0E  018C               	clrf	12	;volatile
  3057                           
  3058                           ;settings.c: 10: TRISB = 0b00001111;
  3059  0E0F  300F               	movlw	15
  3060  0E10  008D               	movwf	13	;volatile
  3061                           
  3062                           ;settings.c: 11: TRISC = 0b10000000;
  3063  0E11  3080               	movlw	128
  3064  0E12  008E               	movwf	14	;volatile
  3065                           
  3066                           ;settings.c: 12: OSCCON = 0b01110000;
  3067  0E13  3070               	movlw	112
  3068  0E14  0099               	movwf	25	;volatile
  3069                           
  3070                           ;settings.c: 13: ANSELA = 0x00;
  3071  0E15  0023               	movlb	3	; select bank3
  3072  0E16  018C               	clrf	12	;volatile
  3073                           
  3074                           ;settings.c: 14: ANSELB = 0x00;
  3075  0E17  018D               	clrf	13	;volatile
  3076                           
  3077                           ;settings.c: 16: T0CS=0;
  3078  0E18  0021               	movlb	1	; select bank1
  3079  0E19  1295               	bcf	21,5	;volatile
  3080                           
  3081                           ;settings.c: 17: PSA=0;
  3082  0E1A  1195               	bcf	21,3	;volatile
  3083                           
  3084                           ;settings.c: 18: PS0=1;
  3085  0E1B  1415               	bsf	21,0	;volatile
  3086                           
  3087                           ;settings.c: 19: PS1=1;
  3088  0E1C  1495               	bsf	21,1	;volatile
  3089                           
  3090                           ;settings.c: 20: PS2=1;
  3091  0E1D  1515               	bsf	21,2	;volatile
  3092                           
  3093                           ;settings.c: 21: TMR0=0;
  3094  0E1E  0020               	movlb	0	; select bank0
  3095  0E1F  0195               	clrf	21	;volatile
  3096                           
  3097                           ;settings.c: 22: T0IE=1;
  3098  0E20  168B               	bsf	11,5	;volatile
  3099                           
  3100                           ;settings.c: 23: T0IF=0;
  3101  0E21  110B               	bcf	11,2	;volatile
  3102                           
  3103                           ;settings.c: 24: GIE=1;
  3104  0E22  178B               	bsf	11,7	;volatile
  3105  0E23  0008               	return
  3106  0E24                     __end_of_setup:	
  3107                           
  3108                           	psect	text11
  3109  0E3E                     __ptext11:	
  3110 ;; *************** function _uart_setup *****************
  3111 ;; Defined at:
  3112 ;;		line 14 in file "uart.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  2   13[None  ] int 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    3
  3133 ;; This function calls:
  3134 ;;		_memset
  3135 ;; This function is called by:
  3136 ;;		_setup
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           
  3141                           ;psect for function _uart_setup
  3142  0E3E                     _uart_setup:	
  3143                           
  3144                           ;uart.c: 16: memset(rxbuf,0,sizeof(rxbuf));
  3145                           
  3146                           ;incstack = 0
  3147                           ; Regs used in _uart_setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3148  0E3E  3000               	movlw	0
  3149  0E3F  00F3               	movwf	memset@c
  3150  0E40  00F4               	movwf	memset@c+1
  3151  0E41  3020               	movlw	32
  3152  0E42  00F5               	movwf	memset@n
  3153  0E43  3000               	movlw	0
  3154  0E44  00F6               	movwf	memset@n+1
  3155  0E45  30C0               	movlw	(low (_rxbuf| (0+256)))& (0+255)
  3156  0E46  318E  2659         	fcall	_memset
  3157                           
  3158                           ;uart.c: 17: rx_in = 0;
  3159  0E48  01F8               	clrf	_rx_in
  3160                           
  3161                           ;uart.c: 18: rx_out = 0;
  3162  0E49  01F9               	clrf	_rx_out
  3163                           
  3164                           ;uart.c: 19: rx_used = 0;
  3165  0E4A  0020               	movlb	0	; select bank0
  3166  0E4B  01E8               	clrf	_rx_used
  3167                           
  3168                           ;uart.c: 21: SPBRG = 16;
  3169  0E4C  3010               	movlw	16
  3170  0E4D  0023               	movlb	3	; select bank3
  3171  0E4E  009B               	movwf	27	;volatile
  3172                           
  3173                           ;uart.c: 22: RCSTA = 0b10010000;
  3174  0E4F  3090               	movlw	144
  3175  0E50  009D               	movwf	29	;volatile
  3176                           
  3177                           ;uart.c: 23: TXSTA = 0b00100000;
  3178  0E51  3020               	movlw	32
  3179  0E52  009E               	movwf	30	;volatile
  3180                           
  3181                           ;uart.c: 25: RCIF = 0;
  3182  0E53  0020               	movlb	0	; select bank0
  3183  0E54  1291               	bcf	17,5	;volatile
  3184                           
  3185                           ;uart.c: 26: RCIE = 1;
  3186  0E55  0021               	movlb	1	; select bank1
  3187  0E56  1691               	bsf	17,5	;volatile
  3188                           
  3189                           ;uart.c: 27: PEIE = 1;
  3190  0E57  170B               	bsf	11,6	;volatile
  3191  0E58  0008               	return
  3192  0E59                     __end_of_uart_setup:	
  3193                           
  3194                           	psect	text12
  3195  0E59                     __ptext12:	
  3196 ;; *************** function _memset *****************
  3197 ;; Defined at:
  3198 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  p1              1    wreg     PTR void 
  3201 ;;		 -> rxbuf(32), 
  3202 ;;  c               2    3[COMMON] int 
  3203 ;;  n               2    5[COMMON] unsigned int 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  p1              1    0[BANK0 ] PTR void 
  3206 ;;		 -> rxbuf(32), 
  3207 ;;  p               1    1[BANK0 ] PTR unsigned char 
  3208 ;;		 -> rxbuf(32), 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      PTR void 
  3211 ;; Registers used:
  3212 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;Total ram usage:        7 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    2
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_uart_setup
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           
  3233                           ;psect for function _memset
  3234  0E59                     _memset:	
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3238                           ;memset@p1 stored from wreg
  3239  0E59  0020               	movlb	0	; select bank0
  3240  0E5A  00A0               	movwf	memset@p1
  3241  0E5B  0820               	movf	memset@p1,w
  3242  0E5C  00F7               	movwf	??_memset
  3243  0E5D  0877               	movf	??_memset,w
  3244  0E5E  00A1               	movwf	memset@p
  3245  0E5F                     l2711:	
  3246  0E5F  3001               	movlw	1
  3247  0E60  02F5               	subwf	memset@n,f
  3248  0E61  3000               	movlw	0
  3249  0E62  3BF6               	subwfb	memset@n+1,f
  3250  0E63  0A75               	incf	memset@n,w
  3251  0E64  1903               	btfsc	3,2
  3252  0E65  0A76               	incf	memset@n+1,w
  3253  0E66  1903               	btfsc	3,2
  3254  0E67  0008               	return
  3255  0E68  0873               	movf	memset@c,w
  3256  0E69  00F7               	movwf	??_memset
  3257  0E6A  0821               	movf	memset@p,w
  3258  0E6B  0086               	movwf	6
  3259  0E6C  3001               	movlw	1	; select bank2/3
  3260  0E6D  0087               	movwf	7
  3261  0E6E  0877               	movf	??_memset,w
  3262  0E6F  0081               	movwf	1
  3263  0E70  3001               	movlw	1
  3264  0E71  00F7               	movwf	??_memset
  3265  0E72  0877               	movf	??_memset,w
  3266  0E73  07A1               	addwf	memset@p,f
  3267  0E74  2E5F               	goto	l2711
  3268  0E75                     __end_of_memset:	
  3269                           ;	Return value of _memset is never used
  3270                           
  3271                           
  3272                           	psect	text13
  3273  029E                     __ptext13:	
  3274 ;; *************** function _right *****************
  3275 ;; Defined at:
  3276 ;;		line 25 in file "rotation.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  mal             2   63[BANK0 ] int 
  3279 ;;  speed           2   65[BANK0 ] int 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  i               2    4[BANK1 ] int 
  3282 ;;  k               2    2[BANK1 ] int 
  3283 ;;  pluse           2    0[BANK1 ] unsigned int 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;		None               void
  3286 ;; Registers used:
  3287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3294 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3295 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Totals:         0       7       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;Total ram usage:       13 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    6
  3300 ;; This function calls:
  3301 ;;		_step
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _right
  3309  029E                     _right:	
  3310                           
  3311                           ;rotation.c: 26: int k = 0;
  3312                           
  3313                           ;incstack = 0
  3314                           ; Regs used in _right: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3315  029E  0021               	movlb	1	; select bank1
  3316  029F  01A2               	clrf	right@k^(0+128)
  3317  02A0  01A3               	clrf	(right@k+1)^(0+128)
  3318                           
  3319                           ;rotation.c: 27: uint16_t pluse = step(mal);
  3320  02A1  0020               	movlb	0	; select bank0
  3321  02A2  0860               	movf	right@mal+1,w
  3322  02A3  00D9               	movwf	step@deg+1
  3323  02A4  085F               	movf	right@mal,w
  3324  02A5  00D8               	movwf	step@deg
  3325  02A6  3187  2719  3182   	fcall	_step
  3326  02A9  0020               	movlb	0	; select bank0
  3327  02AA  0859               	movf	?_step+1,w
  3328  02AB  0021               	movlb	1	; select bank1
  3329  02AC  00A1               	movwf	(right@pluse+1)^(0+128)
  3330  02AD  0020               	movlb	0	; select bank0
  3331  02AE  0858               	movf	?_step,w
  3332  02AF  0021               	movlb	1	; select bank1
  3333  02B0  00A0               	movwf	right@pluse^(0+128)
  3334  02B1                     l2987:	
  3335                           ;rotation.c: 28: while(k < pluse-20){
  3336                           
  3337  02B1  0021               	movlb	1	; select bank1
  3338  02B2  0820               	movf	right@pluse^(0+128),w
  3339  02B3  3EEC               	addlw	236
  3340  02B4  0020               	movlb	0	; select bank0
  3341  02B5  00E3               	movwf	??_right
  3342  02B6  30FF               	movlw	255
  3343  02B7  0021               	movlb	1	; select bank1
  3344  02B8  3D21               	addwfc	(right@pluse+1)^(0+128),w
  3345  02B9  0020               	movlb	0	; select bank0
  3346  02BA  00E4               	movwf	??_right+1
  3347  02BB  0864               	movf	??_right+1,w
  3348  02BC  0021               	movlb	1	; select bank1
  3349  02BD  0223               	subwf	(right@k+1)^(0+128),w
  3350  02BE  1D03               	skipz
  3351  02BF  2AC4               	goto	u4135
  3352  02C0  0020               	movlb	0	; select bank0
  3353  02C1  0863               	movf	??_right,w
  3354  02C2  0021               	movlb	1	; select bank1
  3355  02C3  0222               	subwf	right@k^(0+128),w
  3356  02C4                     u4135:	
  3357  02C4  1803               	btfsc	3,0
  3358  02C5  0008               	return
  3359                           
  3360                           ;rotation.c: 29: for(int i = 0;i < 4;i++){
  3361  02C6  01A4               	clrf	right@i^(0+128)
  3362  02C7  01A5               	clrf	(right@i+1)^(0+128)
  3363  02C8                     L5:	
  3364  02C8  0825               	movf	(right@i+1)^(0+128),w
  3365  02C9  3A80               	xorlw	128
  3366  02CA  0020               	movlb	0	; select bank0
  3367  02CB  00E3               	movwf	??_right
  3368  02CC  3080               	movlw	128
  3369  02CD  0263               	subwf	??_right,w
  3370  02CE  1D03               	skipz
  3371  02CF  2AD3               	goto	u3995
  3372  02D0  3004               	movlw	4
  3373  02D1  0021               	movlb	1	; select bank1
  3374  02D2  0224               	subwf	right@i^(0+128),w
  3375  02D3                     u3995:	
  3376  02D3  1803               	btfsc	3,0
  3377  02D4  2AB1               	goto	l2987
  3378                           
  3379                           ;rotation.c: 30: RA0 = step_pattern_right[i][0];
  3380  02D5  0021               	movlb	1	; select bank1
  3381  02D6  0824               	movf	right@i^(0+128),w
  3382  02D7  0020               	movlb	0	; select bank0
  3383  02D8  00E3               	movwf	??_right
  3384  02D9  3002               	movlw	2
  3385  02DA                     u4005:	
  3386  02DA  35E3               	lslf	??_right,f
  3387  02DB  3EFF               	addlw	-1
  3388  02DC  1D03               	skipz
  3389  02DD  2ADA               	goto	u4005
  3390  02DE  3563               	lslf	??_right,w
  3391  02DF  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3392  02E0  0086               	movwf	6
  3393  02E1  3001               	movlw	1	; select bank2/3
  3394  02E2  0087               	movwf	7
  3395  02E3  3F40               	moviw [0]fsr1
  3396  02E4  00E4               	movwf	??_right+1
  3397  02E5  3F41               	moviw [1]fsr1
  3398  02E6  00E5               	movwf	??_right+2
  3399  02E7  1C64               	btfss	??_right+1,0
  3400  02E8  2AEC               	goto	u4010
  3401  02E9  0020               	movlb	0	; select bank0
  3402  02EA  140C               	bsf	12,0	;volatile
  3403  02EB  2AEE               	goto	u4024
  3404  02EC                     u4010:	
  3405  02EC  0020               	movlb	0	; select bank0
  3406  02ED  100C               	bcf	12,0	;volatile
  3407  02EE                     u4024:	
  3408                           
  3409                           ;rotation.c: 31: RA4 = step_pattern_right[i][1];
  3410  02EE  0021               	movlb	1	; select bank1
  3411  02EF  0824               	movf	right@i^(0+128),w
  3412  02F0  0020               	movlb	0	; select bank0
  3413  02F1  00E3               	movwf	??_right
  3414  02F2  3002               	movlw	2
  3415  02F3                     u4035:	
  3416  02F3  35E3               	lslf	??_right,f
  3417  02F4  3EFF               	addlw	-1
  3418  02F5  1D03               	skipz
  3419  02F6  2AF3               	goto	u4035
  3420  02F7  3563               	lslf	??_right,w
  3421  02F8  3E02               	addlw	2
  3422  02F9  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3423  02FA  0086               	movwf	6
  3424  02FB  3001               	movlw	1	; select bank2/3
  3425  02FC  0087               	movwf	7
  3426  02FD  3F40               	moviw [0]fsr1
  3427  02FE  00E4               	movwf	??_right+1
  3428  02FF  3F41               	moviw [1]fsr1
  3429  0300  00E5               	movwf	??_right+2
  3430  0301  1C64               	btfss	??_right+1,0
  3431  0302  2B06               	goto	u4040
  3432  0303  0020               	movlb	0	; select bank0
  3433  0304  160C               	bsf	12,4	;volatile
  3434  0305  2B08               	goto	u4054
  3435  0306                     u4040:	
  3436  0306  0020               	movlb	0	; select bank0
  3437  0307  120C               	bcf	12,4	;volatile
  3438  0308                     u4054:	
  3439                           
  3440                           ;rotation.c: 32: RC1 = step_pattern_right[i][2];
  3441  0308  0021               	movlb	1	; select bank1
  3442  0309  0824               	movf	right@i^(0+128),w
  3443  030A  0020               	movlb	0	; select bank0
  3444  030B  00E3               	movwf	??_right
  3445  030C  3002               	movlw	2
  3446  030D                     u4065:	
  3447  030D  35E3               	lslf	??_right,f
  3448  030E  3EFF               	addlw	-1
  3449  030F  1D03               	skipz
  3450  0310  2B0D               	goto	u4065
  3451  0311  3563               	lslf	??_right,w
  3452  0312  3E04               	addlw	4
  3453  0313  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3454  0314  0086               	movwf	6
  3455  0315  3001               	movlw	1	; select bank2/3
  3456  0316  0087               	movwf	7
  3457  0317  3F40               	moviw [0]fsr1
  3458  0318  00E4               	movwf	??_right+1
  3459  0319  3F41               	moviw [1]fsr1
  3460  031A  00E5               	movwf	??_right+2
  3461  031B  1C64               	btfss	??_right+1,0
  3462  031C  2B20               	goto	u4070
  3463  031D  0020               	movlb	0	; select bank0
  3464  031E  148E               	bsf	14,1	;volatile
  3465  031F  2B22               	goto	u4084
  3466  0320                     u4070:	
  3467  0320  0020               	movlb	0	; select bank0
  3468  0321  108E               	bcf	14,1	;volatile
  3469  0322                     u4084:	
  3470                           
  3471                           ;rotation.c: 33: RC2 = step_pattern_right[i][3];
  3472  0322  0021               	movlb	1	; select bank1
  3473  0323  0824               	movf	right@i^(0+128),w
  3474  0324  0020               	movlb	0	; select bank0
  3475  0325  00E3               	movwf	??_right
  3476  0326  3002               	movlw	2
  3477  0327                     u4095:	
  3478  0327  35E3               	lslf	??_right,f
  3479  0328  3EFF               	addlw	-1
  3480  0329  1D03               	skipz
  3481  032A  2B27               	goto	u4095
  3482  032B  3563               	lslf	??_right,w
  3483  032C  3E06               	addlw	6
  3484  032D  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3485  032E  0086               	movwf	6
  3486  032F  3001               	movlw	1	; select bank2/3
  3487  0330  0087               	movwf	7
  3488  0331  3F40               	moviw [0]fsr1
  3489  0332  00E4               	movwf	??_right+1
  3490  0333  3F41               	moviw [1]fsr1
  3491  0334  00E5               	movwf	??_right+2
  3492  0335  1C64               	btfss	??_right+1,0
  3493  0336  2B3A               	goto	u4100
  3494  0337  0020               	movlb	0	; select bank0
  3495  0338  150E               	bsf	14,2	;volatile
  3496  0339  2B3C               	goto	l2979
  3497  033A                     u4100:	
  3498  033A  0020               	movlb	0	; select bank0
  3499  033B  110E               	bcf	14,2	;volatile
  3500  033C                     l2979:	
  3501                           
  3502                           ;rotation.c: 34: _delay((unsigned long)((3000)*(8000000/4000000.0)));
  3503  033C  3008               	movlw	8
  3504  033D  00E4               	movwf	??_right+1
  3505  033E  30C9               	movlw	201
  3506  033F  00E3               	movwf	??_right
  3507  0340                     u4537:	
  3508  0340  0BE3               	decfsz	??_right,f
  3509  0341  2B40               	goto	u4537
  3510  0342  0BE4               	decfsz	??_right+1,f
  3511  0343  2B40               	goto	u4537
  3512  0344  3200               	nop2
  3513                           
  3514                           ;rotation.c: 35: k++;
  3515  0345  3001               	movlw	1
  3516  0346  0021               	movlb	1	; select bank1
  3517  0347  07A2               	addwf	right@k^(0+128),f
  3518  0348  3000               	movlw	0
  3519  0349  3DA3               	addwfc	(right@k+1)^(0+128),f
  3520  034A  3001               	movlw	1
  3521  034B  07A4               	addwf	right@i^(0+128),f
  3522  034C  3000               	movlw	0
  3523  034D  3DA5               	addwfc	(right@i+1)^(0+128),f
  3524  034E  2AC8               	goto	L5
  3525  034F                     __end_of_right:	
  3526                           
  3527                           	psect	text14
  3528  034F                     __ptext14:	
  3529 ;; *************** function _left *****************
  3530 ;; Defined at:
  3531 ;;		line 40 in file "rotation.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  mal             2   63[BANK0 ] int 
  3534 ;;  speed           2   65[BANK0 ] int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  i               2    4[BANK1 ] int 
  3537 ;;  k               2    2[BANK1 ] int 
  3538 ;;  pluse           2    0[BANK1 ] unsigned int 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;		None               void
  3541 ;; Registers used:
  3542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3551 ;;      Totals:         0       7       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3552 ;;Total ram usage:       13 bytes
  3553 ;; Hardware stack levels used:    1
  3554 ;; Hardware stack levels required when called:    6
  3555 ;; This function calls:
  3556 ;;		_step
  3557 ;; This function is called by:
  3558 ;;		_main
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           
  3563                           ;psect for function _left
  3564  034F                     _left:	
  3565                           
  3566                           ;rotation.c: 41: int i;
  3567                           ;rotation.c: 42: int k = 0;
  3568                           
  3569                           ;incstack = 0
  3570                           ; Regs used in _left: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3571  034F  0021               	movlb	1	; select bank1
  3572  0350  01A2               	clrf	left@k^(0+128)
  3573  0351  01A3               	clrf	(left@k+1)^(0+128)
  3574                           
  3575                           ;rotation.c: 43: uint16_t pluse = step(mal);
  3576  0352  0020               	movlb	0	; select bank0
  3577  0353  0860               	movf	left@mal+1,w
  3578  0354  00D9               	movwf	step@deg+1
  3579  0355  085F               	movf	left@mal,w
  3580  0356  00D8               	movwf	step@deg
  3581  0357  3187  2719  3183   	fcall	_step
  3582  035A  0020               	movlb	0	; select bank0
  3583  035B  0859               	movf	?_step+1,w
  3584  035C  0021               	movlb	1	; select bank1
  3585  035D  00A1               	movwf	(left@pluse+1)^(0+128)
  3586  035E  0020               	movlb	0	; select bank0
  3587  035F  0858               	movf	?_step,w
  3588  0360  0021               	movlb	1	; select bank1
  3589  0361  00A0               	movwf	left@pluse^(0+128)
  3590  0362                     l3009:	
  3591                           ;rotation.c: 44: while(k < pluse-20){
  3592                           
  3593  0362  0021               	movlb	1	; select bank1
  3594  0363  0820               	movf	left@pluse^(0+128),w
  3595  0364  3EEC               	addlw	236
  3596  0365  0020               	movlb	0	; select bank0
  3597  0366  00E3               	movwf	??_left
  3598  0367  30FF               	movlw	255
  3599  0368  0021               	movlb	1	; select bank1
  3600  0369  3D21               	addwfc	(left@pluse+1)^(0+128),w
  3601  036A  0020               	movlb	0	; select bank0
  3602  036B  00E4               	movwf	??_left+1
  3603  036C  0864               	movf	??_left+1,w
  3604  036D  0021               	movlb	1	; select bank1
  3605  036E  0223               	subwf	(left@k+1)^(0+128),w
  3606  036F  1D03               	skipz
  3607  0370  2B75               	goto	u4285
  3608  0371  0020               	movlb	0	; select bank0
  3609  0372  0863               	movf	??_left,w
  3610  0373  0021               	movlb	1	; select bank1
  3611  0374  0222               	subwf	left@k^(0+128),w
  3612  0375                     u4285:	
  3613  0375  1803               	btfsc	3,0
  3614  0376  0008               	return
  3615                           
  3616                           ;rotation.c: 45: for(i = 0;i < 4;i++){
  3617  0377  01A4               	clrf	left@i^(0+128)
  3618  0378  01A5               	clrf	(left@i+1)^(0+128)
  3619  0379                     L6:	
  3620  0379  0825               	movf	(left@i+1)^(0+128),w
  3621  037A  3A80               	xorlw	128
  3622  037B  0020               	movlb	0	; select bank0
  3623  037C  00E3               	movwf	??_left
  3624  037D  3080               	movlw	128
  3625  037E  0263               	subwf	??_left,w
  3626  037F  1D03               	skipz
  3627  0380  2B84               	goto	u4145
  3628  0381  3004               	movlw	4
  3629  0382  0021               	movlb	1	; select bank1
  3630  0383  0224               	subwf	left@i^(0+128),w
  3631  0384                     u4145:	
  3632  0384  1803               	btfsc	3,0
  3633  0385  2B62               	goto	l3009
  3634                           
  3635                           ;rotation.c: 46: RA0 = step_pattern_left[i][0];
  3636  0386  0021               	movlb	1	; select bank1
  3637  0387  0824               	movf	left@i^(0+128),w
  3638  0388  0020               	movlb	0	; select bank0
  3639  0389  00E3               	movwf	??_left
  3640  038A  3002               	movlw	2
  3641  038B                     u4155:	
  3642  038B  35E3               	lslf	??_left,f
  3643  038C  3EFF               	addlw	-1
  3644  038D  1D03               	skipz
  3645  038E  2B8B               	goto	u4155
  3646  038F  3563               	lslf	??_left,w
  3647  0390  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3648  0391  0086               	movwf	6
  3649  0392  3001               	movlw	1	; select bank2/3
  3650  0393  0087               	movwf	7
  3651  0394  3F40               	moviw [0]fsr1
  3652  0395  00E4               	movwf	??_left+1
  3653  0396  3F41               	moviw [1]fsr1
  3654  0397  00E5               	movwf	??_left+2
  3655  0398  1C64               	btfss	??_left+1,0
  3656  0399  2B9D               	goto	u4160
  3657  039A  0020               	movlb	0	; select bank0
  3658  039B  140C               	bsf	12,0	;volatile
  3659  039C  2B9F               	goto	u4174
  3660  039D                     u4160:	
  3661  039D  0020               	movlb	0	; select bank0
  3662  039E  100C               	bcf	12,0	;volatile
  3663  039F                     u4174:	
  3664                           
  3665                           ;rotation.c: 47: RA4 = step_pattern_left[i][1];
  3666  039F  0021               	movlb	1	; select bank1
  3667  03A0  0824               	movf	left@i^(0+128),w
  3668  03A1  0020               	movlb	0	; select bank0
  3669  03A2  00E3               	movwf	??_left
  3670  03A3  3002               	movlw	2
  3671  03A4                     u4185:	
  3672  03A4  35E3               	lslf	??_left,f
  3673  03A5  3EFF               	addlw	-1
  3674  03A6  1D03               	skipz
  3675  03A7  2BA4               	goto	u4185
  3676  03A8  3563               	lslf	??_left,w
  3677  03A9  3E02               	addlw	2
  3678  03AA  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3679  03AB  0086               	movwf	6
  3680  03AC  3001               	movlw	1	; select bank2/3
  3681  03AD  0087               	movwf	7
  3682  03AE  3F40               	moviw [0]fsr1
  3683  03AF  00E4               	movwf	??_left+1
  3684  03B0  3F41               	moviw [1]fsr1
  3685  03B1  00E5               	movwf	??_left+2
  3686  03B2  1C64               	btfss	??_left+1,0
  3687  03B3  2BB7               	goto	u4190
  3688  03B4  0020               	movlb	0	; select bank0
  3689  03B5  160C               	bsf	12,4	;volatile
  3690  03B6  2BB9               	goto	u4204
  3691  03B7                     u4190:	
  3692  03B7  0020               	movlb	0	; select bank0
  3693  03B8  120C               	bcf	12,4	;volatile
  3694  03B9                     u4204:	
  3695                           
  3696                           ;rotation.c: 48: RC1 = step_pattern_left[i][2];
  3697  03B9  0021               	movlb	1	; select bank1
  3698  03BA  0824               	movf	left@i^(0+128),w
  3699  03BB  0020               	movlb	0	; select bank0
  3700  03BC  00E3               	movwf	??_left
  3701  03BD  3002               	movlw	2
  3702  03BE                     u4215:	
  3703  03BE  35E3               	lslf	??_left,f
  3704  03BF  3EFF               	addlw	-1
  3705  03C0  1D03               	skipz
  3706  03C1  2BBE               	goto	u4215
  3707  03C2  3563               	lslf	??_left,w
  3708  03C3  3E04               	addlw	4
  3709  03C4  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3710  03C5  0086               	movwf	6
  3711  03C6  3001               	movlw	1	; select bank2/3
  3712  03C7  0087               	movwf	7
  3713  03C8  3F40               	moviw [0]fsr1
  3714  03C9  00E4               	movwf	??_left+1
  3715  03CA  3F41               	moviw [1]fsr1
  3716  03CB  00E5               	movwf	??_left+2
  3717  03CC  1C64               	btfss	??_left+1,0
  3718  03CD  2BD1               	goto	u4220
  3719  03CE  0020               	movlb	0	; select bank0
  3720  03CF  148E               	bsf	14,1	;volatile
  3721  03D0  2BD3               	goto	u4234
  3722  03D1                     u4220:	
  3723  03D1  0020               	movlb	0	; select bank0
  3724  03D2  108E               	bcf	14,1	;volatile
  3725  03D3                     u4234:	
  3726                           
  3727                           ;rotation.c: 49: RC2 = step_pattern_left[i][3];
  3728  03D3  0021               	movlb	1	; select bank1
  3729  03D4  0824               	movf	left@i^(0+128),w
  3730  03D5  0020               	movlb	0	; select bank0
  3731  03D6  00E3               	movwf	??_left
  3732  03D7  3002               	movlw	2
  3733  03D8                     u4245:	
  3734  03D8  35E3               	lslf	??_left,f
  3735  03D9  3EFF               	addlw	-1
  3736  03DA  1D03               	skipz
  3737  03DB  2BD8               	goto	u4245
  3738  03DC  3563               	lslf	??_left,w
  3739  03DD  3E06               	addlw	6
  3740  03DE  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3741  03DF  0086               	movwf	6
  3742  03E0  3001               	movlw	1	; select bank2/3
  3743  03E1  0087               	movwf	7
  3744  03E2  3F40               	moviw [0]fsr1
  3745  03E3  00E4               	movwf	??_left+1
  3746  03E4  3F41               	moviw [1]fsr1
  3747  03E5  00E5               	movwf	??_left+2
  3748  03E6  1C64               	btfss	??_left+1,0
  3749  03E7  2BEB               	goto	u4250
  3750  03E8  0020               	movlb	0	; select bank0
  3751  03E9  150E               	bsf	14,2	;volatile
  3752  03EA  2BED               	goto	l3001
  3753  03EB                     u4250:	
  3754  03EB  0020               	movlb	0	; select bank0
  3755  03EC  110E               	bcf	14,2	;volatile
  3756  03ED                     l3001:	
  3757                           
  3758                           ;rotation.c: 50: _delay((unsigned long)((3000)*(8000000/4000000.0)));
  3759  03ED  3008               	movlw	8
  3760  03EE  00E4               	movwf	??_left+1
  3761  03EF  30C9               	movlw	201
  3762  03F0  00E3               	movwf	??_left
  3763  03F1                     u4547:	
  3764  03F1  0BE3               	decfsz	??_left,f
  3765  03F2  2BF1               	goto	u4547
  3766  03F3  0BE4               	decfsz	??_left+1,f
  3767  03F4  2BF1               	goto	u4547
  3768  03F5  3200               	nop2
  3769                           
  3770                           ;rotation.c: 51: k++;
  3771  03F6  3001               	movlw	1
  3772  03F7  0021               	movlb	1	; select bank1
  3773  03F8  07A2               	addwf	left@k^(0+128),f
  3774  03F9  3000               	movlw	0
  3775  03FA  3DA3               	addwfc	(left@k+1)^(0+128),f
  3776  03FB  3001               	movlw	1
  3777  03FC  07A4               	addwf	left@i^(0+128),f
  3778  03FD  3000               	movlw	0
  3779  03FE  3DA5               	addwfc	(left@i+1)^(0+128),f
  3780  03FF  2B79               	goto	L6
  3781  0400                     __end_of_left:	
  3782                           
  3783                           	psect	text15
  3784  0719                     __ptext15:	
  3785 ;; *************** function _step *****************
  3786 ;; Defined at:
  3787 ;;		line 20 in file "rotation.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  deg             2   56[BANK0 ] int 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  a               2   61[BANK0 ] unsigned int 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  2   56[BANK0 ] int 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;Total ram usage:        7 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    5
  3808 ;; This function calls:
  3809 ;;		___awtoft
  3810 ;;		___ftdiv
  3811 ;;		___fttol
  3812 ;;		___wmul
  3813 ;;		_ceil
  3814 ;; This function is called by:
  3815 ;;		_right
  3816 ;;		_left
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _step
  3822  0719                     _step:	
  3823                           
  3824                           ;rotation.c: 21: uint16_t a=ceil(14*deg/1.8);
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in _step: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3828  0719  300E               	movlw	14
  3829  071A  00F5               	movwf	___wmul@multiplicand
  3830  071B  3000               	movlw	0
  3831  071C  00F6               	movwf	___wmul@multiplicand+1
  3832  071D  0020               	movlb	0	; select bank0
  3833  071E  0859               	movf	step@deg+1,w
  3834  071F  00F4               	movwf	___wmul@multiplier+1
  3835  0720  0858               	movf	step@deg,w
  3836  0721  00F3               	movwf	___wmul@multiplier
  3837  0722  318E  2675  3187   	fcall	___wmul
  3838  0725  0874               	movf	?___wmul+1,w
  3839  0726  0020               	movlb	0	; select bank0
  3840  0727  00A4               	movwf	___awtoft@c+1
  3841  0728  0873               	movf	?___wmul,w
  3842  0729  00A3               	movwf	___awtoft@c
  3843  072A  3187  27DD  3187   	fcall	___awtoft
  3844  072D  0020               	movlb	0	; select bank0
  3845  072E  0823               	movf	?___awtoft,w
  3846  072F  00AC               	movwf	___ftdiv@f1
  3847  0730  0824               	movf	?___awtoft+1,w
  3848  0731  00AD               	movwf	___ftdiv@f1+1
  3849  0732  0825               	movf	?___awtoft+2,w
  3850  0733  00AE               	movwf	___ftdiv@f1+2
  3851  0734  3066               	movlw	102
  3852  0735  00A9               	movwf	___ftdiv@f2
  3853  0736  30E6               	movlw	230
  3854  0737  00AA               	movwf	___ftdiv@f2+1
  3855  0738  303F               	movlw	63
  3856  0739  00AB               	movwf	___ftdiv@f2+2
  3857  073A  3184  2400  3187   	fcall	___ftdiv
  3858  073D  0020               	movlb	0	; select bank0
  3859  073E  0829               	movf	?___ftdiv,w
  3860  073F  00CF               	movwf	ceil@x
  3861  0740  082A               	movf	?___ftdiv+1,w
  3862  0741  00D0               	movwf	ceil@x+1
  3863  0742  082B               	movf	?___ftdiv+2,w
  3864  0743  00D1               	movwf	ceil@x+2
  3865  0744  3185  2530  3187   	fcall	_ceil
  3866  0747  0020               	movlb	0	; select bank0
  3867  0748  084F               	movf	?_ceil,w
  3868  0749  00DA               	movwf	_step$732
  3869  074A  0850               	movf	?_ceil+1,w
  3870  074B  00DB               	movwf	_step$732+1
  3871  074C  0851               	movf	?_ceil+2,w
  3872  074D  00DC               	movwf	_step$732+2
  3873                           
  3874                           ;rotation.c: 21: uint16_t a=ceil(14*deg/1.8);
  3875  074E  085A               	movf	_step$732,w
  3876  074F  00B9               	movwf	___fttol@f1
  3877  0750  085B               	movf	_step$732+1,w
  3878  0751  00BA               	movwf	___fttol@f1+1
  3879  0752  085C               	movf	_step$732+2,w
  3880  0753  00BB               	movwf	___fttol@f1+2
  3881  0754  3184  24A9         	fcall	___fttol
  3882  0756  0020               	movlb	0	; select bank0
  3883  0757  083A               	movf	?___fttol+1,w
  3884  0758  00DE               	movwf	step@a+1
  3885  0759  0839               	movf	?___fttol,w
  3886  075A  00DD               	movwf	step@a
  3887                           
  3888                           ;rotation.c: 22: return a;
  3889  075B  085E               	movf	step@a+1,w
  3890  075C  00D9               	movwf	?_step+1
  3891  075D  085D               	movf	step@a,w
  3892  075E  00D8               	movwf	?_step
  3893  075F  0008               	return
  3894  0760                     __end_of_step:	
  3895                           
  3896                           	psect	text16
  3897  0530                     __ptext16:	
  3898 ;; *************** function _ceil *****************
  3899 ;; Defined at:
  3900 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ceil.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  x               3   47[BANK0 ] int 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  i               3   51[BANK0 ] int 
  3905 ;;  expon           2   54[BANK0 ] int 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  3   47[BANK0 ] int 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3915 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3918 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3919 ;;Total ram usage:        9 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    4
  3922 ;; This function calls:
  3923 ;;		___altoft
  3924 ;;		___ftadd
  3925 ;;		___ftge
  3926 ;;		___fttol
  3927 ;;		_frexp
  3928 ;; This function is called by:
  3929 ;;		_step
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _ceil
  3935  0530                     _ceil:	
  3936                           
  3937                           ;incstack = 0
  3938                           ; Regs used in _ceil: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3939  0530  0020               	movlb	0	; select bank0
  3940  0531  084F               	movf	ceil@x,w
  3941  0532  00F3               	movwf	frexp@value
  3942  0533  0850               	movf	ceil@x+1,w
  3943  0534  00F4               	movwf	frexp@value+1
  3944  0535  0851               	movf	ceil@x+2,w
  3945  0536  00F5               	movwf	frexp@value+2
  3946  0537  3056               	movlw	(low (ceil@expon| 0))& (0+255)
  3947  0538  00D2               	movwf	??_ceil
  3948  0539  0852               	movf	??_ceil,w
  3949  053A  00F6               	movwf	frexp@eptr
  3950  053B  318F  278E  3185   	fcall	_frexp
  3951  053E  0020               	movlb	0	; select bank0
  3952  053F  1FD7               	btfss	ceil@expon+1,7
  3953  0540  2D62               	goto	l2729
  3954  0541  3000               	movlw	0
  3955  0542  00A0               	movwf	___ftge@ff1
  3956  0543  3000               	movlw	0
  3957  0544  00A1               	movwf	___ftge@ff1+1
  3958  0545  3000               	movlw	0
  3959  0546  00A2               	movwf	___ftge@ff1+2
  3960  0547  084F               	movf	ceil@x,w
  3961  0548  00A3               	movwf	___ftge@ff2
  3962  0549  0850               	movf	ceil@x+1,w
  3963  054A  00A4               	movwf	___ftge@ff2+1
  3964  054B  0851               	movf	ceil@x+2,w
  3965  054C  00A5               	movwf	___ftge@ff2+2
  3966  054D  318F  27C4  3185   	fcall	___ftge
  3967  0550  1C03               	btfss	3,0
  3968  0551  2D5A               	goto	l2725
  3969  0552  3000               	movlw	0
  3970  0553  0020               	movlb	0	; select bank0
  3971  0554  00CF               	movwf	?_ceil
  3972  0555  3000               	movlw	0
  3973  0556  00D0               	movwf	?_ceil+1
  3974  0557  3000               	movlw	0
  3975  0558  00D1               	movwf	?_ceil+2
  3976  0559  0008               	return
  3977  055A                     l2725:	
  3978  055A  3000               	movlw	0
  3979  055B  0020               	movlb	0	; select bank0
  3980  055C  00CF               	movwf	?_ceil
  3981  055D  3080               	movlw	128
  3982  055E  00D0               	movwf	?_ceil+1
  3983  055F  303F               	movlw	63
  3984  0560  00D1               	movwf	?_ceil+2
  3985  0561  0008               	return
  3986  0562                     l2729:	
  3987  0562  3000               	movlw	0
  3988  0563  0257               	subwf	ceil@expon+1,w
  3989  0564  3015               	movlw	21
  3990  0565  1903               	skipnz
  3991  0566  0256               	subwf	ceil@expon,w
  3992  0567  1803               	btfsc	3,0
  3993  0568  0008               	return
  3994  0569  084F               	movf	ceil@x,w
  3995  056A  00B9               	movwf	___fttol@f1
  3996  056B  0850               	movf	ceil@x+1,w
  3997  056C  00BA               	movwf	___fttol@f1+1
  3998  056D  0851               	movf	ceil@x+2,w
  3999  056E  00BB               	movwf	___fttol@f1+2
  4000  056F  3184  24A9  3185   	fcall	___fttol
  4001  0572  0020               	movlb	0	; select bank0
  4002  0573  083C               	movf	?___fttol+3,w
  4003  0574  00CA               	movwf	___altoft@c+3
  4004  0575  083B               	movf	?___fttol+2,w
  4005  0576  00C9               	movwf	___altoft@c+2
  4006  0577  083A               	movf	?___fttol+1,w
  4007  0578  00C8               	movwf	___altoft@c+1
  4008  0579  0839               	movf	?___fttol,w
  4009  057A  00C7               	movwf	___altoft@c
  4010  057B  3187  27A0  3185   	fcall	___altoft
  4011  057E  0020               	movlb	0	; select bank0
  4012  057F  0847               	movf	?___altoft,w
  4013  0580  00D3               	movwf	ceil@i
  4014  0581  0848               	movf	?___altoft+1,w
  4015  0582  00D4               	movwf	ceil@i+1
  4016  0583  0849               	movf	?___altoft+2,w
  4017  0584  00D5               	movwf	ceil@i+2
  4018  0585  0853               	movf	ceil@i,w
  4019  0586  00A0               	movwf	___ftge@ff1
  4020  0587  0854               	movf	ceil@i+1,w
  4021  0588  00A1               	movwf	___ftge@ff1+1
  4022  0589  0855               	movf	ceil@i+2,w
  4023  058A  00A2               	movwf	___ftge@ff1+2
  4024  058B  084F               	movf	ceil@x,w
  4025  058C  00A3               	movwf	___ftge@ff2
  4026  058D  0850               	movf	ceil@x+1,w
  4027  058E  00A4               	movwf	___ftge@ff2+1
  4028  058F  0851               	movf	ceil@x+2,w
  4029  0590  00A5               	movwf	___ftge@ff2+2
  4030  0591  318F  27C4  3185   	fcall	___ftge
  4031  0594  1803               	btfsc	3,0
  4032  0595  2DAD               	goto	l2739
  4033  0596  3000               	movlw	0
  4034  0597  0020               	movlb	0	; select bank0
  4035  0598  00A3               	movwf	___ftadd@f1
  4036  0599  3080               	movlw	128
  4037  059A  00A4               	movwf	___ftadd@f1+1
  4038  059B  303F               	movlw	63
  4039  059C  00A5               	movwf	___ftadd@f1+2
  4040  059D  0853               	movf	ceil@i,w
  4041  059E  00A6               	movwf	___ftadd@f2
  4042  059F  0854               	movf	ceil@i+1,w
  4043  05A0  00A7               	movwf	___ftadd@f2+1
  4044  05A1  0855               	movf	ceil@i+2,w
  4045  05A2  00A8               	movwf	___ftadd@f2+2
  4046  05A3  3181  21A8         	fcall	___ftadd
  4047  05A5  0020               	movlb	0	; select bank0
  4048  05A6  0823               	movf	?___ftadd,w
  4049  05A7  00CF               	movwf	?_ceil
  4050  05A8  0824               	movf	?___ftadd+1,w
  4051  05A9  00D0               	movwf	?_ceil+1
  4052  05AA  0825               	movf	?___ftadd+2,w
  4053  05AB  00D1               	movwf	?_ceil+2
  4054  05AC  0008               	return
  4055  05AD                     l2739:	
  4056  05AD  0020               	movlb	0	; select bank0
  4057  05AE  0853               	movf	ceil@i,w
  4058  05AF  00CF               	movwf	?_ceil
  4059  05B0  0854               	movf	ceil@i+1,w
  4060  05B1  00D0               	movwf	?_ceil+1
  4061  05B2  0855               	movf	ceil@i+2,w
  4062  05B3  00D1               	movwf	?_ceil+2
  4063  05B4  0008               	return
  4064  05B5                     __end_of_ceil:	
  4065                           
  4066                           	psect	text17
  4067  0F8E                     __ptext17:	
  4068 ;; *************** function _frexp *****************
  4069 ;; Defined at:
  4070 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  value           3    3[COMMON] int 
  4073 ;;  eptr            1    6[COMMON] PTR int 
  4074 ;;		 -> ceil@expon(2), 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  3    3[COMMON] PTR int 
  4079 ;; Registers used:
  4080 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4088 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4089 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4090 ;;Total ram usage:        6 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    2
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_ceil
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           
  4101                           ;psect for function _frexp
  4102  0F8E                     _frexp:	
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4106  0F8E  0875               	movf	frexp@value+2,w
  4107  0F8F  0474               	iorwf	frexp@value+1,w
  4108  0F90  0473               	iorwf	frexp@value,w
  4109  0F91  1D03               	skipz
  4110  0F92  2F9A               	goto	l2563
  4111  0F93  0876               	movf	frexp@eptr,w
  4112  0F94  0086               	movwf	6
  4113  0F95  0187               	clrf	7
  4114  0F96  3000               	movlw	0
  4115  0F97  3FC0               	movwi [0]fsr1
  4116  0F98  3FC1               	movwi [1]fsr1
  4117                           
  4118                           ;	Return value of _frexp is never used
  4119  0F99  0008               	return
  4120  0F9A                     l2563:	
  4121  0F9A  0875               	movf	frexp@value+2,w
  4122  0F9B  397F               	andlw	127
  4123  0F9C  0020               	movlb	0	; select bank0
  4124  0F9D  00A0               	movwf	??_frexp
  4125  0F9E  01A1               	clrf	??_frexp+1
  4126  0F9F  35A0               	lslf	??_frexp,f
  4127  0FA0  0DA1               	rlf	??_frexp+1,f
  4128  0FA1  0876               	movf	frexp@eptr,w
  4129  0FA2  0086               	movwf	6
  4130  0FA3  0187               	clrf	7
  4131  0FA4  0820               	movf	??_frexp,w
  4132  0FA5  3FC0               	movwi [0]fsr1
  4133  0FA6  0821               	movf	??_frexp+1,w
  4134  0FA7  3FC1               	movwi [1]fsr1
  4135  0FA8  0D74               	rlf	frexp@value+1,w
  4136  0FA9  0D74               	rlf	frexp@value+1,w
  4137  0FAA  3901               	andlw	1
  4138  0FAB  00A0               	movwf	??_frexp
  4139  0FAC  01A1               	clrf	??_frexp+1
  4140  0FAD  0876               	movf	frexp@eptr,w
  4141  0FAE  0086               	movwf	6
  4142  0FAF  0187               	clrf	7
  4143  0FB0  0820               	movf	??_frexp,w
  4144  0FB1  0481               	iorwf	1,f
  4145  0FB2  3141               	addfsr 1,1
  4146  0FB3  0821               	movf	??_frexp+1,w
  4147  0FB4  0481               	iorwf	1,f
  4148  0FB5  0876               	movf	frexp@eptr,w
  4149  0FB6  0086               	movwf	6
  4150  0FB7  0187               	clrf	7
  4151  0FB8  3082               	movlw	130
  4152  0FB9  0781               	addwf	1,f
  4153  0FBA  3141               	addfsr 1,1
  4154  0FBB  30FF               	movlw	255
  4155  0FBC  3D81               	addwfc	1,f
  4156  0FBD  317F               	addfsr 1,-1
  4157  0FBE  0875               	movf	frexp@value+2,w
  4158  0FBF  3980               	andlw	-128
  4159  0FC0  383F               	iorlw	63
  4160  0FC1  00F5               	movwf	frexp@value+2
  4161  0FC2  13F4               	bcf	frexp@value+1,7
  4162  0FC3  0008               	return
  4163  0FC4                     __end_of_frexp:	
  4164                           ;	Return value of _frexp is never used
  4165                           
  4166                           
  4167                           	psect	text18
  4168  04A9                     __ptext18:	
  4169 ;; *************** function ___fttol *****************
  4170 ;; Defined at:
  4171 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  f1              3   25[BANK0 ] float 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  lval            4   34[BANK0 ] unsigned long 
  4176 ;;  exp1            1   38[BANK0 ] unsigned char 
  4177 ;;  sign1           1   33[BANK0 ] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  4   25[BANK0 ] long 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4187 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;Total ram usage:       14 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    2
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_step
  4198 ;;		_ceil
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           
  4203                           ;psect for function ___fttol
  4204  04A9                     ___fttol:	
  4205                           
  4206                           ;incstack = 0
  4207                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4208  04A9  0020               	movlb	0	; select bank0
  4209  04AA  0839               	movf	___fttol@f1,w
  4210  04AB  00BD               	movwf	??___fttol
  4211  04AC  083A               	movf	___fttol@f1+1,w
  4212  04AD  00BE               	movwf	??___fttol+1
  4213  04AE  083B               	movf	___fttol@f1+2,w
  4214  04AF  00BF               	movwf	??___fttol+2
  4215  04B0  1003               	clrc
  4216  04B1  0D3E               	rlf	??___fttol+1,w
  4217  04B2  0D3F               	rlf	??___fttol+2,w
  4218  04B3  00C0               	movwf	??___fttol+3
  4219  04B4  0840               	movf	??___fttol+3,w
  4220  04B5  00C6               	movwf	___fttol@exp1
  4221  04B6  0846               	movf	___fttol@exp1,w
  4222  04B7  1D03               	btfss	3,2
  4223  04B8  2CC2               	goto	l2669
  4224  04B9  3000               	movlw	0
  4225  04BA  00BC               	movwf	?___fttol+3
  4226  04BB  3000               	movlw	0
  4227  04BC  00BB               	movwf	?___fttol+2
  4228  04BD  3000               	movlw	0
  4229  04BE  00BA               	movwf	?___fttol+1
  4230  04BF  3000               	movlw	0
  4231  04C0  00B9               	movwf	?___fttol
  4232  04C1  0008               	return
  4233  04C2                     l2669:	
  4234  04C2  0839               	movf	___fttol@f1,w
  4235  04C3  00BD               	movwf	??___fttol
  4236  04C4  083A               	movf	___fttol@f1+1,w
  4237  04C5  00BE               	movwf	??___fttol+1
  4238  04C6  083B               	movf	___fttol@f1+2,w
  4239  04C7  00BF               	movwf	??___fttol+2
  4240  04C8  3017               	movlw	23
  4241  04C9                     u3605:	
  4242  04C9  36BF               	lsrf	??___fttol+2,f
  4243  04CA  0CBE               	rrf	??___fttol+1,f
  4244  04CB  0CBD               	rrf	??___fttol,f
  4245  04CC  0B89               	decfsz	9,f
  4246  04CD  2CC9               	goto	u3605
  4247  04CE  083D               	movf	??___fttol,w
  4248  04CF  00C0               	movwf	??___fttol+3
  4249  04D0  0840               	movf	??___fttol+3,w
  4250  04D1  00C1               	movwf	___fttol@sign1
  4251  04D2  17BA               	bsf	___fttol@f1+1,7
  4252  04D3  30FF               	movlw	255
  4253  04D4  05B9               	andwf	___fttol@f1,f
  4254  04D5  30FF               	movlw	255
  4255  04D6  05BA               	andwf	___fttol@f1+1,f
  4256  04D7  3000               	movlw	0
  4257  04D8  05BB               	andwf	___fttol@f1+2,f
  4258  04D9  0839               	movf	___fttol@f1,w
  4259  04DA  00C2               	movwf	___fttol@lval
  4260  04DB  083A               	movf	___fttol@f1+1,w
  4261  04DC  00C3               	movwf	___fttol@lval+1
  4262  04DD  083B               	movf	___fttol@f1+2,w
  4263  04DE  00C4               	movwf	___fttol@lval+2
  4264  04DF  01C5               	clrf	___fttol@lval+3
  4265  04E0  308E               	movlw	142
  4266  04E1  02C6               	subwf	___fttol@exp1,f
  4267  04E2  1FC6               	btfss	___fttol@exp1,7
  4268  04E3  2D00               	goto	l2689
  4269  04E4  0846               	movf	___fttol@exp1,w
  4270  04E5  3A80               	xorlw	128
  4271  04E6  3E8F               	addlw	143
  4272  04E7  1803               	skipnc
  4273  04E8  2CF2               	goto	l2687
  4274  04E9  3000               	movlw	0
  4275  04EA  00BC               	movwf	?___fttol+3
  4276  04EB  3000               	movlw	0
  4277  04EC  00BB               	movwf	?___fttol+2
  4278  04ED  3000               	movlw	0
  4279  04EE  00BA               	movwf	?___fttol+1
  4280  04EF  3000               	movlw	0
  4281  04F0  00B9               	movwf	?___fttol
  4282  04F1  0008               	return
  4283  04F2                     l2687:	
  4284  04F2  3001               	movlw	1
  4285  04F3                     u3635:	
  4286  04F3  36C5               	lsrf	___fttol@lval+3,f
  4287  04F4  0CC4               	rrf	___fttol@lval+2,f
  4288  04F5  0CC3               	rrf	___fttol@lval+1,f
  4289  04F6  0CC2               	rrf	___fttol@lval,f
  4290  04F7  0B89               	decfsz	9,f
  4291  04F8  2CF3               	goto	u3635
  4292  04F9  3001               	movlw	1
  4293  04FA  00BD               	movwf	??___fttol
  4294  04FB  083D               	movf	??___fttol,w
  4295  04FC  07C6               	addwf	___fttol@exp1,f
  4296  04FD  1903               	btfsc	3,2
  4297  04FE  2D19               	goto	l2697
  4298  04FF  2CF2               	goto	l2687
  4299  0500                     l2689:	
  4300  0500  3018               	movlw	24
  4301  0501  0246               	subwf	___fttol@exp1,w
  4302  0502  1C03               	skipc
  4303  0503  2D16               	goto	l662
  4304  0504  3000               	movlw	0
  4305  0505  00BC               	movwf	?___fttol+3
  4306  0506  3000               	movlw	0
  4307  0507  00BB               	movwf	?___fttol+2
  4308  0508  3000               	movlw	0
  4309  0509  00BA               	movwf	?___fttol+1
  4310  050A  3000               	movlw	0
  4311  050B  00B9               	movwf	?___fttol
  4312  050C  0008               	return
  4313  050D                     l2695:	
  4314  050D  3001               	movlw	1
  4315  050E                     u3665:	
  4316  050E  35C2               	lslf	___fttol@lval,f
  4317  050F  0DC3               	rlf	___fttol@lval+1,f
  4318  0510  0DC4               	rlf	___fttol@lval+2,f
  4319  0511  0DC5               	rlf	___fttol@lval+3,f
  4320  0512  0B89               	decfsz	9,f
  4321  0513  2D0E               	goto	u3665
  4322  0514  3001               	movlw	1
  4323  0515  02C6               	subwf	___fttol@exp1,f
  4324  0516                     l662:	
  4325  0516  0846               	movf	___fttol@exp1,w
  4326  0517  1D03               	btfss	3,2
  4327  0518  2D0D               	goto	l2695
  4328  0519                     l2697:	
  4329  0519  0841               	movf	___fttol@sign1,w
  4330  051A  1903               	btfsc	3,2
  4331  051B  2D27               	goto	l2701
  4332  051C  09C2               	comf	___fttol@lval,f
  4333  051D  09C3               	comf	___fttol@lval+1,f
  4334  051E  09C4               	comf	___fttol@lval+2,f
  4335  051F  09C5               	comf	___fttol@lval+3,f
  4336  0520  0AC2               	incf	___fttol@lval,f
  4337  0521  1903               	skipnz
  4338  0522  0AC3               	incf	___fttol@lval+1,f
  4339  0523  1903               	skipnz
  4340  0524  0AC4               	incf	___fttol@lval+2,f
  4341  0525  1903               	skipnz
  4342  0526  0AC5               	incf	___fttol@lval+3,f
  4343  0527                     l2701:	
  4344  0527  0845               	movf	___fttol@lval+3,w
  4345  0528  00BC               	movwf	?___fttol+3
  4346  0529  0844               	movf	___fttol@lval+2,w
  4347  052A  00BB               	movwf	?___fttol+2
  4348  052B  0843               	movf	___fttol@lval+1,w
  4349  052C  00BA               	movwf	?___fttol+1
  4350  052D  0842               	movf	___fttol@lval,w
  4351  052E  00B9               	movwf	?___fttol
  4352  052F  0008               	return
  4353  0530                     __end_of___fttol:	
  4354                           
  4355                           	psect	text19
  4356  0FC4                     __ptext19:	
  4357 ;; *************** function ___ftge *****************
  4358 ;; Defined at:
  4359 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  ff1             3    0[BANK0 ] float 
  4362 ;;  ff2             3    3[BANK0 ] float 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;		None               void
  4367 ;; Registers used:
  4368 ;;		wreg, status,2, status,0
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;Total ram usage:        9 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    2
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_ceil
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           
  4389                           ;psect for function ___ftge
  4390  0FC4                     ___ftge:	
  4391                           
  4392                           ;incstack = 0
  4393                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4394  0FC4  0020               	movlb	0	; select bank0
  4395  0FC5  1FA2               	btfss	___ftge@ff1+2,7
  4396  0FC6  2FDB               	goto	l2647
  4397  0FC7  0920               	comf	___ftge@ff1,w
  4398  0FC8  00F3               	movwf	??___ftge
  4399  0FC9  0921               	comf	___ftge@ff1+1,w
  4400  0FCA  00F4               	movwf	??___ftge+1
  4401  0FCB  0922               	comf	___ftge@ff1+2,w
  4402  0FCC  00F5               	movwf	??___ftge+2
  4403  0FCD  0AF3               	incf	??___ftge,f
  4404  0FCE  1903               	skipnz
  4405  0FCF  0AF4               	incf	??___ftge+1,f
  4406  0FD0  1903               	skipnz
  4407  0FD1  0AF5               	incf	??___ftge+2,f
  4408  0FD2  3000               	movlw	0
  4409  0FD3  0773               	addwf	??___ftge,w
  4410  0FD4  00A0               	movwf	___ftge@ff1
  4411  0FD5  3000               	movlw	0
  4412  0FD6  3D74               	addwfc	??___ftge+1,w
  4413  0FD7  00A1               	movwf	___ftge@ff1+1
  4414  0FD8  3080               	movlw	128
  4415  0FD9  3D75               	addwfc	??___ftge+2,w
  4416  0FDA  00A2               	movwf	___ftge@ff1+2
  4417  0FDB                     l2647:	
  4418  0FDB  1FA5               	btfss	___ftge@ff2+2,7
  4419  0FDC  2FF1               	goto	l2651
  4420  0FDD  0923               	comf	___ftge@ff2,w
  4421  0FDE  00F3               	movwf	??___ftge
  4422  0FDF  0924               	comf	___ftge@ff2+1,w
  4423  0FE0  00F4               	movwf	??___ftge+1
  4424  0FE1  0925               	comf	___ftge@ff2+2,w
  4425  0FE2  00F5               	movwf	??___ftge+2
  4426  0FE3  0AF3               	incf	??___ftge,f
  4427  0FE4  1903               	skipnz
  4428  0FE5  0AF4               	incf	??___ftge+1,f
  4429  0FE6  1903               	skipnz
  4430  0FE7  0AF5               	incf	??___ftge+2,f
  4431  0FE8  3000               	movlw	0
  4432  0FE9  0773               	addwf	??___ftge,w
  4433  0FEA  00A3               	movwf	___ftge@ff2
  4434  0FEB  3000               	movlw	0
  4435  0FEC  3D74               	addwfc	??___ftge+1,w
  4436  0FED  00A4               	movwf	___ftge@ff2+1
  4437  0FEE  3080               	movlw	128
  4438  0FEF  3D75               	addwfc	??___ftge+2,w
  4439  0FF0  00A5               	movwf	___ftge@ff2+2
  4440  0FF1                     l2651:	
  4441  0FF1  3080               	movlw	128
  4442  0FF2  06A2               	xorwf	___ftge@ff1+2,f
  4443  0FF3  3080               	movlw	128
  4444  0FF4  06A5               	xorwf	___ftge@ff2+2,f
  4445  0FF5  0825               	movf	___ftge@ff2+2,w
  4446  0FF6  0222               	subwf	___ftge@ff1+2,w
  4447  0FF7  1D03               	skipz
  4448  0FF8  0008               	return
  4449  0FF9  0824               	movf	___ftge@ff2+1,w
  4450  0FFA  0221               	subwf	___ftge@ff1+1,w
  4451  0FFB  1D03               	skipz
  4452  0FFC  0008               	return
  4453  0FFD  0823               	movf	___ftge@ff2,w
  4454  0FFE  0220               	subwf	___ftge@ff1,w
  4455  0FFF  0008               	return
  4456  1000                     __end_of___ftge:	
  4457                           
  4458                           	psect	text20
  4459  01A8                     __ptext20:	
  4460 ;; *************** function ___ftadd *****************
  4461 ;; Defined at:
  4462 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  f1              3    3[BANK0 ] float 
  4465 ;;  f2              3    6[BANK0 ] float 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  exp1            1   15[BANK0 ] unsigned char 
  4468 ;;  exp2            1   14[BANK0 ] unsigned char 
  4469 ;;  sign            1   13[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  3    3[BANK0 ] float 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4480 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;Total ram usage:       13 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    3
  4486 ;; This function calls:
  4487 ;;		___ftpack
  4488 ;; This function is called by:
  4489 ;;		_ceil
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function ___ftadd
  4495  01A8                     ___ftadd:	
  4496                           
  4497                           ;incstack = 0
  4498                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4499  01A8  0020               	movlb	0	; select bank0
  4500  01A9  0823               	movf	___ftadd@f1,w
  4501  01AA  00A9               	movwf	??___ftadd
  4502  01AB  0824               	movf	___ftadd@f1+1,w
  4503  01AC  00AA               	movwf	??___ftadd+1
  4504  01AD  0825               	movf	___ftadd@f1+2,w
  4505  01AE  00AB               	movwf	??___ftadd+2
  4506  01AF  1003               	clrc
  4507  01B0  0D2A               	rlf	??___ftadd+1,w
  4508  01B1  0D2B               	rlf	??___ftadd+2,w
  4509  01B2  00AC               	movwf	??___ftadd+3
  4510  01B3  082C               	movf	??___ftadd+3,w
  4511  01B4  00AF               	movwf	___ftadd@exp1
  4512  01B5  0826               	movf	___ftadd@f2,w
  4513  01B6  00A9               	movwf	??___ftadd
  4514  01B7  0827               	movf	___ftadd@f2+1,w
  4515  01B8  00AA               	movwf	??___ftadd+1
  4516  01B9  0828               	movf	___ftadd@f2+2,w
  4517  01BA  00AB               	movwf	??___ftadd+2
  4518  01BB  1003               	clrc
  4519  01BC  0D2A               	rlf	??___ftadd+1,w
  4520  01BD  0D2B               	rlf	??___ftadd+2,w
  4521  01BE  00AC               	movwf	??___ftadd+3
  4522  01BF  082C               	movf	??___ftadd+3,w
  4523  01C0  00AE               	movwf	___ftadd@exp2
  4524  01C1  082F               	movf	___ftadd@exp1,w
  4525  01C2  1903               	btfsc	3,2
  4526  01C3  29D0               	goto	l2579
  4527  01C4  082E               	movf	___ftadd@exp2,w
  4528  01C5  022F               	subwf	___ftadd@exp1,w
  4529  01C6  1803               	skipnc
  4530  01C7  29D7               	goto	l2583
  4531  01C8  032F               	decf	___ftadd@exp1,w
  4532  01C9  3AFF               	xorlw	255
  4533  01CA  072E               	addwf	___ftadd@exp2,w
  4534  01CB  00A9               	movwf	??___ftadd
  4535  01CC  3019               	movlw	25
  4536  01CD  0229               	subwf	??___ftadd,w
  4537  01CE  1C03               	skipc
  4538  01CF  29D7               	goto	l2583
  4539  01D0                     l2579:	
  4540  01D0  0826               	movf	___ftadd@f2,w
  4541  01D1  00A3               	movwf	?___ftadd
  4542  01D2  0827               	movf	___ftadd@f2+1,w
  4543  01D3  00A4               	movwf	?___ftadd+1
  4544  01D4  0828               	movf	___ftadd@f2+2,w
  4545  01D5  00A5               	movwf	?___ftadd+2
  4546  01D6  0008               	return
  4547  01D7                     l2583:	
  4548  01D7  082E               	movf	___ftadd@exp2,w
  4549  01D8  1903               	btfsc	3,2
  4550  01D9  0008               	return
  4551  01DA  082F               	movf	___ftadd@exp1,w
  4552  01DB  022E               	subwf	___ftadd@exp2,w
  4553  01DC  1803               	skipnc
  4554  01DD  29E6               	goto	l2589
  4555  01DE  032E               	decf	___ftadd@exp2,w
  4556  01DF  3AFF               	xorlw	255
  4557  01E0  072F               	addwf	___ftadd@exp1,w
  4558  01E1  00A9               	movwf	??___ftadd
  4559  01E2  3019               	movlw	25
  4560  01E3  0229               	subwf	??___ftadd,w
  4561  01E4  1803               	btfsc	3,0
  4562  01E5  0008               	return
  4563  01E6                     l2589:	
  4564  01E6  3006               	movlw	6
  4565  01E7  00A9               	movwf	??___ftadd
  4566  01E8  0829               	movf	??___ftadd,w
  4567  01E9  00AD               	movwf	___ftadd@sign
  4568  01EA  1BA5               	btfsc	___ftadd@f1+2,7
  4569  01EB  17AD               	bsf	___ftadd@sign,7
  4570  01EC  1BA8               	btfsc	___ftadd@f2+2,7
  4571  01ED  172D               	bsf	___ftadd@sign,6
  4572  01EE  17A4               	bsf	___ftadd@f1+1,7
  4573  01EF  30FF               	movlw	255
  4574  01F0  05A3               	andwf	___ftadd@f1,f
  4575  01F1  30FF               	movlw	255
  4576  01F2  05A4               	andwf	___ftadd@f1+1,f
  4577  01F3  3000               	movlw	0
  4578  01F4  05A5               	andwf	___ftadd@f1+2,f
  4579  01F5  17A7               	bsf	___ftadd@f2+1,7
  4580  01F6  30FF               	movlw	255
  4581  01F7  05A6               	andwf	___ftadd@f2,f
  4582  01F8  30FF               	movlw	255
  4583  01F9  05A7               	andwf	___ftadd@f2+1,f
  4584  01FA  3000               	movlw	0
  4585  01FB  05A8               	andwf	___ftadd@f2+2,f
  4586  01FC  082E               	movf	___ftadd@exp2,w
  4587  01FD  022F               	subwf	___ftadd@exp1,w
  4588  01FE  1803               	skipnc
  4589  01FF  2A22               	goto	l2611
  4590  0200                     l2601:	
  4591  0200  3001               	movlw	1
  4592  0201                     u3425:	
  4593  0201  35A6               	lslf	___ftadd@f2,f
  4594  0202  0DA7               	rlf	___ftadd@f2+1,f
  4595  0203  0DA8               	rlf	___ftadd@f2+2,f
  4596  0204  0B89               	decfsz	9,f
  4597  0205  2A01               	goto	u3425
  4598  0206  3001               	movlw	1
  4599  0207  02AE               	subwf	___ftadd@exp2,f
  4600  0208  082E               	movf	___ftadd@exp2,w
  4601  0209  062F               	xorwf	___ftadd@exp1,w
  4602  020A  1903               	skipnz
  4603  020B  2A1D               	goto	l2609
  4604  020C  3001               	movlw	1
  4605  020D  02AD               	subwf	___ftadd@sign,f
  4606  020E  082D               	movf	___ftadd@sign,w
  4607  020F  3907               	andlw	7
  4608  0210  1903               	btfsc	3,2
  4609  0211  2A1D               	goto	l2609
  4610  0212  2A00               	goto	l2601
  4611  0213                     l2607:	
  4612  0213  3001               	movlw	1
  4613  0214                     u3455:	
  4614  0214  36A5               	lsrf	___ftadd@f1+2,f
  4615  0215  0CA4               	rrf	___ftadd@f1+1,f
  4616  0216  0CA3               	rrf	___ftadd@f1,f
  4617  0217  0B89               	decfsz	9,f
  4618  0218  2A14               	goto	u3455
  4619  0219  3001               	movlw	1
  4620  021A  00A9               	movwf	??___ftadd
  4621  021B  0829               	movf	??___ftadd,w
  4622  021C  07AF               	addwf	___ftadd@exp1,f
  4623  021D                     l2609:	
  4624  021D  082F               	movf	___ftadd@exp1,w
  4625  021E  062E               	xorwf	___ftadd@exp2,w
  4626  021F  1903               	btfsc	3,2
  4627  0220  2A47               	goto	l602
  4628  0221  2A13               	goto	l2607
  4629  0222                     l2611:	
  4630  0222  082F               	movf	___ftadd@exp1,w
  4631  0223  022E               	subwf	___ftadd@exp2,w
  4632  0224  1803               	skipnc
  4633  0225  2A47               	goto	l602
  4634  0226                     l2613:	
  4635  0226  3001               	movlw	1
  4636  0227                     u3485:	
  4637  0227  35A3               	lslf	___ftadd@f1,f
  4638  0228  0DA4               	rlf	___ftadd@f1+1,f
  4639  0229  0DA5               	rlf	___ftadd@f1+2,f
  4640  022A  0B89               	decfsz	9,f
  4641  022B  2A27               	goto	u3485
  4642  022C  3001               	movlw	1
  4643  022D  02AF               	subwf	___ftadd@exp1,f
  4644  022E  082E               	movf	___ftadd@exp2,w
  4645  022F  062F               	xorwf	___ftadd@exp1,w
  4646  0230  1903               	skipnz
  4647  0231  2A43               	goto	l2621
  4648  0232  3001               	movlw	1
  4649  0233  02AD               	subwf	___ftadd@sign,f
  4650  0234  082D               	movf	___ftadd@sign,w
  4651  0235  3907               	andlw	7
  4652  0236  1903               	btfsc	3,2
  4653  0237  2A43               	goto	l2621
  4654  0238  2A26               	goto	l2613
  4655  0239                     l2619:	
  4656  0239  3001               	movlw	1
  4657  023A                     u3515:	
  4658  023A  36A8               	lsrf	___ftadd@f2+2,f
  4659  023B  0CA7               	rrf	___ftadd@f2+1,f
  4660  023C  0CA6               	rrf	___ftadd@f2,f
  4661  023D  0B89               	decfsz	9,f
  4662  023E  2A3A               	goto	u3515
  4663  023F  3001               	movlw	1
  4664  0240  00A9               	movwf	??___ftadd
  4665  0241  0829               	movf	??___ftadd,w
  4666  0242  07AE               	addwf	___ftadd@exp2,f
  4667  0243                     l2621:	
  4668  0243  082F               	movf	___ftadd@exp1,w
  4669  0244  062E               	xorwf	___ftadd@exp2,w
  4670  0245  1D03               	skipz
  4671  0246  2A39               	goto	l2619
  4672  0247                     l602:	
  4673  0247  1FAD               	btfss	___ftadd@sign,7
  4674  0248  2A59               	goto	l2625
  4675  0249  30FF               	movlw	255
  4676  024A  06A3               	xorwf	___ftadd@f1,f
  4677  024B  30FF               	movlw	255
  4678  024C  06A4               	xorwf	___ftadd@f1+1,f
  4679  024D  30FF               	movlw	255
  4680  024E  06A5               	xorwf	___ftadd@f1+2,f
  4681  024F  3001               	movlw	1
  4682  0250  07A3               	addwf	___ftadd@f1,f
  4683  0251  3000               	movlw	0
  4684  0252  1803               	skipnc
  4685  0253  3001               	movlw	1
  4686  0254  07A4               	addwf	___ftadd@f1+1,f
  4687  0255  3000               	movlw	0
  4688  0256  1803               	skipnc
  4689  0257  3001               	movlw	1
  4690  0258  07A5               	addwf	___ftadd@f1+2,f
  4691  0259                     l2625:	
  4692  0259  1F2D               	btfss	___ftadd@sign,6
  4693  025A  2A6B               	goto	l2629
  4694  025B  30FF               	movlw	255
  4695  025C  06A6               	xorwf	___ftadd@f2,f
  4696  025D  30FF               	movlw	255
  4697  025E  06A7               	xorwf	___ftadd@f2+1,f
  4698  025F  30FF               	movlw	255
  4699  0260  06A8               	xorwf	___ftadd@f2+2,f
  4700  0261  3001               	movlw	1
  4701  0262  07A6               	addwf	___ftadd@f2,f
  4702  0263  3000               	movlw	0
  4703  0264  1803               	skipnc
  4704  0265  3001               	movlw	1
  4705  0266  07A7               	addwf	___ftadd@f2+1,f
  4706  0267  3000               	movlw	0
  4707  0268  1803               	skipnc
  4708  0269  3001               	movlw	1
  4709  026A  07A8               	addwf	___ftadd@f2+2,f
  4710  026B                     l2629:	
  4711  026B  01AD               	clrf	___ftadd@sign
  4712  026C  0823               	movf	___ftadd@f1,w
  4713  026D  07A6               	addwf	___ftadd@f2,f
  4714  026E  0824               	movf	___ftadd@f1+1,w
  4715  026F  3DA7               	addwfc	___ftadd@f2+1,f
  4716  0270  0825               	movf	___ftadd@f1+2,w
  4717  0271  3DA8               	addwfc	___ftadd@f2+2,f
  4718  0272  1FA8               	btfss	___ftadd@f2+2,7
  4719  0273  2A86               	goto	l2639
  4720  0274  30FF               	movlw	255
  4721  0275  06A6               	xorwf	___ftadd@f2,f
  4722  0276  30FF               	movlw	255
  4723  0277  06A7               	xorwf	___ftadd@f2+1,f
  4724  0278  30FF               	movlw	255
  4725  0279  06A8               	xorwf	___ftadd@f2+2,f
  4726  027A  3001               	movlw	1
  4727  027B  07A6               	addwf	___ftadd@f2,f
  4728  027C  3000               	movlw	0
  4729  027D  1803               	skipnc
  4730  027E  3001               	movlw	1
  4731  027F  07A7               	addwf	___ftadd@f2+1,f
  4732  0280  3000               	movlw	0
  4733  0281  1803               	skipnc
  4734  0282  3001               	movlw	1
  4735  0283  07A8               	addwf	___ftadd@f2+2,f
  4736  0284  01AD               	clrf	___ftadd@sign
  4737  0285  0AAD               	incf	___ftadd@sign,f
  4738  0286                     l2639:	
  4739  0286  0826               	movf	___ftadd@f2,w
  4740  0287  00F3               	movwf	___ftpack@arg
  4741  0288  0827               	movf	___ftadd@f2+1,w
  4742  0289  00F4               	movwf	___ftpack@arg+1
  4743  028A  0828               	movf	___ftadd@f2+2,w
  4744  028B  00F5               	movwf	___ftpack@arg+2
  4745  028C  082F               	movf	___ftadd@exp1,w
  4746  028D  00A9               	movwf	??___ftadd
  4747  028E  0829               	movf	??___ftadd,w
  4748  028F  00F6               	movwf	___ftpack@exp
  4749  0290  082D               	movf	___ftadd@sign,w
  4750  0291  00AA               	movwf	??___ftadd+1
  4751  0292  082A               	movf	??___ftadd+1,w
  4752  0293  00F7               	movwf	___ftpack@sign
  4753  0294  3186  2620         	fcall	___ftpack
  4754  0296  0873               	movf	?___ftpack,w
  4755  0297  0020               	movlb	0	; select bank0
  4756  0298  00A3               	movwf	?___ftadd
  4757  0299  0874               	movf	?___ftpack+1,w
  4758  029A  00A4               	movwf	?___ftadd+1
  4759  029B  0875               	movf	?___ftpack+2,w
  4760  029C  00A5               	movwf	?___ftadd+2
  4761  029D  0008               	return
  4762  029E                     __end_of___ftadd:	
  4763                           
  4764                           	psect	text21
  4765  07A0                     __ptext21:	
  4766 ;; *************** function ___altoft *****************
  4767 ;; Defined at:
  4768 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  c               4   39[BANK0 ] long 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  sign            1   46[BANK0 ] unsigned char 
  4773 ;;  exp             1   45[BANK0 ] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  3   39[BANK0 ] float 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4786 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4787 ;;Total ram usage:        8 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    3
  4790 ;; This function calls:
  4791 ;;		___ftpack
  4792 ;; This function is called by:
  4793 ;;		_ceil
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function ___altoft
  4799  07A0                     ___altoft:	
  4800                           
  4801                           ;incstack = 0
  4802                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4803  07A0  0020               	movlb	0	; select bank0
  4804  07A1  01CE               	clrf	___altoft@sign
  4805  07A2  308E               	movlw	142
  4806  07A3  00CB               	movwf	??___altoft
  4807  07A4  084B               	movf	??___altoft,w
  4808  07A5  00CD               	movwf	___altoft@exp
  4809  07A6  1FCA               	btfss	___altoft@c+3,7
  4810  07A7  2FB5               	goto	l2551
  4811  07A8  09C7               	comf	___altoft@c,f
  4812  07A9  09C8               	comf	___altoft@c+1,f
  4813  07AA  09C9               	comf	___altoft@c+2,f
  4814  07AB  09CA               	comf	___altoft@c+3,f
  4815  07AC  0AC7               	incf	___altoft@c,f
  4816  07AD  1903               	skipnz
  4817  07AE  0AC8               	incf	___altoft@c+1,f
  4818  07AF  1903               	skipnz
  4819  07B0  0AC9               	incf	___altoft@c+2,f
  4820  07B1  1903               	skipnz
  4821  07B2  0ACA               	incf	___altoft@c+3,f
  4822  07B3  01CE               	clrf	___altoft@sign
  4823  07B4  0ACE               	incf	___altoft@sign,f
  4824  07B5                     l2551:	
  4825  07B5  30FF               	movlw	255
  4826  07B6  054A               	andwf	___altoft@c+3,w
  4827  07B7  1903               	btfsc	3,2
  4828  07B8  2FC5               	goto	l2553
  4829  07B9  3001               	movlw	1
  4830  07BA                     u3305:	
  4831  07BA  36CA               	lsrf	___altoft@c+3,f
  4832  07BB  0CC9               	rrf	___altoft@c+2,f
  4833  07BC  0CC8               	rrf	___altoft@c+1,f
  4834  07BD  0CC7               	rrf	___altoft@c,f
  4835  07BE  0B89               	decfsz	9,f
  4836  07BF  2FBA               	goto	u3305
  4837  07C0  3001               	movlw	1
  4838  07C1  00CB               	movwf	??___altoft
  4839  07C2  084B               	movf	??___altoft,w
  4840  07C3  07CD               	addwf	___altoft@exp,f
  4841  07C4  2FB5               	goto	l2551
  4842  07C5                     l2553:	
  4843  07C5  0847               	movf	___altoft@c,w
  4844  07C6  00F3               	movwf	___ftpack@arg
  4845  07C7  0848               	movf	___altoft@c+1,w
  4846  07C8  00F4               	movwf	___ftpack@arg+1
  4847  07C9  0849               	movf	___altoft@c+2,w
  4848  07CA  00F5               	movwf	___ftpack@arg+2
  4849  07CB  084D               	movf	___altoft@exp,w
  4850  07CC  00CB               	movwf	??___altoft
  4851  07CD  084B               	movf	??___altoft,w
  4852  07CE  00F6               	movwf	___ftpack@exp
  4853  07CF  084E               	movf	___altoft@sign,w
  4854  07D0  00CC               	movwf	??___altoft+1
  4855  07D1  084C               	movf	??___altoft+1,w
  4856  07D2  00F7               	movwf	___ftpack@sign
  4857  07D3  3186  2620         	fcall	___ftpack
  4858  07D5  0873               	movf	?___ftpack,w
  4859  07D6  0020               	movlb	0	; select bank0
  4860  07D7  00C7               	movwf	?___altoft
  4861  07D8  0874               	movf	?___ftpack+1,w
  4862  07D9  00C8               	movwf	?___altoft+1
  4863  07DA  0875               	movf	?___ftpack+2,w
  4864  07DB  00C9               	movwf	?___altoft+2
  4865  07DC  0008               	return
  4866  07DD                     __end_of___altoft:	
  4867                           
  4868                           	psect	text22
  4869  0400                     __ptext22:	
  4870 ;; *************** function ___ftdiv *****************
  4871 ;; Defined at:
  4872 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  f2              3    9[BANK0 ] float 
  4875 ;;  f1              3   12[BANK0 ] float 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  f3              3   20[BANK0 ] float 
  4878 ;;  sign            1   24[BANK0 ] unsigned char 
  4879 ;;  exp             1   23[BANK0 ] unsigned char 
  4880 ;;  cntr            1   19[BANK0 ] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  3    9[BANK0 ] float 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2, status,0, pclath, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4890 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4894 ;;Total ram usage:       16 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    3
  4897 ;; This function calls:
  4898 ;;		___ftpack
  4899 ;; This function is called by:
  4900 ;;		_step
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           
  4905                           ;psect for function ___ftdiv
  4906  0400                     ___ftdiv:	
  4907                           
  4908                           ;incstack = 0
  4909                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4910  0400  0020               	movlb	0	; select bank0
  4911  0401  082C               	movf	___ftdiv@f1,w
  4912  0402  00AF               	movwf	??___ftdiv
  4913  0403  082D               	movf	___ftdiv@f1+1,w
  4914  0404  00B0               	movwf	??___ftdiv+1
  4915  0405  082E               	movf	___ftdiv@f1+2,w
  4916  0406  00B1               	movwf	??___ftdiv+2
  4917  0407  1003               	clrc
  4918  0408  0D30               	rlf	??___ftdiv+1,w
  4919  0409  0D31               	rlf	??___ftdiv+2,w
  4920  040A  00B2               	movwf	??___ftdiv+3
  4921  040B  0832               	movf	??___ftdiv+3,w
  4922  040C  00B7               	movwf	___ftdiv@exp
  4923  040D  0837               	movf	___ftdiv@exp,w
  4924  040E  1D03               	btfss	3,2
  4925  040F  2C17               	goto	l2775
  4926  0410  3000               	movlw	0
  4927  0411  00A9               	movwf	?___ftdiv
  4928  0412  3000               	movlw	0
  4929  0413  00AA               	movwf	?___ftdiv+1
  4930  0414  3000               	movlw	0
  4931  0415  00AB               	movwf	?___ftdiv+2
  4932  0416  0008               	return
  4933  0417                     l2775:	
  4934  0417  0829               	movf	___ftdiv@f2,w
  4935  0418  00AF               	movwf	??___ftdiv
  4936  0419  082A               	movf	___ftdiv@f2+1,w
  4937  041A  00B0               	movwf	??___ftdiv+1
  4938  041B  082B               	movf	___ftdiv@f2+2,w
  4939  041C  00B1               	movwf	??___ftdiv+2
  4940  041D  1003               	clrc
  4941  041E  0D30               	rlf	??___ftdiv+1,w
  4942  041F  0D31               	rlf	??___ftdiv+2,w
  4943  0420  00B2               	movwf	??___ftdiv+3
  4944  0421  0832               	movf	??___ftdiv+3,w
  4945  0422  00B8               	movwf	___ftdiv@sign
  4946  0423  0838               	movf	___ftdiv@sign,w
  4947  0424  1D03               	btfss	3,2
  4948  0425  2C2D               	goto	l2781
  4949  0426  3000               	movlw	0
  4950  0427  00A9               	movwf	?___ftdiv
  4951  0428  3000               	movlw	0
  4952  0429  00AA               	movwf	?___ftdiv+1
  4953  042A  3000               	movlw	0
  4954  042B  00AB               	movwf	?___ftdiv+2
  4955  042C  0008               	return
  4956  042D                     l2781:	
  4957  042D  3000               	movlw	0
  4958  042E  00B4               	movwf	___ftdiv@f3
  4959  042F  3000               	movlw	0
  4960  0430  00B5               	movwf	___ftdiv@f3+1
  4961  0431  3000               	movlw	0
  4962  0432  00B6               	movwf	___ftdiv@f3+2
  4963  0433  3089               	movlw	137
  4964  0434  0738               	addwf	___ftdiv@sign,w
  4965  0435  00AF               	movwf	??___ftdiv
  4966  0436  082F               	movf	??___ftdiv,w
  4967  0437  02B7               	subwf	___ftdiv@exp,f
  4968  0438  082C               	movf	___ftdiv@f1,w
  4969  0439  00AF               	movwf	??___ftdiv
  4970  043A  082D               	movf	___ftdiv@f1+1,w
  4971  043B  00B0               	movwf	??___ftdiv+1
  4972  043C  082E               	movf	___ftdiv@f1+2,w
  4973  043D  00B1               	movwf	??___ftdiv+2
  4974  043E  3010               	movlw	16
  4975  043F                     u3815:	
  4976  043F  36B1               	lsrf	??___ftdiv+2,f
  4977  0440  0CB0               	rrf	??___ftdiv+1,f
  4978  0441  0CAF               	rrf	??___ftdiv,f
  4979  0442  0B89               	decfsz	9,f
  4980  0443  2C3F               	goto	u3815
  4981  0444  082F               	movf	??___ftdiv,w
  4982  0445  00B2               	movwf	??___ftdiv+3
  4983  0446  0832               	movf	??___ftdiv+3,w
  4984  0447  00B8               	movwf	___ftdiv@sign
  4985  0448  0829               	movf	___ftdiv@f2,w
  4986  0449  00AF               	movwf	??___ftdiv
  4987  044A  082A               	movf	___ftdiv@f2+1,w
  4988  044B  00B0               	movwf	??___ftdiv+1
  4989  044C  082B               	movf	___ftdiv@f2+2,w
  4990  044D  00B1               	movwf	??___ftdiv+2
  4991  044E  3010               	movlw	16
  4992  044F                     u3825:	
  4993  044F  36B1               	lsrf	??___ftdiv+2,f
  4994  0450  0CB0               	rrf	??___ftdiv+1,f
  4995  0451  0CAF               	rrf	??___ftdiv,f
  4996  0452  0B89               	decfsz	9,f
  4997  0453  2C4F               	goto	u3825
  4998  0454  082F               	movf	??___ftdiv,w
  4999  0455  00B2               	movwf	??___ftdiv+3
  5000  0456  0832               	movf	??___ftdiv+3,w
  5001  0457  06B8               	xorwf	___ftdiv@sign,f
  5002  0458  3080               	movlw	128
  5003  0459  00AF               	movwf	??___ftdiv
  5004  045A  082F               	movf	??___ftdiv,w
  5005  045B  05B8               	andwf	___ftdiv@sign,f
  5006  045C  17AD               	bsf	___ftdiv@f1+1,7
  5007  045D  30FF               	movlw	255
  5008  045E  05AC               	andwf	___ftdiv@f1,f
  5009  045F  30FF               	movlw	255
  5010  0460  05AD               	andwf	___ftdiv@f1+1,f
  5011  0461  3000               	movlw	0
  5012  0462  05AE               	andwf	___ftdiv@f1+2,f
  5013  0463  17AA               	bsf	___ftdiv@f2+1,7
  5014  0464  30FF               	movlw	255
  5015  0465  05A9               	andwf	___ftdiv@f2,f
  5016  0466  30FF               	movlw	255
  5017  0467  05AA               	andwf	___ftdiv@f2+1,f
  5018  0468  3000               	movlw	0
  5019  0469  05AB               	andwf	___ftdiv@f2+2,f
  5020  046A  3018               	movlw	24
  5021  046B  00AF               	movwf	??___ftdiv
  5022  046C  082F               	movf	??___ftdiv,w
  5023  046D  00B3               	movwf	___ftdiv@cntr
  5024  046E                     l2795:	
  5025  046E  3001               	movlw	1
  5026  046F                     u3835:	
  5027  046F  35B4               	lslf	___ftdiv@f3,f
  5028  0470  0DB5               	rlf	___ftdiv@f3+1,f
  5029  0471  0DB6               	rlf	___ftdiv@f3+2,f
  5030  0472  0B89               	decfsz	9,f
  5031  0473  2C6F               	goto	u3835
  5032  0474  082B               	movf	___ftdiv@f2+2,w
  5033  0475  022E               	subwf	___ftdiv@f1+2,w
  5034  0476  1D03               	skipz
  5035  0477  2C7E               	goto	u3845
  5036  0478  082A               	movf	___ftdiv@f2+1,w
  5037  0479  022D               	subwf	___ftdiv@f1+1,w
  5038  047A  1D03               	skipz
  5039  047B  2C7E               	goto	u3845
  5040  047C  0829               	movf	___ftdiv@f2,w
  5041  047D  022C               	subwf	___ftdiv@f1,w
  5042  047E                     u3845:	
  5043  047E  1C03               	skipc
  5044  047F  2C87               	goto	l2803
  5045  0480  0829               	movf	___ftdiv@f2,w
  5046  0481  02AC               	subwf	___ftdiv@f1,f
  5047  0482  082A               	movf	___ftdiv@f2+1,w
  5048  0483  3BAD               	subwfb	___ftdiv@f1+1,f
  5049  0484  082B               	movf	___ftdiv@f2+2,w
  5050  0485  3BAE               	subwfb	___ftdiv@f1+2,f
  5051  0486  1434               	bsf	___ftdiv@f3,0
  5052  0487                     l2803:	
  5053  0487  3001               	movlw	1
  5054  0488                     u3855:	
  5055  0488  35AC               	lslf	___ftdiv@f1,f
  5056  0489  0DAD               	rlf	___ftdiv@f1+1,f
  5057  048A  0DAE               	rlf	___ftdiv@f1+2,f
  5058  048B  0B89               	decfsz	9,f
  5059  048C  2C88               	goto	u3855
  5060  048D  3001               	movlw	1
  5061  048E  02B3               	subwf	___ftdiv@cntr,f
  5062  048F  1D03               	btfss	3,2
  5063  0490  2C6E               	goto	l2795
  5064  0491  0834               	movf	___ftdiv@f3,w
  5065  0492  00F3               	movwf	___ftpack@arg
  5066  0493  0835               	movf	___ftdiv@f3+1,w
  5067  0494  00F4               	movwf	___ftpack@arg+1
  5068  0495  0836               	movf	___ftdiv@f3+2,w
  5069  0496  00F5               	movwf	___ftpack@arg+2
  5070  0497  0837               	movf	___ftdiv@exp,w
  5071  0498  00AF               	movwf	??___ftdiv
  5072  0499  082F               	movf	??___ftdiv,w
  5073  049A  00F6               	movwf	___ftpack@exp
  5074  049B  0838               	movf	___ftdiv@sign,w
  5075  049C  00B0               	movwf	??___ftdiv+1
  5076  049D  0830               	movf	??___ftdiv+1,w
  5077  049E  00F7               	movwf	___ftpack@sign
  5078  049F  3186  2620         	fcall	___ftpack
  5079  04A1  0873               	movf	?___ftpack,w
  5080  04A2  0020               	movlb	0	; select bank0
  5081  04A3  00A9               	movwf	?___ftdiv
  5082  04A4  0874               	movf	?___ftpack+1,w
  5083  04A5  00AA               	movwf	?___ftdiv+1
  5084  04A6  0875               	movf	?___ftpack+2,w
  5085  04A7  00AB               	movwf	?___ftdiv+2
  5086  04A8  0008               	return
  5087  04A9                     __end_of___ftdiv:	
  5088                           
  5089                           	psect	text23
  5090  07DD                     __ptext23:	
  5091 ;; *************** function ___awtoft *****************
  5092 ;; Defined at:
  5093 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  c               2    3[BANK0 ] int 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  sign            1    8[BANK0 ] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  3    3[BANK0 ] float 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, status,0, pclath, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5107 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;Total ram usage:        6 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    3
  5114 ;; This function calls:
  5115 ;;		___ftpack
  5116 ;; This function is called by:
  5117 ;;		_step
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function ___awtoft
  5123  07DD                     ___awtoft:	
  5124                           
  5125                           ;incstack = 0
  5126                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5127  07DD  0020               	movlb	0	; select bank0
  5128  07DE  01A8               	clrf	___awtoft@sign
  5129  07DF  1FA4               	btfss	___awtoft@c+1,7
  5130  07E0  2FE8               	goto	l2765
  5131  07E1  09A3               	comf	___awtoft@c,f
  5132  07E2  09A4               	comf	___awtoft@c+1,f
  5133  07E3  0AA3               	incf	___awtoft@c,f
  5134  07E4  1903               	skipnz
  5135  07E5  0AA4               	incf	___awtoft@c+1,f
  5136  07E6  01A8               	clrf	___awtoft@sign
  5137  07E7  0AA8               	incf	___awtoft@sign,f
  5138  07E8                     l2765:	
  5139  07E8  0823               	movf	___awtoft@c,w
  5140  07E9  00F3               	movwf	___ftpack@arg
  5141  07EA  0824               	movf	___awtoft@c+1,w
  5142  07EB  00F4               	movwf	___ftpack@arg+1
  5143  07EC  01F5               	clrf	___ftpack@arg+2
  5144  07ED  308E               	movlw	142
  5145  07EE  00A6               	movwf	??___awtoft
  5146  07EF  0826               	movf	??___awtoft,w
  5147  07F0  00F6               	movwf	___ftpack@exp
  5148  07F1  0828               	movf	___awtoft@sign,w
  5149  07F2  00A7               	movwf	??___awtoft+1
  5150  07F3  0827               	movf	??___awtoft+1,w
  5151  07F4  00F7               	movwf	___ftpack@sign
  5152  07F5  3186  2620         	fcall	___ftpack
  5153  07F7  0873               	movf	?___ftpack,w
  5154  07F8  0020               	movlb	0	; select bank0
  5155  07F9  00A3               	movwf	?___awtoft
  5156  07FA  0874               	movf	?___ftpack+1,w
  5157  07FB  00A4               	movwf	?___awtoft+1
  5158  07FC  0875               	movf	?___ftpack+2,w
  5159  07FD  00A5               	movwf	?___awtoft+2
  5160  07FE  0008               	return
  5161  07FF                     __end_of___awtoft:	
  5162                           
  5163                           	psect	text24
  5164  0620                     __ptext24:	
  5165 ;; *************** function ___ftpack *****************
  5166 ;; Defined at:
  5167 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  arg             3    3[COMMON] unsigned um
  5170 ;;  exp             1    6[COMMON] unsigned char 
  5171 ;;  sign            1    7[COMMON] unsigned char 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  3    3[COMMON] float 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5183 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5185 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;Total ram usage:        8 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    2
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		___altoft
  5194 ;;		___awtoft
  5195 ;;		___ftadd
  5196 ;;		___ftdiv
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function ___ftpack
  5202  0620                     ___ftpack:	
  5203                           
  5204                           ;incstack = 0
  5205                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5206  0620  0876               	movf	___ftpack@exp,w
  5207  0621  1903               	btfsc	3,2
  5208  0622  2E28               	goto	l2513
  5209  0623  0875               	movf	___ftpack@arg+2,w
  5210  0624  0474               	iorwf	___ftpack@arg+1,w
  5211  0625  0473               	iorwf	___ftpack@arg,w
  5212  0626  1D03               	skipz
  5213  0627  2E3A               	goto	l2519
  5214  0628                     l2513:	
  5215  0628  3000               	movlw	0
  5216  0629  00F3               	movwf	?___ftpack
  5217  062A  3000               	movlw	0
  5218  062B  00F4               	movwf	?___ftpack+1
  5219  062C  3000               	movlw	0
  5220  062D  00F5               	movwf	?___ftpack+2
  5221  062E  0008               	return
  5222  062F                     l2517:	
  5223  062F  3001               	movlw	1
  5224  0630  0020               	movlb	0	; select bank0
  5225  0631  00A0               	movwf	??___ftpack
  5226  0632  0820               	movf	??___ftpack,w
  5227  0633  07F6               	addwf	___ftpack@exp,f
  5228  0634  3001               	movlw	1
  5229  0635                     u3195:	
  5230  0635  36F5               	lsrf	___ftpack@arg+2,f
  5231  0636  0CF4               	rrf	___ftpack@arg+1,f
  5232  0637  0CF3               	rrf	___ftpack@arg,f
  5233  0638  0B89               	decfsz	9,f
  5234  0639  2E35               	goto	u3195
  5235  063A                     l2519:	
  5236  063A  30FE               	movlw	254
  5237  063B  0575               	andwf	___ftpack@arg+2,w
  5238  063C  1903               	btfsc	3,2
  5239  063D  2E54               	goto	l547
  5240  063E  2E2F               	goto	l2517
  5241  063F                     l2521:	
  5242  063F  3001               	movlw	1
  5243  0640  0020               	movlb	0	; select bank0
  5244  0641  00A0               	movwf	??___ftpack
  5245  0642  0820               	movf	??___ftpack,w
  5246  0643  07F6               	addwf	___ftpack@exp,f
  5247  0644  3001               	movlw	1
  5248  0645  07F3               	addwf	___ftpack@arg,f
  5249  0646  3000               	movlw	0
  5250  0647  1803               	skipnc
  5251  0648  3001               	movlw	1
  5252  0649  07F4               	addwf	___ftpack@arg+1,f
  5253  064A  3000               	movlw	0
  5254  064B  1803               	skipnc
  5255  064C  3001               	movlw	1
  5256  064D  07F5               	addwf	___ftpack@arg+2,f
  5257  064E  3001               	movlw	1
  5258  064F                     u3215:	
  5259  064F  36F5               	lsrf	___ftpack@arg+2,f
  5260  0650  0CF4               	rrf	___ftpack@arg+1,f
  5261  0651  0CF3               	rrf	___ftpack@arg,f
  5262  0652  0B89               	decfsz	9,f
  5263  0653  2E4F               	goto	u3215
  5264  0654                     l547:	
  5265  0654  30FF               	movlw	255
  5266  0655  0575               	andwf	___ftpack@arg+2,w
  5267  0656  1903               	btfsc	3,2
  5268  0657  2E65               	goto	l2529
  5269  0658  2E3F               	goto	l2521
  5270  0659                     l2531:	
  5271  0659  3002               	movlw	2
  5272  065A  0276               	subwf	___ftpack@exp,w
  5273  065B  1C03               	btfss	3,0
  5274  065C  2E67               	goto	l554
  5275  065D  3001               	movlw	1
  5276  065E  02F6               	subwf	___ftpack@exp,f
  5277  065F  3001               	movlw	1
  5278  0660                     u3235:	
  5279  0660  35F3               	lslf	___ftpack@arg,f
  5280  0661  0DF4               	rlf	___ftpack@arg+1,f
  5281  0662  0DF5               	rlf	___ftpack@arg+2,f
  5282  0663  0B89               	decfsz	9,f
  5283  0664  2E60               	goto	u3235
  5284  0665                     l2529:	
  5285  0665  1FF4               	btfss	___ftpack@arg+1,7
  5286  0666  2E59               	goto	l2531
  5287  0667                     l554:	
  5288  0667  1876               	btfsc	___ftpack@exp,0
  5289  0668  2E6F               	goto	l555
  5290  0669  30FF               	movlw	255
  5291  066A  05F3               	andwf	___ftpack@arg,f
  5292  066B  307F               	movlw	127
  5293  066C  05F4               	andwf	___ftpack@arg+1,f
  5294  066D  30FF               	movlw	255
  5295  066E  05F5               	andwf	___ftpack@arg+2,f
  5296  066F                     l555:	
  5297  066F  1003               	clrc
  5298  0670  0CF6               	rrf	___ftpack@exp,f
  5299  0671  0876               	movf	___ftpack@exp,w
  5300  0672  0020               	movlb	0	; select bank0
  5301  0673  00A0               	movwf	??___ftpack
  5302  0674  01A1               	clrf	??___ftpack+1
  5303  0675  01A2               	clrf	??___ftpack+2
  5304  0676  3010               	movlw	16
  5305  0677                     u3275:	
  5306  0677  35A0               	lslf	??___ftpack,f
  5307  0678  0DA1               	rlf	??___ftpack+1,f
  5308  0679  0DA2               	rlf	??___ftpack+2,f
  5309  067A  0B89               	decfsz	9,f
  5310  067B  2E77               	goto	u3275
  5311  067C  0820               	movf	??___ftpack,w
  5312  067D  04F3               	iorwf	___ftpack@arg,f
  5313  067E  0821               	movf	??___ftpack+1,w
  5314  067F  04F4               	iorwf	___ftpack@arg+1,f
  5315  0680  0822               	movf	??___ftpack+2,w
  5316  0681  04F5               	iorwf	___ftpack@arg+2,f
  5317  0682  0877               	movf	___ftpack@sign,w
  5318  0683  1903               	btfsc	3,2
  5319  0684  0008               	return
  5320  0685  17F5               	bsf	___ftpack@arg+2,7
  5321  0686  0008               	return
  5322  0687                     __end_of___ftpack:	
  5323                           
  5324                           	psect	text25
  5325  05B5                     __ptext25:	
  5326 ;; *************** function _atoi *****************
  5327 ;; Defined at:
  5328 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\atoi.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  s               1    wreg     PTR const unsigned char 
  5331 ;;		 -> main@line(32), NULL(0), 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  5334 ;;		 -> main@line(32), NULL(0), 
  5335 ;;  a               2    7[BANK0 ] int 
  5336 ;;  sign            1    6[BANK0 ] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  2    2[BANK0 ] int 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5346 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;Total ram usage:        8 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    3
  5353 ;; This function calls:
  5354 ;;		___wmul
  5355 ;;		_isdigit
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           
  5362                           ;psect for function _atoi
  5363  05B5                     _atoi:	
  5364                           
  5365                           ;incstack = 0
  5366                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5367                           ;atoi@s stored from wreg
  5368  05B5  0020               	movlb	0	; select bank0
  5369  05B6  00A9               	movwf	atoi@s
  5370  05B7                     l3057:	
  5371  05B7  0829               	movf	atoi@s,w
  5372  05B8  0086               	movwf	6
  5373  05B9  0187               	clrf	7
  5374  05BA  3020               	movlw	32
  5375  05BB  0601               	xorwf	1,w
  5376  05BC  1D03               	btfss	3,2
  5377  05BD  2DC3               	goto	l3059
  5378  05BE                     l3055:	
  5379  05BE  3001               	movlw	1
  5380  05BF  00A4               	movwf	??_atoi
  5381  05C0  0824               	movf	??_atoi,w
  5382  05C1  07A9               	addwf	atoi@s,f
  5383  05C2  2DB7               	goto	l3057
  5384  05C3                     l3059:	
  5385  05C3  0829               	movf	atoi@s,w
  5386  05C4  0086               	movwf	6
  5387  05C5  0187               	clrf	7
  5388  05C6  3009               	movlw	9
  5389  05C7  0601               	xorwf	1,w
  5390  05C8  1903               	btfsc	3,2
  5391  05C9  2DBE               	goto	l3055
  5392  05CA  01A7               	clrf	atoi@a
  5393  05CB  01A8               	clrf	atoi@a+1
  5394  05CC  01A6               	clrf	atoi@sign
  5395  05CD  0829               	movf	atoi@s,w
  5396  05CE  0086               	movwf	6
  5397  05CF  0187               	clrf	7
  5398  05D0  302D               	movlw	45
  5399  05D1  0601               	xorwf	1,w
  5400  05D2  1D03               	btfss	3,2
  5401  05D3  2DD9               	goto	l3067
  5402  05D4  3001               	movlw	1
  5403  05D5  00A4               	movwf	??_atoi
  5404  05D6  0824               	movf	??_atoi,w
  5405  05D7  07A6               	addwf	atoi@sign,f
  5406  05D8  2DE0               	goto	l3073
  5407  05D9                     l3067:	
  5408  05D9  0829               	movf	atoi@s,w
  5409  05DA  0086               	movwf	6
  5410  05DB  0187               	clrf	7
  5411  05DC  302B               	movlw	43
  5412  05DD  0601               	xorwf	1,w
  5413  05DE  1D03               	btfss	3,2
  5414  05DF  2DE4               	goto	l3075
  5415  05E0                     l3073:	
  5416  05E0  3001               	movlw	1
  5417  05E1  00A4               	movwf	??_atoi
  5418  05E2  0824               	movf	??_atoi,w
  5419  05E3  07A9               	addwf	atoi@s,f
  5420  05E4                     l3075:	
  5421  05E4  0829               	movf	atoi@s,w
  5422  05E5  0086               	movwf	6
  5423  05E6  0187               	clrf	7
  5424  05E7  0801               	movf	1,w
  5425  05E8  318D  25FD  3185   	fcall	_isdigit
  5426  05EB  1C03               	btfss	3,0
  5427  05EC  2E0B               	goto	l3077
  5428  05ED  0020               	movlb	0	; select bank0
  5429  05EE  0828               	movf	atoi@a+1,w
  5430  05EF  00F4               	movwf	___wmul@multiplier+1
  5431  05F0  0827               	movf	atoi@a,w
  5432  05F1  00F3               	movwf	___wmul@multiplier
  5433  05F2  300A               	movlw	10
  5434  05F3  00F5               	movwf	___wmul@multiplicand
  5435  05F4  3000               	movlw	0
  5436  05F5  00F6               	movwf	___wmul@multiplicand+1
  5437  05F6  318E  2675  3185   	fcall	___wmul
  5438  05F9  0020               	movlb	0	; select bank0
  5439  05FA  0829               	movf	atoi@s,w
  5440  05FB  0086               	movwf	6
  5441  05FC  0187               	clrf	7
  5442  05FD  0801               	movf	1,w
  5443  05FE  0773               	addwf	?___wmul,w
  5444  05FF  00A4               	movwf	??_atoi
  5445  0600  0874               	movf	?___wmul+1,w
  5446  0601  1803               	skipnc
  5447  0602  0A74               	incf	?___wmul+1,w
  5448  0603  00A5               	movwf	??_atoi+1
  5449  0604  0824               	movf	??_atoi,w
  5450  0605  3ED0               	addlw	208
  5451  0606  00A7               	movwf	atoi@a
  5452  0607  30FF               	movlw	255
  5453  0608  3D25               	addwfc	??_atoi+1,w
  5454  0609  00A8               	movwf	atoi@a+1
  5455  060A  2DE0               	goto	l3073
  5456  060B                     l3077:	
  5457  060B  0020               	movlb	0	; select bank0
  5458  060C  0826               	movf	atoi@sign,w
  5459  060D  1903               	btfsc	3,2
  5460  060E  2E1B               	goto	l3083
  5461  060F  0927               	comf	atoi@a,w
  5462  0610  00A4               	movwf	??_atoi
  5463  0611  0928               	comf	atoi@a+1,w
  5464  0612  00A5               	movwf	??_atoi+1
  5465  0613  0AA4               	incf	??_atoi,f
  5466  0614  1903               	skipnz
  5467  0615  0AA5               	incf	??_atoi+1,f
  5468  0616  0824               	movf	??_atoi,w
  5469  0617  00A2               	movwf	?_atoi
  5470  0618  0825               	movf	??_atoi+1,w
  5471  0619  00A3               	movwf	?_atoi+1
  5472  061A  0008               	return
  5473  061B                     l3083:	
  5474  061B  0828               	movf	atoi@a+1,w
  5475  061C  00A3               	movwf	?_atoi+1
  5476  061D  0827               	movf	atoi@a,w
  5477  061E  00A2               	movwf	?_atoi
  5478  061F  0008               	return
  5479  0620                     __end_of_atoi:	
  5480                           
  5481                           	psect	text26
  5482  0DFD                     __ptext26:	
  5483 ;; *************** function _isdigit *****************
  5484 ;; Defined at:
  5485 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  c               1    wreg     unsigned char 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  c               1    4[COMMON] unsigned char 
  5490 ;; Return value:  Size  Location     Type
  5491 ;;		None               void
  5492 ;; Registers used:
  5493 ;;		wreg, status,2, status,0
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;Total ram usage:        2 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:    2
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_atoi
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           
  5514                           ;psect for function _isdigit
  5515  0DFD                     _isdigit:	
  5516                           
  5517                           ;incstack = 0
  5518                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5519                           ;isdigit@c stored from wreg
  5520  0DFD  00F4               	movwf	isdigit@c
  5521  0DFE  01F3               	clrf	_isdigit$445
  5522  0DFF  303A               	movlw	58
  5523  0E00  0274               	subwf	isdigit@c,w
  5524  0E01  1803               	skipnc
  5525  0E02  2E09               	goto	l2063
  5526  0E03  3030               	movlw	48
  5527  0E04  0274               	subwf	isdigit@c,w
  5528  0E05  1C03               	skipc
  5529  0E06  2E09               	goto	l2063
  5530  0E07  01F3               	clrf	_isdigit$445
  5531  0E08  0AF3               	incf	_isdigit$445,f
  5532  0E09                     l2063:	
  5533  0E09  0C73               	rrf	_isdigit$445,w
  5534  0E0A  0008               	return
  5535  0E0B                     __end_of_isdigit:	
  5536                           
  5537                           	psect	text27
  5538  0E75                     __ptext27:	
  5539 ;; *************** function ___wmul *****************
  5540 ;; Defined at:
  5541 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  multiplier      2    3[COMMON] unsigned int 
  5544 ;;  multiplicand    2    5[COMMON] unsigned int 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  product         2    0[BANK0 ] unsigned int 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  2    3[COMMON] unsigned int 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;Total ram usage:        6 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    2
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_step
  5567 ;;		_atoi
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           
  5572                           ;psect for function ___wmul
  5573  0E75                     ___wmul:	
  5574                           
  5575                           ;incstack = 0
  5576                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5577  0E75  0020               	movlb	0	; select bank0
  5578  0E76  01A0               	clrf	___wmul@product
  5579  0E77  01A1               	clrf	___wmul@product+1
  5580  0E78                     l2745:	
  5581  0E78  1C73               	btfss	___wmul@multiplier,0
  5582  0E79  2E7F               	goto	l361
  5583  0E7A  0875               	movf	___wmul@multiplicand,w
  5584  0E7B  0020               	movlb	0	; select bank0
  5585  0E7C  07A0               	addwf	___wmul@product,f
  5586  0E7D  0876               	movf	___wmul@multiplicand+1,w
  5587  0E7E  3DA1               	addwfc	___wmul@product+1,f
  5588  0E7F                     l361:	
  5589  0E7F  3001               	movlw	1
  5590  0E80                     u3755:	
  5591  0E80  35F5               	lslf	___wmul@multiplicand,f
  5592  0E81  0DF6               	rlf	___wmul@multiplicand+1,f
  5593  0E82  0B89               	decfsz	9,f
  5594  0E83  2E80               	goto	u3755
  5595  0E84  3001               	movlw	1
  5596  0E85                     u3765:	
  5597  0E85  36F4               	lsrf	___wmul@multiplier+1,f
  5598  0E86  0CF3               	rrf	___wmul@multiplier,f
  5599  0E87  0B89               	decfsz	9,f
  5600  0E88  2E85               	goto	u3765
  5601  0E89  0873               	movf	___wmul@multiplier,w
  5602  0E8A  0474               	iorwf	___wmul@multiplier+1,w
  5603  0E8B  1D03               	btfss	3,2
  5604  0E8C  2E78               	goto	l2745
  5605  0E8D  0020               	movlb	0	; select bank0
  5606  0E8E  0821               	movf	___wmul@product+1,w
  5607  0E8F  00F4               	movwf	?___wmul+1
  5608  0E90  0820               	movf	___wmul@product,w
  5609  0E91  00F3               	movwf	?___wmul
  5610  0E92  0008               	return
  5611  0E93                     __end_of___wmul:	
  5612                           
  5613                           	psect	intentry
  5614  0004                     __pintentry:	
  5615 ;; *************** function _isr *****************
  5616 ;; Defined at:
  5617 ;;		line 4 in file "interrupt.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;		None               void
  5624 ;; Registers used:
  5625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;Total ram usage:        1 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    1
  5638 ;; This function calls:
  5639 ;;		_receive_isr
  5640 ;; This function is called by:
  5641 ;;		Interrupt level 1
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645  0004                     _isr:	
  5646                           
  5647                           ;incstack = 0
  5648                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5649  0004  3180               	pagesel	$
  5650  0005  0020               	movlb	0	; select bank0
  5651  0006  087F               	movf	127,w
  5652  0007  00F2               	movwf	??_isr
  5653                           
  5654                           ;interrupt.c: 5: if(TMR0IF){
  5655  0008  190B               	btfsc	11,2	;volatile
  5656                           
  5657                           ;interrupt.c: 7: TMR0IF = 0;
  5658  0009  110B               	bcf	11,2	;volatile
  5659                           
  5660                           ;interrupt.c: 8: }
  5661                           ;interrupt.c: 9: if(RCIF){
  5662  000A  1E91               	btfss	17,5	;volatile
  5663  000B  2810               	goto	i1l11
  5664                           
  5665                           ;interrupt.c: 10: receive_isr();
  5666  000C  318E  2693         	fcall	_receive_isr
  5667                           
  5668                           ;interrupt.c: 11: RCIF = 0;
  5669  000E  0020               	movlb	0	; select bank0
  5670  000F  1291               	bcf	17,5	;volatile
  5671  0010                     i1l11:	
  5672  0010  0872               	movf	??_isr,w
  5673  0011  00FF               	movwf	127
  5674  0012  0009               	retfie
  5675  0013                     __end_of_isr:	
  5676                           
  5677                           	psect	text29
  5678  0E93                     __ptext29:	
  5679 ;; *************** function _receive_isr *****************
  5680 ;; Defined at:
  5681 ;;		line 120 in file "uart.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;		None
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  temp            1    1[COMMON] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;		None               void
  5688 ;; Registers used:
  5689 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;Total ram usage:        2 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_isr
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _receive_isr
  5710  0E93                     _receive_isr:	
  5711                           
  5712                           ;uart.c: 121: uint8_t temp;
  5713                           ;uart.c: 122: temp=RCREG;
  5714                           
  5715                           ;incstack = 0
  5716                           ; Regs used in _receive_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  5717  0E93  0023               	movlb	3	; select bank3
  5718  0E94  0819               	movf	25,w	;volatile
  5719  0E95  00F0               	movwf	??_receive_isr
  5720  0E96  0870               	movf	??_receive_isr,w
  5721  0E97  00F1               	movwf	receive_isr@temp
  5722                           
  5723                           ;uart.c: 123: if (rx_used<32) {
  5724  0E98  3020               	movlw	32
  5725  0E99  0020               	movlb	0	; select bank0
  5726  0E9A  0268               	subwf	_rx_used,w
  5727  0E9B  1803               	skipnc
  5728  0E9C  2EB0               	goto	i1l2099
  5729                           
  5730                           ;uart.c: 124: rxbuf[rx_in]=temp;
  5731  0E9D  0871               	movf	receive_isr@temp,w
  5732  0E9E  00F0               	movwf	??_receive_isr
  5733  0E9F  0878               	movf	_rx_in,w
  5734  0EA0  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  5735  0EA1  0086               	movwf	6
  5736  0EA2  3001               	movlw	1	; select bank3/4
  5737  0EA3  0087               	movwf	7
  5738  0EA4  0870               	movf	??_receive_isr,w
  5739  0EA5  0081               	movwf	1
  5740                           
  5741                           ;uart.c: 125: rx_in=(rx_in+1)%32;
  5742  0EA6  0878               	movf	_rx_in,w
  5743  0EA7  3E01               	addlw	1
  5744  0EA8  391F               	andlw	31
  5745  0EA9  00F0               	movwf	??_receive_isr
  5746  0EAA  0870               	movf	??_receive_isr,w
  5747  0EAB  00F8               	movwf	_rx_in
  5748                           
  5749                           ;uart.c: 126: rx_used++;
  5750  0EAC  3001               	movlw	1
  5751  0EAD  00F0               	movwf	??_receive_isr
  5752  0EAE  0870               	movf	??_receive_isr,w
  5753  0EAF  07E8               	addwf	_rx_used,f
  5754  0EB0                     i1l2099:	
  5755                           
  5756                           ;uart.c: 127: }
  5757                           ;uart.c: 128: RCIF=0;
  5758  0EB0  1291               	bcf	17,5	;volatile
  5759  0EB1  0008               	return
  5760  0EB2                     __end_of_receive_isr:	
  5761                           ;uart.c: 129: return;
  5762                           
  5763  007E                     btemp	set	126	;btemp
  5764  007E                     wtemp	set	126
  5765  007E                     wtemp0	set	126
  5766  0080                     wtemp1	set	128
  5767  0082                     wtemp2	set	130
  5768  0084                     wtemp3	set	132
  5769  0086                     wtemp4	set	134
  5770  0088                     wtemp5	set	136
  5771  007F                     wtemp6	set	127
  5772  007E                     ttemp	set	126
  5773  007E                     ttemp0	set	126
  5774  0081                     ttemp1	set	129
  5775  0084                     ttemp2	set	132
  5776  0087                     ttemp3	set	135
  5777  007F                     ttemp4	set	127
  5778  007E                     ltemp	set	126
  5779  007E                     ltemp0	set	126
  5780  0082                     ltemp1	set	130
  5781  0086                     ltemp2	set	134
  5782  0080                     ltemp3	set	128


Data Sizes:
    Strings     20
    Constant    3
    Data        64
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     70      76
    BANK1            80     72      72
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[6]), STR_1(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> ceil@expon(BANK0[2]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@val	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@title	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@it	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@argv	PTR unsigned char [4] size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__uart_get	PTR const unsigned char  size(1) Largest target is 32
		 -> NULL(NULL[0]), rxbuf(BANK3[32]), 

    sp__uart_gets	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    uart_gets@mem	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), 

    uart_gets@it	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 


Critical Paths under _main in COMMON

    _main->_strcmp
    _main->_strtok
    _uart_gets->_find
    _strspn->_strchr
    _strcspn->_strchr
    _uart_setup->_memset
    ___ftadd->___ftpack
    ___altoft->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _atoi->___wmul

Critical Paths under _isr in COMMON

    _isr->_receive_isr

Critical Paths under _main in BANK0

    _main->_left
    _main->_right
    _uart_gets->_find
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _uart_setup->_memset
    _right->_step
    _left->_step
    _step->_ceil
    _ceil->___altoft
    ___fttol->___ftdiv
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _atoi->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_left
    _main->_right

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   34421
                                              6 BANK1     66    66      0
                               _atoi
                               _left
                              _right
                              _setup
                             _strcmp
                             _strlen
                             _strtok
                          _uart_gets
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_gets                                            9     7      2     723
                                              6 COMMON     1     1      0
                                              5 BANK0      8     6      2
                               _find
 ---------------------------------------------------------------------------------
 (2) _find                                                 8     6      2     235
                                              3 COMMON     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _strtok                                               6     4      2    1699
                                              7 COMMON     1     1      0
                                             10 BANK0      5     3      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     612
                                              3 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     612
                                              3 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               7     3      4     384
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _strlen                                               8     6      2     190
                                              3 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2     411
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     297
                         _uart_setup
 ---------------------------------------------------------------------------------
 (2) _uart_setup                                           0     0      0     297
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     297
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _right                                               13     9      4   14494
                                             63 BANK0      7     3      4
                                              0 BANK1      6     6      0
                               _step
 ---------------------------------------------------------------------------------
 (1) _left                                                13     9      4   14494
                                             63 BANK0      7     3      4
                                              0 BANK1      6     6      0
                               _step
 ---------------------------------------------------------------------------------
 (2) _step                                                 7     5      2   14070
                                             56 BANK0      7     5      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                               _ceil
 ---------------------------------------------------------------------------------
 (3) _ceil                                                 9     6      3    7760
                                             47 BANK0      9     6      3
                           ___altoft
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___fttol
                             ___wmul (ARG)
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     428
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     501
                                             25 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     548
                                              3 COMMON     3     3      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3513
                                              3 BANK0     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2337
                                             39 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2618
                                              9 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2266
                                              3 BANK0      6     3      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2068
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2    1128
                                              2 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     696
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  1     1      0      23
                                              2 COMMON     1     1      0
                        _receive_isr
 ---------------------------------------------------------------------------------
 (7) _receive_isr                                          2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _left
     _step
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul
       _ceil
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
   _right
     _step
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul
       _ceil
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
   _setup
     _uart_setup
       _memset
   _strcmp
   _strlen
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr
   _uart_gets
     _find
   _uart_send

 _isr (ROOT)
   _receive_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     48      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Aug 11 10:35:19 2018

           ___altoft@exp 004D              __CFG_CP$OFF 0000            ___altoft@sign 004E  
    ___wmul@multiplicand 0075             ___ftadd@exp1 002F             ___ftadd@exp2 002E  
           ___ftadd@sign 002D                      l361 0E7F                      l177 0DF6  
                    l602 0247                      l554 0667                      l555 066F  
                    l547 0654                      l662 0516                      l828 0E24  
                    _GIE 005F                      _RA0 0060                      _RA1 0061  
                    _RB0 0068                      _RA2 0062                      _RB1 0069  
                    _RA3 0063                      _RB2 006A                      _RA4 0064  
                    _RC1 0071                      _RB3 006B                      _RA5 0065  
                    _RC2 0072                      _PS0 04A8                      _PS1 04A9  
                    _PS2 04AA             __CFG_CPD$OFF 0000                      _PSA 04AB  
                    _isr 0004             __CFG_BORV$HI 0000                      wreg 0009  
            main@address 00DA             __CFG_LVP$OFF 0000             ___ftdiv@cntr 0033  
           ___ftdiv@sign 0038                     l3001 03ED                     l3101 0092  
                   l2063 0E09                     l3015 0EB8                     l3031 06DE  
                   l3009 0362                     l3017 0EC3                     l3025 06D9  
                   l3125 00E8                     l3117 00C8                     l3055 05BE  
                   l3047 0716                     l3039 06F5                     l3151 0157  
                   l3143 012B                     l3135 0117                     l3073 05E0  
                   l3057 05B7                     l2521 063F                     l2513 0628  
                   l2601 0200                     l2281 0ED9                     l3049 0717  
                   l3145 0133                     l3083 061B                     l3075 05E4  
                   l3067 05D9                     l3059 05C3                     l2531 0659  
                   l2611 0222                     l2283 0EE1                     l3139 0123  
                   l3077 060B                     l2517 062F                     l2621 0243  
                   l2613 0226                     l2701 0527                     l3165 018B  
                   l3157 017B                     l2519 063A                     l2551 07B5  
                   l2607 0213                     l2711 0E5F                     l2287 0EF8  
                   l2529 0665                     l2553 07C5                     l2625 0259  
                   l2609 021D                     l2803 0487                     l2619 0239  
                   l2651 0FF1                     l2563 0F9A                     l2629 026B  
                   l2725 055A                     l2639 0286                     l2583 01D7  
                   l2647 0FDB                     l2745 0E78                     l2729 0562  
                   l2579 01D0                     l2739 05AD                     l2765 07E8  
                   l2781 042D                     l2589 01E6                     l2669 04C2  
                   l2775 0417                     l2695 050D                     l2687 04F2  
                   l2863 0F8B                     l2855 0F82                     l2951 06C3  
                   l2697 0519                     l2689 0500                     l2795 046E  
                   l2891 0F0C                     l2883 0F56                     l2859 0F87  
                   l2963 06CE                     l2877 0F32                     l2895 0F27  
                   l2879 0F3B                     l2889 0F03                     l2979 033C  
                   l2987 02B1                     ?_isr 0070                     STR_1 1013  
                   STR_2 1003                     STR_3 1003                     STR_4 100E  
                   STR_5 100E                     STR_6 1009                     _T0IE 005D  
                   _T0IF 005A                     _T0CS 04AD                     u4010 02EC  
                   u4100 033A                     u4005 02DA                     u3215 064F  
                   u4040 0306                     u4024 02EE                     u3305 07BA  
                   u3235 0660                     u4035 02F3                     u4220 03D1  
                   u4204 03B9                     u4070 0320                     u4054 0308  
                   u4215 03BE                     u4135 02C4                     u4160 039D  
                   u3425 0201                     u4145 0384                     u4065 030D  
                   u4250 03EB                     u4234 03D3                     u3275 0677  
                   u3195 0635                     u3515 023A                     u4155 038B  
                   u4084 0322                     u3605 04C9                     u4245 03D8  
                   u4190 03B7                     u4174 039F                     u3455 0214  
                   u4095 0327                     u4185 03A4                     i1l11 0010  
                   u3635 04F3                     _PEIE 005E                     u3485 0227  
                   u4285 0375                     u4525 0196                     u3815 043F  
                   u3825 044F                     u3665 050E                     u4537 0340  
                   u4465 0108                     u3755 0E80                     u3835 046F  
                   u4547 03F1                     u4475 011E                     _RCIE 048D  
                   _RCIF 008D                     u3765 0E85                     u3845 047E  
                   u3855 0488                     u3975 069F                     u3995 02D3  
                   _TMR0 0015                     _TXIE 048C                     _TXIF 008C  
           __CFG_WRT$OFF 0000                     _ceil 0530                     _find 0F5C  
                   _atoi 05B5                     _main 0034                     _left 034F  
           ___ftpack@arg 0073             ___ftpack@exp 0076                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     _step 0719  
                   btemp 007E                     ltemp 007E                     start 0013  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000             ___fttol@exp1 0046             ___fttol@lval 0042  
                  ??_isr 0072            __CFG_PLLEN$ON 0000                    ?_ceil 004F  
                  ?_find 0073                    ?_atoi 0022                    ?_main 0070  
                  ?_left 005F          __end_of___ftadd 029E            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 04A9                    ?_step 0058          __end_of___fttol 0530  
                  _RCREG 0199                    _RCSTA 019D                    _SPBRG 019B  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TXREG 019A                    _TXSTA 019E             main@mode_sel 00DE  
         __CFG_FCMEN$OFF 0000            ___awtoft@sign 0028                    ceil@i 0053  
                  ceil@x 004F                    _frexp 0F8E                    _errno 0066  
        __end_of_isdigit 0E0B                    _right 029E            ___ftpack@sign 0077  
                  atoi@a 0027                    _setup 0E0B                    atoi@s 0029  
                  _rx_in 0078                    _rxbuf 01C0                    main@i 00E2  
                  _tx_in 0069                    _txbuf 01A0                    left@i 00A4  
                  left@k 00A2           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  step@a 005D                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __end_of_strcspn 0F2D  
           ?_receive_isr 0070          __initialization 0015             __end_of_ceil 05B5  
           __end_of_find 0F8E             __end_of_atoi 0620             __end_of_main 01A8  
           __end_of_left 0400       _step_pattern_right 0140             __end_of_step 0760  
                 ??_ceil 0052                   ??_find 0075                   ??_atoi 0024  
                 ??_main 00A6                   ??_left 0063            ___fttol@sign1 0041  
                 ??_step 0078                   ?_frexp 0073         __end_of___altoft 07DD  
                 ?_right 005F                   ?_setup 0070         __end_of___awtoft 07FF  
                 _ANSELA 018C                   _ANSELB 018D         __end_of___ftpack 0687  
                 i1l2099 0EB0                   _OSCCON 0099                   _TMR0IF 005A  
         __CFG_PWRTE$OFF 0000                   ___ftge 0FC4                   ___wmul 0E75  
              ??___ftadd 0029           __CFG_STVREN$ON 0000                ??___ftdiv 002F  
              ??___fttol 003D                   _memset 0E59                   find@it 0023  
                 _rx_out 0079                   main@it 00DF                   _strchr 0E24  
                 _strcmp 0ED7                   _tx_out 007A                   _strlen 0EB2  
                 _strtok 06D0                   _strspn 0F2D                ??_isdigit 0073  
                 right@i 00A4                   right@k 00A2                ??_strcspn 0025  
__end_of__initialization 0031               ___altoft@c 0047               ___ftadd@f1 0023  
             ___ftadd@f2 0026               ___ftge@ff1 0020               ___ftge@ff2 0023  
             ___ftdiv@f1 002C               ___ftdiv@f2 0029               ___ftdiv@f3 0034  
             ___awtoft@c 0023               ___fttol@f1 0039           __pcstackCOMMON 0070  
           __pidataBANK2 0760            __end_of_frexp 0FC4            __end_of_right 034F  
          __end_of_setup 0E24                  ??_frexp 0020                  ??_right 0063  
                ??_setup 0078               __pbssBANK0 0066               __pbssBANK3 01A0  
        __CFG_VCAPEN$OFF 0000               __pmaintext 0034     __size_of_receive_isr 001F  
                ?___ftge 0020                  ?___wmul 0073               __pintentry 0004  
              ?___altoft 0047                  ?_memset 0073                ?___awtoft 0023  
              ?___ftpack 0073                  ?_strchr 0073                  ?_strcmp 0073  
                ?_strlen 0073                  ?_strtok 002A                  ?_strspn 0023  
     __size_of_uart_gets 0049       __size_of_uart_send 0008          __size_of___ftge 003C  
                ___ftadd 01A8                  ___ftdiv 0400          __size_of___wmul 001E  
                ___fttol 04A9               ??___altoft 004B               ??___awtoft 0026  
             ??___ftpack 0020          __size_of_memset 001C                  __ptext1 0DF5  
                __ptext2 0687                  __ptext3 0F5C                  __ptext4 06D0  
                __ptext5 0F2D                  __ptext6 0EFE                  __ptext7 0E24  
                __ptext8 0EB2                  __ptext9 0ED7          __size_of_strchr 001A  
        __size_of_strcmp 0027          __size_of_strlen 0025          __size_of_strtok 0049  
        __size_of_strspn 002F                  _isdigit 0DFD             __size_of_isr 000F  
                find@idx 0024                  _rx_used 0068                  main@len 00DC  
                clrloop0 0DF0                  main@val 00E7                  _tx_used 006A  
                _strcspn 0EFE                  left@mal 005F     end_of_initialization 0031  
                init_ram 0DE9                  memset@c 0073                  memset@n 0075  
                memset@p 0021                  initloop 0DEA        __end_of_uart_gets 06D0  
      __end_of_uart_send 0DFD                  step@deg 0058             __pstringtext 1000  
            uart_gets@it 0029                  strcmp@r 0076                  strlen@s 0075  
             _uart_setup 0E3E                  strspn@i 0027         __CFG_FOSC$INTOSC 0000  
            ___ftdiv@exp 0037               main@tokens 1000           __end_of___ftge 1000  
         __end_of___wmul 0E93           __end_of_memset 0E75           __end_of_strchr 0E3E  
         __end_of_strcmp 0EFE           __end_of_strlen 0ED7           __end_of_strtok 0719  
         __end_of_strspn 0F5C      start_initialization 0015        _step_pattern_left 0120  
            __end_of_isr 0013               frexp@value 0073                 ??___ftge 0073  
               ??___wmul 0077              __pdataBANK2 0120          receive_isr@temp 0071  
               ??_memset 0077              ?_uart_setup 0070                 ??_strchr 0020  
               ??_strcmp 0075                 ??_strlen 0020                 ??_strtok 002C  
               ??_strspn 0025        __size_of___altoft 003D        __size_of___awtoft 0022  
      __size_of___ftpack 0067              __pbssCOMMON 0078                ___latbits 0003  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            ??_receive_isr 0070  
               ?___ftadd 0023                 ?___ftdiv 0029                 ?___fttol 0039  
             right@speed 0061               right@pluse 00A0                ceil@expon 0056  
               ?_isdigit 0070           __size_of_frexp 0036                 ?_strcspn 0023  
         __size_of_right 00B1           __size_of_setup 0019      __size_of_uart_setup 001B  
         ___wmul@product 0020                clear_ram0 0DEF                _uart_gets 0687  
              _uart_send 0DF5      __end_of_receive_isr 0EB2        ___wmul@multiplier 0073  
              main@title 00E4                left@speed 0061                left@pluse 00A0  
              frexp@eptr 0076               ?_uart_gets 0025               ?_uart_send 0070  
       __size_of___ftadd 00F6         __size_of___ftdiv 00A9                 ___altoft 07A0  
       __size_of___fttol 0087                 ___awtoft 07DD                 ___ftpack 0620  
            _isdigit$445 0073         __size_of_isdigit 000E                 __ptext10 0E0B  
               __ptext11 0E3E                 __ptext20 01A8                 __ptext12 0E59  
               __ptext21 07A0                 __ptext13 029E                 __ptext22 0400  
               __ptext14 034F                 __ptext23 07DD                 __ptext15 0719  
               __ptext24 0620                 __ptext16 0530                 __ptext25 05B5  
               __ptext17 0F8E                 __ptext26 0DFD                 __ptext18 04A9  
               __ptext27 0E75                 __ptext19 0FC4                 __ptext29 0E93  
       __size_of_strcspn 002F            __size_of_ceil 0085            __size_of_find 0032  
          __size_of_atoi 006B            __size_of_main 0174            __size_of_left 00B1  
          __size_of_step 0047              _receive_isr 0E93                 _step$732 005A  
               find@tail 0020                 find@size 0021                 atoi@sign 0026  
               main@addr 00E0                 main@argc 00E5                 main@argv 00D6  
           ??_uart_setup 0078                 main@line 00B6                 isdigit@c 0074  
               memset@p1 0020                 intlevel1 0000                strchr@chr 0075  
          uart_gets@tail 0027                strchr@ptr 0073            uart_gets@size 0025  
               right@mal 005F        __CFG_CLKOUTEN$OFF 0000       __end_of_uart_setup 0E59  
              strcspn@s1 0029                strcspn@s2 0023              ??_uart_gets 0076  
            ??_uart_send 0073            uart_send@data 0073             uart_gets@idx 002C  
           uart_gets@mem 0028                 strcmp@s1 0077                 strcmp@s2 0073  
           uart_gets@pos 002A                 strlen@cp 0076                 strcspn@i 0027  
               strtok@s1 0077                 strtok@s2 002A                 strspn@s1 0029  
               strspn@s2 0023                 strtok@sp 006B       __end_ofmain@tokens 1003  
