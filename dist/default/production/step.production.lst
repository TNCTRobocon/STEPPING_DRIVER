

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Aug 16 12:38:34 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1938
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0090                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0093                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  0110                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011B                     	;# 
   110  011D                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0191                     	;# 
   114  0191                     	;# 
   115  0192                     	;# 
   116  0193                     	;# 
   117  0193                     	;# 
   118  0193                     	;# 
   119  0194                     	;# 
   120  0195                     	;# 
   121  0196                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019B                     	;# 
   125  019B                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  019C                     	;# 
   130  019D                     	;# 
   131  019E                     	;# 
   132  019F                     	;# 
   133  020D                     	;# 
   134  0210                     	;# 
   135  0211                     	;# 
   136  0212                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029C                     	;# 
   157  029C                     	;# 
   158  029D                     	;# 
   159  029E                     	;# 
   160  029F                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0314                     	;# 
   166  0315                     	;# 
   167  0315                     	;# 
   168  0316                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  0394                     	;# 
   178  0395                     	;# 
   179  0396                     	;# 
   180  0415                     	;# 
   181  0416                     	;# 
   182  0417                     	;# 
   183  041C                     	;# 
   184  041D                     	;# 
   185  041E                     	;# 
   186  0791                     	;# 
   187  0792                     	;# 
   188  0793                     	;# 
   189  0794                     	;# 
   190  0795                     	;# 
   191  0798                     	;# 
   192  0799                     	;# 
   193  07A0                     	;# 
   194  07A1                     	;# 
   195  07A3                     	;# 
   196  07A4                     	;# 
   197  07A6                     	;# 
   198  07A7                     	;# 
   199  07A9                     	;# 
   200  07AA                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0095                     	;# 
   250  0096                     	;# 
   251  0097                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009A                     	;# 
   255  009B                     	;# 
   256  009B                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  0110                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019C                     	;# 
   295  019D                     	;# 
   296  019E                     	;# 
   297  019F                     	;# 
   298  020D                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0217                     	;# 
   308  0291                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029C                     	;# 
   323  029D                     	;# 
   324  029E                     	;# 
   325  029F                     	;# 
   326  0311                     	;# 
   327  0311                     	;# 
   328  0312                     	;# 
   329  0313                     	;# 
   330  0314                     	;# 
   331  0315                     	;# 
   332  0315                     	;# 
   333  0316                     	;# 
   334  0318                     	;# 
   335  0318                     	;# 
   336  0319                     	;# 
   337  031A                     	;# 
   338  031C                     	;# 
   339  031C                     	;# 
   340  031D                     	;# 
   341  031E                     	;# 
   342  0394                     	;# 
   343  0395                     	;# 
   344  0396                     	;# 
   345  0415                     	;# 
   346  0416                     	;# 
   347  0417                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  0791                     	;# 
   352  0792                     	;# 
   353  0793                     	;# 
   354  0794                     	;# 
   355  0795                     	;# 
   356  0798                     	;# 
   357  0799                     	;# 
   358  07A0                     	;# 
   359  07A1                     	;# 
   360  07A3                     	;# 
   361  07A4                     	;# 
   362  07A6                     	;# 
   363  07A7                     	;# 
   364  07A9                     	;# 
   365  07AA                     	;# 
   366  0FE4                     	;# 
   367  0FE5                     	;# 
   368  0FE6                     	;# 
   369  0FE7                     	;# 
   370  0FE8                     	;# 
   371  0FE9                     	;# 
   372  0FEA                     	;# 
   373  0FEB                     	;# 
   374  0FED                     	;# 
   375  0FEE                     	;# 
   376  0FEF                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0095                     	;# 
   415  0096                     	;# 
   416  0097                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009A                     	;# 
   420  009B                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  0110                     	;# 
   429  0111                     	;# 
   430  0112                     	;# 
   431  0113                     	;# 
   432  0114                     	;# 
   433  0115                     	;# 
   434  0116                     	;# 
   435  0117                     	;# 
   436  0118                     	;# 
   437  0119                     	;# 
   438  011A                     	;# 
   439  011B                     	;# 
   440  011D                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0191                     	;# 
   444  0191                     	;# 
   445  0192                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0193                     	;# 
   449  0194                     	;# 
   450  0195                     	;# 
   451  0196                     	;# 
   452  0199                     	;# 
   453  019A                     	;# 
   454  019B                     	;# 
   455  019B                     	;# 
   456  019B                     	;# 
   457  019B                     	;# 
   458  019C                     	;# 
   459  019C                     	;# 
   460  019D                     	;# 
   461  019E                     	;# 
   462  019F                     	;# 
   463  020D                     	;# 
   464  0210                     	;# 
   465  0211                     	;# 
   466  0212                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0215                     	;# 
   470  0215                     	;# 
   471  0216                     	;# 
   472  0217                     	;# 
   473  0291                     	;# 
   474  0291                     	;# 
   475  0292                     	;# 
   476  0293                     	;# 
   477  0294                     	;# 
   478  0295                     	;# 
   479  0295                     	;# 
   480  0296                     	;# 
   481  0298                     	;# 
   482  0298                     	;# 
   483  0299                     	;# 
   484  029A                     	;# 
   485  029B                     	;# 
   486  029C                     	;# 
   487  029C                     	;# 
   488  029D                     	;# 
   489  029E                     	;# 
   490  029F                     	;# 
   491  0311                     	;# 
   492  0311                     	;# 
   493  0312                     	;# 
   494  0313                     	;# 
   495  0314                     	;# 
   496  0315                     	;# 
   497  0315                     	;# 
   498  0316                     	;# 
   499  0318                     	;# 
   500  0318                     	;# 
   501  0319                     	;# 
   502  031A                     	;# 
   503  031C                     	;# 
   504  031C                     	;# 
   505  031D                     	;# 
   506  031E                     	;# 
   507  0394                     	;# 
   508  0395                     	;# 
   509  0396                     	;# 
   510  0415                     	;# 
   511  0416                     	;# 
   512  0417                     	;# 
   513  041C                     	;# 
   514  041D                     	;# 
   515  041E                     	;# 
   516  0791                     	;# 
   517  0792                     	;# 
   518  0793                     	;# 
   519  0794                     	;# 
   520  0795                     	;# 
   521  0798                     	;# 
   522  0799                     	;# 
   523  07A0                     	;# 
   524  07A1                     	;# 
   525  07A3                     	;# 
   526  07A4                     	;# 
   527  07A6                     	;# 
   528  07A7                     	;# 
   529  07A9                     	;# 
   530  07AA                     	;# 
   531  0FE4                     	;# 
   532  0FE5                     	;# 
   533  0FE6                     	;# 
   534  0FE7                     	;# 
   535  0FE8                     	;# 
   536  0FE9                     	;# 
   537  0FEA                     	;# 
   538  0FEB                     	;# 
   539  0FED                     	;# 
   540  0FEE                     	;# 
   541  0FEF                     	;# 
   542  0000                     	;# 
   543  0001                     	;# 
   544  0002                     	;# 
   545  0003                     	;# 
   546  0004                     	;# 
   547  0005                     	;# 
   548  0006                     	;# 
   549  0007                     	;# 
   550  0008                     	;# 
   551  0009                     	;# 
   552  000A                     	;# 
   553  000B                     	;# 
   554  000C                     	;# 
   555  000D                     	;# 
   556  000E                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  008C                     	;# 
   573  008D                     	;# 
   574  008E                     	;# 
   575  0090                     	;# 
   576  0091                     	;# 
   577  0092                     	;# 
   578  0093                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  010E                     	;# 
   593  0110                     	;# 
   594  0111                     	;# 
   595  0112                     	;# 
   596  0113                     	;# 
   597  0114                     	;# 
   598  0115                     	;# 
   599  0116                     	;# 
   600  0117                     	;# 
   601  0118                     	;# 
   602  0119                     	;# 
   603  011A                     	;# 
   604  011B                     	;# 
   605  011D                     	;# 
   606  018C                     	;# 
   607  018D                     	;# 
   608  0191                     	;# 
   609  0191                     	;# 
   610  0192                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0193                     	;# 
   614  0194                     	;# 
   615  0195                     	;# 
   616  0196                     	;# 
   617  0199                     	;# 
   618  019A                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019C                     	;# 
   624  019C                     	;# 
   625  019D                     	;# 
   626  019E                     	;# 
   627  019F                     	;# 
   628  020D                     	;# 
   629  0210                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0213                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0216                     	;# 
   637  0217                     	;# 
   638  0291                     	;# 
   639  0291                     	;# 
   640  0292                     	;# 
   641  0293                     	;# 
   642  0294                     	;# 
   643  0295                     	;# 
   644  0295                     	;# 
   645  0296                     	;# 
   646  0298                     	;# 
   647  0298                     	;# 
   648  0299                     	;# 
   649  029A                     	;# 
   650  029B                     	;# 
   651  029C                     	;# 
   652  029C                     	;# 
   653  029D                     	;# 
   654  029E                     	;# 
   655  029F                     	;# 
   656  0311                     	;# 
   657  0311                     	;# 
   658  0312                     	;# 
   659  0313                     	;# 
   660  0314                     	;# 
   661  0315                     	;# 
   662  0315                     	;# 
   663  0316                     	;# 
   664  0318                     	;# 
   665  0318                     	;# 
   666  0319                     	;# 
   667  031A                     	;# 
   668  031C                     	;# 
   669  031C                     	;# 
   670  031D                     	;# 
   671  031E                     	;# 
   672  0394                     	;# 
   673  0395                     	;# 
   674  0396                     	;# 
   675  0415                     	;# 
   676  0416                     	;# 
   677  0417                     	;# 
   678  041C                     	;# 
   679  041D                     	;# 
   680  041E                     	;# 
   681  0791                     	;# 
   682  0792                     	;# 
   683  0793                     	;# 
   684  0794                     	;# 
   685  0795                     	;# 
   686  0798                     	;# 
   687  0799                     	;# 
   688  07A0                     	;# 
   689  07A1                     	;# 
   690  07A3                     	;# 
   691  07A4                     	;# 
   692  07A6                     	;# 
   693  07A7                     	;# 
   694  07A9                     	;# 
   695  07AA                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  000E                     	;# 
   722  0010                     	;# 
   723  0011                     	;# 
   724  0012                     	;# 
   725  0013                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  008E                     	;# 
   740  0090                     	;# 
   741  0091                     	;# 
   742  0092                     	;# 
   743  0093                     	;# 
   744  0095                     	;# 
   745  0096                     	;# 
   746  0097                     	;# 
   747  0098                     	;# 
   748  0099                     	;# 
   749  009A                     	;# 
   750  009B                     	;# 
   751  009B                     	;# 
   752  009C                     	;# 
   753  009D                     	;# 
   754  009E                     	;# 
   755  010C                     	;# 
   756  010D                     	;# 
   757  010E                     	;# 
   758  0110                     	;# 
   759  0111                     	;# 
   760  0112                     	;# 
   761  0113                     	;# 
   762  0114                     	;# 
   763  0115                     	;# 
   764  0116                     	;# 
   765  0117                     	;# 
   766  0118                     	;# 
   767  0119                     	;# 
   768  011A                     	;# 
   769  011B                     	;# 
   770  011D                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  0191                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0193                     	;# 
   777  0193                     	;# 
   778  0193                     	;# 
   779  0194                     	;# 
   780  0195                     	;# 
   781  0196                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019C                     	;# 
   789  019C                     	;# 
   790  019D                     	;# 
   791  019E                     	;# 
   792  019F                     	;# 
   793  020D                     	;# 
   794  0210                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0217                     	;# 
   803  0291                     	;# 
   804  0291                     	;# 
   805  0292                     	;# 
   806  0293                     	;# 
   807  0294                     	;# 
   808  0295                     	;# 
   809  0295                     	;# 
   810  0296                     	;# 
   811  0298                     	;# 
   812  0298                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029B                     	;# 
   816  029C                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  029E                     	;# 
   820  029F                     	;# 
   821  0311                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0315                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0318                     	;# 
   830  0318                     	;# 
   831  0319                     	;# 
   832  031A                     	;# 
   833  031C                     	;# 
   834  031C                     	;# 
   835  031D                     	;# 
   836  031E                     	;# 
   837  0394                     	;# 
   838  0395                     	;# 
   839  0396                     	;# 
   840  0415                     	;# 
   841  0416                     	;# 
   842  0417                     	;# 
   843  041C                     	;# 
   844  041D                     	;# 
   845  041E                     	;# 
   846  0791                     	;# 
   847  0792                     	;# 
   848  0793                     	;# 
   849  0794                     	;# 
   850  0795                     	;# 
   851  0798                     	;# 
   852  0799                     	;# 
   853  07A0                     	;# 
   854  07A1                     	;# 
   855  07A3                     	;# 
   856  07A4                     	;# 
   857  07A6                     	;# 
   858  07A7                     	;# 
   859  07A9                     	;# 
   860  07AA                     	;# 
   861  0FE4                     	;# 
   862  0FE5                     	;# 
   863  0FE6                     	;# 
   864  0FE7                     	;# 
   865  0FE8                     	;# 
   866  0FE9                     	;# 
   867  0FEA                     	;# 
   868  0FEB                     	;# 
   869  0FED                     	;# 
   870  0FEE                     	;# 
   871  0FEF                     	;# 
   872                           
   873                           	psect	idataBANK2
   874  0755                     __pidataBANK2:	
   875                           
   876                           ;initializer for _step_pattern_left
   877  0755  3400               	retlw	0
   878  0756  3400               	retlw	0
   879  0757  3400               	retlw	0
   880  0758  3400               	retlw	0
   881  0759  3400               	retlw	0
   882  075A  3400               	retlw	0
   883  075B  3401               	retlw	1
   884  075C  3400               	retlw	0
   885  075D  3400               	retlw	0
   886  075E  3400               	retlw	0
   887  075F  3401               	retlw	1
   888  0760  3400               	retlw	0
   889  0761  3400               	retlw	0
   890  0762  3400               	retlw	0
   891  0763  3400               	retlw	0
   892  0764  3400               	retlw	0
   893  0765  3400               	retlw	0
   894  0766  3400               	retlw	0
   895  0767  3400               	retlw	0
   896  0768  3400               	retlw	0
   897  0769  3401               	retlw	1
   898  076A  3400               	retlw	0
   899  076B  3400               	retlw	0
   900  076C  3400               	retlw	0
   901  076D  3401               	retlw	1
   902  076E  3400               	retlw	0
   903  076F  3400               	retlw	0
   904  0770  3400               	retlw	0
   905  0771  3400               	retlw	0
   906  0772  3400               	retlw	0
   907  0773  3400               	retlw	0
   908  0774  3400               	retlw	0
   909                           
   910                           ;initializer for _step_pattern_right
   911  0775  3400               	retlw	0
   912  0776  3400               	retlw	0
   913  0777  3401               	retlw	1
   914  0778  3400               	retlw	0
   915  0779  3400               	retlw	0
   916  077A  3400               	retlw	0
   917  077B  3400               	retlw	0
   918  077C  3400               	retlw	0
   919  077D  3400               	retlw	0
   920  077E  3400               	retlw	0
   921  077F  3400               	retlw	0
   922  0780  3400               	retlw	0
   923  0781  3400               	retlw	0
   924  0782  3400               	retlw	0
   925  0783  3401               	retlw	1
   926  0784  3400               	retlw	0
   927  0785  3401               	retlw	1
   928  0786  3400               	retlw	0
   929  0787  3400               	retlw	0
   930  0788  3400               	retlw	0
   931  0789  3400               	retlw	0
   932  078A  3400               	retlw	0
   933  078B  3400               	retlw	0
   934  078C  3400               	retlw	0
   935  078D  3400               	retlw	0
   936  078E  3400               	retlw	0
   937  078F  3400               	retlw	0
   938  0790  3400               	retlw	0
   939  0791  3401               	retlw	1
   940  0792  3400               	retlw	0
   941  0793  3400               	retlw	0
   942  0794  3400               	retlw	0
   943                           
   944                           	psect	stringtext
   945  1000                     __pstringtext:	
   946  1000                     main@tokens:	
   947  1000  3420               	retlw	32
   948  1001  342C               	retlw	44
   949  1002  3400               	retlw	0
   950  1003                     __end_ofmain@tokens:	
   951  005F                     _GIE	set	95
   952  005E                     _PEIE	set	94
   953  0060                     _RA0	set	96
   954  0061                     _RA1	set	97
   955  0062                     _RA2	set	98
   956  0063                     _RA3	set	99
   957  0064                     _RA4	set	100
   958  0065                     _RA5	set	101
   959  0068                     _RB0	set	104
   960  0069                     _RB1	set	105
   961  006A                     _RB2	set	106
   962  006B                     _RB3	set	107
   963  0071                     _RC1	set	113
   964  0072                     _RC2	set	114
   965  008D                     _RCIF	set	141
   966  005A                     _TMR0IF	set	90
   967  008C                     _TXIF	set	140
   968  0099                     _OSCCON	set	153
   969  008C                     _TRISA	set	140
   970  008D                     _TRISB	set	141
   971  008E                     _TRISC	set	142
   972  04D6                     _PLLR	set	1238
   973  048D                     _RCIE	set	1165
   974  048C                     _TXIE	set	1164
   975  018C                     _ANSELA	set	396
   976  018D                     _ANSELB	set	397
   977  0199                     _RCREG	set	409
   978  019D                     _RCSTA	set	413
   979  019B                     _SPBRG	set	411
   980  019A                     _TXREG	set	410
   981  019E                     _TXSTA	set	414
   982  1003                     STR_2:	
   983  1003  3472               	retlw	114	;'r'
   984  1004  3469               	retlw	105	;'i'
   985  1005  3467               	retlw	103	;'g'
   986  1006  3468               	retlw	104	;'h'
   987  1007  3474               	retlw	116	;'t'
   988  1008  3400               	retlw	0
   989  1009                     STR_6:	
   990  1009  3465               	retlw	101	;'e'
   991  100A  3463               	retlw	99	;'c'
   992  100B  3468               	retlw	104	;'h'
   993  100C  346F               	retlw	111	;'o'
   994  100D  3400               	retlw	0
   995  100E                     STR_4:	
   996  100E  346C               	retlw	108	;'l'
   997  100F  3465               	retlw	101	;'e'
   998  1010  3466               	retlw	102	;'f'
   999  1011  3474               	retlw	116	;'t'
  1000  1012  3400               	retlw	0
  1001  1013                     STR_1:	
  1002  1013  3473               	retlw	115	;'s'
  1003  1014  3465               	retlw	101	;'e'
  1004  1015  346C               	retlw	108	;'l'
  1005  1016  3400               	retlw	0
  1006  100E                     
  1007                           ; #config settings
  1008  0000                     
  1009                           	psect	cinit
  1010  0017                     start_initialization:	
  1011  0017                     __initialization:	
  1012                           
  1013                           ; Clear objects allocated to COMMON
  1014  0017  01F8               	clrf	__pbssCOMMON& (0+127)
  1015  0018  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1016  0019  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1017                           
  1018                           ; Clear objects allocated to BANK0
  1019  001A  01E6               	clrf	__pbssBANK0& (0+127)
  1020  001B  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  1021  001C  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  1022  001D  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  1023  001E  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  1024  001F  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  1025                           
  1026                           ; Clear objects allocated to BANK3
  1027  0020  30A0               	movlw	low __pbssBANK3
  1028  0021  0084               	movwf	4
  1029  0022  3001               	movlw	high __pbssBANK3
  1030  0023  0085               	movwf	5
  1031  0024  3040               	movlw	64
  1032  0025  3187  27F9  3180   	fcall	clear_ram0
  1033                           
  1034                           ; Initialize objects allocated to BANK2
  1035  0028  3055               	movlw	low __pidataBANK2
  1036  0029  0084               	movwf	4
  1037  002A  3087               	movlw	(high __pidataBANK2)| (0+128)
  1038  002B  0085               	movwf	5
  1039  002C  3020               	movlw	low __pdataBANK2
  1040  002D  0086               	movwf	6
  1041  002E  3001               	movlw	high __pdataBANK2
  1042  002F  0087               	movwf	7
  1043  0030  3040               	movlw	64
  1044  0031  318D  25FA         	fcall	init_ram
  1045  0033                     end_of_initialization:	
  1046                           ;End of C runtime variable initialization code
  1047                           
  1048  0033                     __end_of__initialization:	
  1049  0033  0020               	movlb	0
  1050  0034  3180  2836         	ljmp	_main	;jump to C main() function
  1051                           
  1052                           	psect	bssCOMMON
  1053  0078                     __pbssCOMMON:	
  1054  0078                     _rx_in:	
  1055  0078                     	ds	1
  1056  0079                     _rx_out:	
  1057  0079                     	ds	1
  1058  007A                     _tx_out:	
  1059  007A                     	ds	1
  1060                           
  1061                           	psect	bssBANK0
  1062  0066                     __pbssBANK0:	
  1063  0066                     _errno:	
  1064  0066                     	ds	2
  1065  0068                     _rx_used:	
  1066  0068                     	ds	1
  1067  0069                     _tx_in:	
  1068  0069                     	ds	1
  1069  006A                     _tx_used:	
  1070  006A                     	ds	1
  1071  006B                     strtok@sp:	
  1072  006B                     	ds	1
  1073                           
  1074                           	psect	dataBANK2
  1075  0120                     __pdataBANK2:	
  1076  0120                     _step_pattern_left:	
  1077  0120                     	ds	32
  1078  0140                     _step_pattern_right:	
  1079  0140                     	ds	32
  1080                           
  1081                           	psect	bssBANK3
  1082  01A0                     __pbssBANK3:	
  1083  01A0                     _txbuf:	
  1084  01A0                     	ds	32
  1085  01C0                     _rxbuf:	
  1086  01C0                     	ds	32
  1087                           
  1088                           	psect	clrtext
  1089  07F9                     clear_ram0:	
  1090                           ;	Called with FSR0 containing the base address, and
  1091                           ;	WREG with the size to clear
  1092                           
  1093  07F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1094  07FA                     clrloop0:	
  1095  07FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1096  07FB  3101               	addfsr 0,1
  1097  07FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1098  07FD  2FFA               	goto	clrloop0	;have we reached the end yet?
  1099  07FE  3400               	retlw	0	;all done for this memory range, return
  1100                           
  1101                           	psect	inittext
  1102  0DFA                     init_ram:	
  1103  0DFA  00FE               	movwf	126
  1104  0DFB                     initloop:	
  1105  0DFB  0012               	moviw fsr0++
  1106  0DFC  001E               	movwi fsr1++
  1107  0DFD  0BFE               	decfsz	126,f
  1108  0DFE  2DFB               	goto	initloop
  1109  0DFF  3400               	retlw	0
  1110                           
  1111                           	psect	cstackBANK1
  1112  00A0                     __pcstackBANK1:	
  1113  00A0                     right@pluse:	
  1114  00A0                     left@pluse:	
  1115                           ; 2 bytes @ 0x0
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x0
  1119  00A0                     	ds	2
  1120  00A2                     right@k:	
  1121  00A2                     left@k:	
  1122                           ; 2 bytes @ 0x2
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x2
  1126  00A2                     	ds	2
  1127  00A4                     right@i:	
  1128  00A4                     left@i:	
  1129                           ; 2 bytes @ 0x4
  1130                           
  1131                           
  1132                           ; 2 bytes @ 0x4
  1133  00A4                     	ds	2
  1134  00A6                     ??_main:	
  1135                           
  1136                           ; 0 bytes @ 0x6
  1137  00A6                     	ds	12
  1138  00B2                     main@line:	
  1139                           
  1140                           ; 32 bytes @ 0x12
  1141  00B2                     	ds	32
  1142  00D2                     main@argv:	
  1143                           
  1144                           ; 4 bytes @ 0x32
  1145  00D2                     	ds	4
  1146  00D6                     main@address:	
  1147                           
  1148                           ; 2 bytes @ 0x36
  1149  00D6                     	ds	2
  1150  00D8                     main@len:	
  1151                           
  1152                           ; 2 bytes @ 0x38
  1153  00D8                     	ds	2
  1154  00DA                     main@mode_sel:	
  1155                           
  1156                           ; 1 bytes @ 0x3A
  1157  00DA                     	ds	1
  1158  00DB                     main@it:	
  1159                           
  1160                           ; 1 bytes @ 0x3B
  1161  00DB                     	ds	1
  1162  00DC                     main@addr:	
  1163                           
  1164                           ; 2 bytes @ 0x3C
  1165  00DC                     	ds	2
  1166  00DE                     main@i:	
  1167                           
  1168                           ; 2 bytes @ 0x3E
  1169  00DE                     	ds	2
  1170  00E0                     main@title:	
  1171                           
  1172                           ; 1 bytes @ 0x40
  1173  00E0                     	ds	1
  1174  00E1                     main@argc:	
  1175                           
  1176                           ; 2 bytes @ 0x41
  1177  00E1                     	ds	2
  1178  00E3                     main@val:	
  1179                           
  1180                           ; 1 bytes @ 0x43
  1181  00E3                     	ds	1
  1182                           
  1183                           	psect	cstackCOMMON
  1184  0070                     __pcstackCOMMON:	
  1185  0070                     ?_receive_isr:	
  1186  0070                     ??_receive_isr:	
  1187                           ; 0 bytes @ 0x0
  1188                           
  1189  0070                     ?_isdigit:	
  1190                           ; 0 bytes @ 0x0
  1191                           
  1192  0070                     ?_isr:	
  1193                           ; 1 bit 
  1194                           
  1195  0070                     ?_uart_send:	
  1196                           ; 0 bytes @ 0x0
  1197                           
  1198  0070                     ?_main:	
  1199                           ; 0 bytes @ 0x0
  1200                           
  1201  0070                     ?_uart_setup:	
  1202                           ; 0 bytes @ 0x0
  1203                           
  1204  0070                     ?_setup:	
  1205                           ; 2 bytes @ 0x0
  1206                           
  1207                           
  1208                           ; 2 bytes @ 0x0
  1209  0070                     	ds	1
  1210  0071                     receive_isr@temp:	
  1211                           
  1212                           ; 1 bytes @ 0x1
  1213  0071                     	ds	1
  1214  0072                     ??_isr:	
  1215                           
  1216                           ; 0 bytes @ 0x2
  1217  0072                     	ds	1
  1218  0073                     ??_isdigit:	
  1219  0073                     ??_uart_send:	
  1220                           ; 0 bytes @ 0x3
  1221                           
  1222  0073                     ??___ftge:	
  1223                           ; 0 bytes @ 0x3
  1224                           
  1225  0073                     ?_memset:	
  1226                           ; 0 bytes @ 0x3
  1227                           
  1228  0073                     ?_strlen:	
  1229                           ; 1 bytes @ 0x3
  1230                           
  1231  0073                     ?_strcmp:	
  1232                           ; 2 bytes @ 0x3
  1233                           
  1234  0073                     ?_strchr:	
  1235                           ; 2 bytes @ 0x3
  1236                           
  1237  0073                     ?_find:	
  1238                           ; 2 bytes @ 0x3
  1239                           
  1240  0073                     ?___wmul:	
  1241                           ; 2 bytes @ 0x3
  1242                           
  1243  0073                     ?___ftpack:	
  1244                           ; 2 bytes @ 0x3
  1245                           
  1246  0073                     ?_frexp:	
  1247                           ; 3 bytes @ 0x3
  1248                           
  1249  0073                     uart_send@data:	
  1250                           ; 3 bytes @ 0x3
  1251                           
  1252  0073                     _isdigit$439:	
  1253                           ; 1 bytes @ 0x3
  1254                           
  1255  0073                     ___wmul@multiplier:	
  1256                           ; 1 bytes @ 0x3
  1257                           
  1258  0073                     memset@c:	
  1259                           ; 2 bytes @ 0x3
  1260                           
  1261  0073                     strcmp@s2:	
  1262                           ; 2 bytes @ 0x3
  1263                           
  1264  0073                     strchr@ptr:	
  1265                           ; 2 bytes @ 0x3
  1266                           
  1267  0073                     ___ftpack@arg:	
  1268                           ; 2 bytes @ 0x3
  1269                           
  1270  0073                     frexp@value:	
  1271                           ; 3 bytes @ 0x3
  1272                           
  1273                           
  1274                           ; 3 bytes @ 0x3
  1275  0073                     	ds	1
  1276  0074                     isdigit@c:	
  1277                           
  1278                           ; 1 bytes @ 0x4
  1279  0074                     	ds	1
  1280  0075                     ??_strcmp:	
  1281  0075                     ??_find:	
  1282                           ; 0 bytes @ 0x5
  1283                           
  1284  0075                     strlen@s:	
  1285                           ; 0 bytes @ 0x5
  1286                           
  1287  0075                     ___wmul@multiplicand:	
  1288                           ; 1 bytes @ 0x5
  1289                           
  1290  0075                     memset@n:	
  1291                           ; 2 bytes @ 0x5
  1292                           
  1293  0075                     strchr@chr:	
  1294                           ; 2 bytes @ 0x5
  1295                           
  1296                           
  1297                           ; 2 bytes @ 0x5
  1298  0075                     	ds	1
  1299  0076                     ??_uart_gets:	
  1300  0076                     ___ftpack@exp:	
  1301                           ; 0 bytes @ 0x6
  1302                           
  1303  0076                     frexp@eptr:	
  1304                           ; 1 bytes @ 0x6
  1305                           
  1306  0076                     strcmp@r:	
  1307                           ; 1 bytes @ 0x6
  1308                           
  1309  0076                     strlen@cp:	
  1310                           ; 1 bytes @ 0x6
  1311                           
  1312                           
  1313                           ; 1 bytes @ 0x6
  1314  0076                     	ds	1
  1315  0077                     ??_memset:	
  1316  0077                     ??___wmul:	
  1317                           ; 0 bytes @ 0x7
  1318                           
  1319  0077                     ___ftpack@sign:	
  1320                           ; 0 bytes @ 0x7
  1321                           
  1322  0077                     strcmp@s1:	
  1323                           ; 1 bytes @ 0x7
  1324                           
  1325  0077                     strtok@s1:	
  1326                           ; 1 bytes @ 0x7
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0x7
  1330  0077                     	ds	1
  1331  0078                     ??_uart_setup:	
  1332  0078                     ??_setup:	
  1333                           ; 0 bytes @ 0x8
  1334                           
  1335  0078                     ??_step:	
  1336                           ; 0 bytes @ 0x8
  1337                           
  1338                           
  1339                           	psect	cstackBANK0
  1340  0020                     __pcstackBANK0:	
  1341                           ; 0 bytes @ 0x8
  1342                           
  1343  0020                     ??_strlen:	
  1344  0020                     ??___ftpack:	
  1345                           ; 0 bytes @ 0x0
  1346                           
  1347  0020                     ??_frexp:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0020                     ??_strchr:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0020                     ?___ftge:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0020                     find@tail:	
  1357                           ; 1 bit 
  1358                           
  1359  0020                     memset@p1:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0020                     ___wmul@product:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0020                     ___ftge@ff1:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368                           
  1369                           ; 3 bytes @ 0x0
  1370  0020                     	ds	1
  1371  0021                     memset@p:	
  1372  0021                     find@size:	
  1373                           ; 1 bytes @ 0x1
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x1
  1377  0021                     	ds	1
  1378  0022                     ?_atoi:	
  1379                           
  1380                           ; 2 bytes @ 0x2
  1381  0022                     	ds	1
  1382  0023                     ?_strspn:	
  1383  0023                     ?_strcspn:	
  1384                           ; 2 bytes @ 0x3
  1385                           
  1386  0023                     ?___awtoft:	
  1387                           ; 2 bytes @ 0x3
  1388                           
  1389  0023                     ?___ftadd:	
  1390                           ; 3 bytes @ 0x3
  1391                           
  1392  0023                     find@it:	
  1393                           ; 3 bytes @ 0x3
  1394                           
  1395  0023                     ___awtoft@c:	
  1396                           ; 1 bytes @ 0x3
  1397                           
  1398  0023                     strcspn@s2:	
  1399                           ; 2 bytes @ 0x3
  1400                           
  1401  0023                     strspn@s2:	
  1402                           ; 2 bytes @ 0x3
  1403                           
  1404  0023                     ___ftadd@f1:	
  1405                           ; 2 bytes @ 0x3
  1406                           
  1407  0023                     ___ftge@ff2:	
  1408                           ; 3 bytes @ 0x3
  1409                           
  1410                           
  1411                           ; 3 bytes @ 0x3
  1412  0023                     	ds	1
  1413  0024                     ??_atoi:	
  1414  0024                     find@idx:	
  1415                           ; 0 bytes @ 0x4
  1416                           
  1417                           
  1418                           ; 1 bytes @ 0x4
  1419  0024                     	ds	1
  1420  0025                     ??_strspn:	
  1421  0025                     ??_strcspn:	
  1422                           ; 0 bytes @ 0x5
  1423                           
  1424  0025                     ?_uart_gets:	
  1425                           ; 0 bytes @ 0x5
  1426                           
  1427  0025                     uart_gets@size:	
  1428                           ; 1 bytes @ 0x5
  1429                           
  1430                           
  1431                           ; 2 bytes @ 0x5
  1432  0025                     	ds	1
  1433  0026                     ??___awtoft:	
  1434  0026                     atoi@sign:	
  1435                           ; 0 bytes @ 0x6
  1436                           
  1437  0026                     ___ftadd@f2:	
  1438                           ; 1 bytes @ 0x6
  1439                           
  1440                           
  1441                           ; 3 bytes @ 0x6
  1442  0026                     	ds	1
  1443  0027                     uart_gets@tail:	
  1444  0027                     atoi@a:	
  1445                           ; 1 bytes @ 0x7
  1446                           
  1447  0027                     strcspn@i:	
  1448                           ; 2 bytes @ 0x7
  1449                           
  1450  0027                     strspn@i:	
  1451                           ; 2 bytes @ 0x7
  1452                           
  1453                           
  1454                           ; 2 bytes @ 0x7
  1455  0027                     	ds	1
  1456  0028                     uart_gets@mem:	
  1457  0028                     ___awtoft@sign:	
  1458                           ; 1 bytes @ 0x8
  1459                           
  1460                           
  1461                           ; 1 bytes @ 0x8
  1462  0028                     	ds	1
  1463  0029                     ??___ftadd:	
  1464  0029                     ?___ftdiv:	
  1465                           ; 0 bytes @ 0x9
  1466                           
  1467  0029                     uart_gets@it:	
  1468                           ; 3 bytes @ 0x9
  1469                           
  1470  0029                     atoi@s:	
  1471                           ; 1 bytes @ 0x9
  1472                           
  1473  0029                     strcspn@s1:	
  1474                           ; 1 bytes @ 0x9
  1475                           
  1476  0029                     strspn@s1:	
  1477                           ; 1 bytes @ 0x9
  1478                           
  1479  0029                     ___ftdiv@f2:	
  1480                           ; 1 bytes @ 0x9
  1481                           
  1482                           
  1483                           ; 3 bytes @ 0x9
  1484  0029                     	ds	1
  1485  002A                     ?_strtok:	
  1486  002A                     uart_gets@pos:	
  1487                           ; 1 bytes @ 0xA
  1488                           
  1489  002A                     strtok@s2:	
  1490                           ; 2 bytes @ 0xA
  1491                           
  1492                           
  1493                           ; 2 bytes @ 0xA
  1494  002A                     	ds	2
  1495  002C                     ??_strtok:	
  1496  002C                     uart_gets@idx:	
  1497                           ; 0 bytes @ 0xC
  1498                           
  1499  002C                     ___ftdiv@f1:	
  1500                           ; 1 bytes @ 0xC
  1501                           
  1502                           
  1503                           ; 3 bytes @ 0xC
  1504  002C                     	ds	1
  1505  002D                     ___ftadd@sign:	
  1506                           
  1507                           ; 1 bytes @ 0xD
  1508  002D                     	ds	1
  1509  002E                     ___ftadd@exp2:	
  1510                           
  1511                           ; 1 bytes @ 0xE
  1512  002E                     	ds	1
  1513  002F                     ??___ftdiv:	
  1514  002F                     ___ftadd@exp1:	
  1515                           ; 0 bytes @ 0xF
  1516                           
  1517                           
  1518                           ; 1 bytes @ 0xF
  1519  002F                     	ds	4
  1520  0033                     ___ftdiv@cntr:	
  1521                           
  1522                           ; 1 bytes @ 0x13
  1523  0033                     	ds	1
  1524  0034                     ___ftdiv@f3:	
  1525                           
  1526                           ; 3 bytes @ 0x14
  1527  0034                     	ds	3
  1528  0037                     ___ftdiv@exp:	
  1529                           
  1530                           ; 1 bytes @ 0x17
  1531  0037                     	ds	1
  1532  0038                     ___ftdiv@sign:	
  1533                           
  1534                           ; 1 bytes @ 0x18
  1535  0038                     	ds	1
  1536  0039                     ?___fttol:	
  1537  0039                     ___fttol@f1:	
  1538                           ; 4 bytes @ 0x19
  1539                           
  1540                           
  1541                           ; 3 bytes @ 0x19
  1542  0039                     	ds	4
  1543  003D                     ??___fttol:	
  1544                           
  1545                           ; 0 bytes @ 0x1D
  1546  003D                     	ds	4
  1547  0041                     ___fttol@sign1:	
  1548                           
  1549                           ; 1 bytes @ 0x21
  1550  0041                     	ds	1
  1551  0042                     ___fttol@lval:	
  1552                           
  1553                           ; 4 bytes @ 0x22
  1554  0042                     	ds	4
  1555  0046                     ___fttol@exp1:	
  1556                           
  1557                           ; 1 bytes @ 0x26
  1558  0046                     	ds	1
  1559  0047                     ?___altoft:	
  1560  0047                     ___altoft@c:	
  1561                           ; 3 bytes @ 0x27
  1562                           
  1563                           
  1564                           ; 4 bytes @ 0x27
  1565  0047                     	ds	4
  1566  004B                     ??___altoft:	
  1567                           
  1568                           ; 0 bytes @ 0x2B
  1569  004B                     	ds	2
  1570  004D                     ___altoft@exp:	
  1571                           
  1572                           ; 1 bytes @ 0x2D
  1573  004D                     	ds	1
  1574  004E                     ___altoft@sign:	
  1575                           
  1576                           ; 1 bytes @ 0x2E
  1577  004E                     	ds	1
  1578  004F                     ?_ceil:	
  1579  004F                     ceil@x:	
  1580                           ; 3 bytes @ 0x2F
  1581                           
  1582                           
  1583                           ; 3 bytes @ 0x2F
  1584  004F                     	ds	3
  1585  0052                     ??_ceil:	
  1586                           
  1587                           ; 0 bytes @ 0x32
  1588  0052                     	ds	1
  1589  0053                     ceil@i:	
  1590                           
  1591                           ; 3 bytes @ 0x33
  1592  0053                     	ds	3
  1593  0056                     ceil@expon:	
  1594                           
  1595                           ; 2 bytes @ 0x36
  1596  0056                     	ds	2
  1597  0058                     ?_step:	
  1598  0058                     step@deg:	
  1599                           ; 2 bytes @ 0x38
  1600                           
  1601                           
  1602                           ; 2 bytes @ 0x38
  1603  0058                     	ds	2
  1604  005A                     _step$726:	
  1605                           
  1606                           ; 3 bytes @ 0x3A
  1607  005A                     	ds	3
  1608  005D                     step@a:	
  1609                           
  1610                           ; 2 bytes @ 0x3D
  1611  005D                     	ds	2
  1612  005F                     ?_right:	
  1613  005F                     ?_left:	
  1614                           ; 0 bytes @ 0x3F
  1615                           
  1616  005F                     right@mal:	
  1617                           ; 0 bytes @ 0x3F
  1618                           
  1619  005F                     left@mal:	
  1620                           ; 2 bytes @ 0x3F
  1621                           
  1622                           
  1623                           ; 2 bytes @ 0x3F
  1624  005F                     	ds	2
  1625  0061                     right@speed:	
  1626  0061                     left@speed:	
  1627                           ; 2 bytes @ 0x41
  1628                           
  1629                           
  1630                           ; 2 bytes @ 0x41
  1631  0061                     	ds	2
  1632  0063                     ??_right:	
  1633  0063                     ??_left:	
  1634                           ; 0 bytes @ 0x43
  1635                           
  1636                           
  1637                           ; 0 bytes @ 0x43
  1638  0063                     	ds	3
  1639                           
  1640                           	psect	maintext
  1641  0036                     __pmaintext:	
  1642 ;;
  1643 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  1644 ;;
  1645 ;; *************** function _main *****************
  1646 ;; Defined at:
  1647 ;;		line 57 in file "newmain.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  i               2   62[BANK1 ] int 
  1652 ;;  addr            2   60[BANK1 ] int 
  1653 ;;  len             2   56[BANK1 ] unsigned int 
  1654 ;;  line           32   18[BANK1 ] unsigned char [32]
  1655 ;;  argv            4   50[BANK1 ] PTR unsigned char [4]
  1656 ;;		 -> main@line(32), NULL(0), 
  1657 ;;  argc            2   65[BANK1 ] int 
  1658 ;;  address         2   54[BANK1 ] int 
  1659 ;;  val             1   67[BANK1 ] PTR unsigned char 
  1660 ;;		 -> main@line(32), NULL(0), 
  1661 ;;  title           1   64[BANK1 ] PTR unsigned char 
  1662 ;;		 -> main@line(32), NULL(0), 
  1663 ;;  it              1   59[BANK1 ] PTR unsigned char 
  1664 ;;		 -> main@line(32), NULL(0), 
  1665 ;;  mode_sel        1   58[BANK1 ] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;		None               void
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : B1F/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Totals:         0       0      62       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;Total ram usage:       62 bytes
  1680 ;; Hardware stack levels required when called:    7
  1681 ;; This function calls:
  1682 ;;		_atoi
  1683 ;;		_left
  1684 ;;		_right
  1685 ;;		_setup
  1686 ;;		_strcmp
  1687 ;;		_strlen
  1688 ;;		_strtok
  1689 ;;		_uart_gets
  1690 ;;		_uart_send
  1691 ;; This function is called by:
  1692 ;;		Startup code after reset
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _main
  1698  0036                     _main:	
  1699                           
  1700                           ;newmain.c: 58: char line[32];
  1701                           ;newmain.c: 59: char* argv[4],* title,* val;
  1702                           ;newmain.c: 60: int argc;
  1703                           ;newmain.c: 61: char* it;
  1704                           ;newmain.c: 62: const char tokens[]=" ,";
  1705                           ;newmain.c: 63: int address = (RB2*1+RB3*2+RB0*4+RB1*8);
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1709  0036  1003               	clrc
  1710  0037  0020               	movlb	0	; select bank0
  1711  0038  188D               	btfsc	13,1	;volatile
  1712  0039  1403               	setc
  1713  003A  3000               	movlw	0
  1714  003B  3D09               	addwfc	9,w
  1715  003C  0021               	movlb	1	; select bank1
  1716  003D  00A6               	movwf	??_main^(0+128)
  1717  003E  01A7               	clrf	(??_main^(0+128)+1)
  1718  003F  35A6               	lslf	??_main^(0+128),f
  1719  0040  0DA7               	rlf	(??_main^(0+128)+1),f
  1720  0041  35A6               	lslf	??_main^(0+128),f
  1721  0042  0DA7               	rlf	(??_main^(0+128)+1),f
  1722  0043  35A6               	lslf	??_main^(0+128),f
  1723  0044  0DA7               	rlf	(??_main^(0+128)+1),f
  1724  0045  1003               	clrc
  1725  0046  0020               	movlb	0	; select bank0
  1726  0047  180D               	btfsc	13,0	;volatile
  1727  0048  1403               	setc
  1728  0049  3000               	movlw	0
  1729  004A  3D09               	addwfc	9,w
  1730  004B  0021               	movlb	1	; select bank1
  1731  004C  00A8               	movwf	(??_main+2)^(0+128)
  1732  004D  01A9               	clrf	((??_main+2)^(0+128)+1)
  1733  004E  35A8               	lslf	(??_main+2)^(0+128),f
  1734  004F  0DA9               	rlf	((??_main+2)^(0+128)+1),f
  1735  0050  35A8               	lslf	(??_main+2)^(0+128),f
  1736  0051  0DA9               	rlf	((??_main+2)^(0+128)+1),f
  1737  0052  1003               	clrc
  1738  0053  0020               	movlb	0	; select bank0
  1739  0054  198D               	btfsc	13,3	;volatile
  1740  0055  1403               	setc
  1741  0056  3000               	movlw	0
  1742  0057  3D09               	addwfc	9,w
  1743  0058  0021               	movlb	1	; select bank1
  1744  0059  00AA               	movwf	(??_main+4)^(0+128)
  1745  005A  01AB               	clrf	((??_main+4)^(0+128)+1)
  1746  005B  35AA               	lslf	(??_main+4)^(0+128),f
  1747  005C  0DAB               	rlf	((??_main+4)^(0+128)+1),f
  1748  005D  1003               	clrc
  1749  005E  0020               	movlb	0	; select bank0
  1750  005F  190D               	btfsc	13,2	;volatile
  1751  0060  1403               	setc
  1752  0061  3000               	movlw	0
  1753  0062  3D09               	addwfc	9,w
  1754  0063  0021               	movlb	1	; select bank1
  1755  0064  072A               	addwf	(??_main+4)^(0+128),w
  1756  0065  00AC               	movwf	(??_main+6)^(0+128)
  1757  0066  082B               	movf	(??_main+5)^(0+128),w
  1758  0067  1803               	skipnc
  1759  0068  0A2B               	incf	(??_main+5)^(0+128),w
  1760  0069  00AD               	movwf	((??_main+6)^(0+128)+1)
  1761  006A  0828               	movf	(??_main+2)^(0+128),w
  1762  006B  072C               	addwf	(??_main+6)^(0+128),w
  1763  006C  00AE               	movwf	(??_main+8)^(0+128)
  1764  006D  0829               	movf	(??_main+3)^(0+128),w
  1765  006E  3D2D               	addwfc	(??_main+7)^(0+128),w
  1766  006F  00AF               	movwf	(??_main+9)^(0+128)
  1767  0070  0826               	movf	??_main^(0+128),w
  1768  0071  072E               	addwf	(??_main+8)^(0+128),w
  1769  0072  00B0               	movwf	(??_main+10)^(0+128)
  1770  0073  0827               	movf	(??_main+1)^(0+128),w
  1771  0074  3D2F               	addwfc	(??_main+9)^(0+128),w
  1772  0075  00B1               	movwf	(??_main+11)^(0+128)
  1773  0076  0830               	movf	(??_main+10)^(0+128),w
  1774  0077  00D6               	movwf	main@address^(0+128)
  1775  0078  0831               	movf	(??_main+11)^(0+128),w
  1776  0079  00D7               	movwf	(main@address+1)^(0+128)
  1777                           
  1778                           ;newmain.c: 64: bool mode_sel=0;
  1779  007A  01DA               	clrf	main@mode_sel^(0+128)
  1780                           
  1781                           ;newmain.c: 65: setup();
  1782  007B  318E  2616  3180   	fcall	_setup
  1783                           
  1784                           ;newmain.c: 66: RA1 = 0;
  1785  007E  0020               	movlb	0	; select bank0
  1786  007F  108C               	bcf	12,1	;volatile
  1787                           
  1788                           ;newmain.c: 67: RA2 = 0;
  1789  0080  110C               	bcf	12,2	;volatile
  1790                           
  1791                           ;newmain.c: 68: RA3 = 0;
  1792  0081  118C               	bcf	12,3	;volatile
  1793                           
  1794                           ;newmain.c: 69: RA5 = 0;
  1795  0082  128C               	bcf	12,5	;volatile
  1796  0083                     l242:	
  1797                           ;newmain.c: 70: while(PLLR==0);
  1798                           
  1799  0083  0021               	movlb	1	; select bank1
  1800  0084  1F1A               	btfss	26,6	;volatile
  1801  0085  2883               	goto	l242
  1802  0086                     l3066:	
  1803                           ;newmain.c: 71: while(1){
  1804                           
  1805                           
  1806                           ;newmain.c: 72: if(uart_gets(line,sizeof(line))!=(0)){
  1807  0086  3020               	movlw	32
  1808  0087  0020               	movlb	0	; select bank0
  1809  0088  00A5               	movwf	uart_gets@size
  1810  0089  3000               	movlw	0
  1811  008A  00A6               	movwf	uart_gets@size+1
  1812  008B  30B2               	movlw	(low (main@line| 0))& (0+255)
  1813  008C  3186  267C  3180   	fcall	_uart_gets
  1814  008F  3A00               	xorlw	0
  1815  0090  1903               	skipnz
  1816  0091  2886               	goto	l3066
  1817                           
  1818                           ;newmain.c: 73: size_t len=strlen(line);
  1819  0092  30B2               	movlw	(low (main@line| 0))& (0+255)
  1820  0093  318E  26D9  3180   	fcall	_strlen
  1821  0096  0874               	movf	?_strlen+1,w
  1822  0097  0021               	movlb	1	; select bank1
  1823  0098  00D9               	movwf	(main@len+1)^(0+128)
  1824  0099  0873               	movf	?_strlen,w
  1825  009A  00D8               	movwf	main@len^(0+128)
  1826                           
  1827                           ;newmain.c: 74: if (line[len-1]=='!')continue;
  1828  009B  0858               	movf	main@len^(0+128),w
  1829  009C  3EFF               	addlw	255
  1830  009D  3EB2               	addlw	(low (main@line| 0))& (0+255)
  1831  009E  0086               	movwf	6
  1832  009F  0187               	clrf	7
  1833  00A0  3021               	movlw	33
  1834  00A1  0601               	xorwf	1,w
  1835  00A2  1903               	btfsc	3,2
  1836  00A3  2886               	goto	l3066
  1837                           
  1838                           ;newmain.c: 75: argv[0] = strtok(line,tokens);
  1839  00A4  3000               	movlw	low (main@tokens| (0+32768))
  1840  00A5  0020               	movlb	0	; select bank0
  1841  00A6  00AA               	movwf	strtok@s2
  1842  00A7  3090               	movlw	high (main@tokens| (0+32768))
  1843  00A8  00AB               	movwf	strtok@s2+1
  1844  00A9  30B2               	movlw	(low (main@line| 0))& (0+255)
  1845  00AA  3186  26C5  3180   	fcall	_strtok
  1846  00AD  0021               	movlb	1	; select bank1
  1847  00AE  00A6               	movwf	??_main^(0+128)
  1848  00AF  0826               	movf	??_main^(0+128),w
  1849  00B0  00D2               	movwf	main@argv^(0+128)
  1850                           
  1851                           ;newmain.c: 76: for (argc=1;argc<sizeof(argv)/sizeof(argv[0]);argc++){
  1852  00B1  3001               	movlw	1
  1853  00B2  00E1               	movwf	main@argc^(0+128)
  1854  00B3  3000               	movlw	0
  1855  00B4  00E2               	movwf	(main@argc^(0+128)+1)
  1856  00B5  3000               	movlw	0
  1857  00B6  0262               	subwf	(main@argc+1)^(0+128),w
  1858  00B7  3004               	movlw	4
  1859  00B8  1903               	skipnz
  1860  00B9  0261               	subwf	main@argc^(0+128),w
  1861  00BA  1803               	btfsc	3,0
  1862  00BB  28DC               	goto	l3090
  1863  00BC                     l3082:	
  1864                           
  1865                           ;newmain.c: 77: argv[argc]=it=strtok((0),tokens);
  1866  00BC  3000               	movlw	low (main@tokens| (0+32768))
  1867  00BD  0020               	movlb	0	; select bank0
  1868  00BE  00AA               	movwf	strtok@s2
  1869  00BF  3090               	movlw	high (main@tokens| (0+32768))
  1870  00C0  00AB               	movwf	strtok@s2+1
  1871  00C1  3000               	movlw	0
  1872  00C2  3186  26C5  3180   	fcall	_strtok
  1873  00C5  0021               	movlb	1	; select bank1
  1874  00C6  00DB               	movwf	main@it^(0+128)
  1875  00C7  00A6               	movwf	??_main^(0+128)
  1876  00C8  0861               	movf	main@argc^(0+128),w
  1877  00C9  3ED2               	addlw	(low (main@argv| 0))& (0+255)
  1878  00CA  0086               	movwf	6
  1879  00CB  0187               	clrf	7
  1880  00CC  0826               	movf	??_main^(0+128),w
  1881  00CD  0081               	movwf	1
  1882                           
  1883                           ;newmain.c: 78: if(it==(0))break;
  1884  00CE  085B               	movf	main@it^(0+128),w
  1885  00CF  1903               	btfsc	3,2
  1886  00D0  28DC               	goto	l3090
  1887  00D1  3001               	movlw	1
  1888  00D2  07E1               	addwf	main@argc^(0+128),f
  1889  00D3  3000               	movlw	0
  1890  00D4  3DE2               	addwfc	(main@argc+1)^(0+128),f
  1891  00D5  3000               	movlw	0
  1892  00D6  0262               	subwf	(main@argc+1)^(0+128),w
  1893  00D7  3004               	movlw	4
  1894  00D8  1903               	skipnz
  1895  00D9  0261               	subwf	main@argc^(0+128),w
  1896  00DA  1C03               	skipc
  1897  00DB  28BC               	goto	l3082
  1898  00DC                     l3090:	
  1899                           
  1900                           ;newmain.c: 79: }
  1901                           ;newmain.c: 80: title=argv[0];
  1902  00DC  0852               	movf	main@argv^(0+128),w
  1903  00DD  00A6               	movwf	??_main^(0+128)
  1904  00DE  0826               	movf	??_main^(0+128),w
  1905  00DF  00E0               	movwf	main@title^(0+128)
  1906                           
  1907                           ;newmain.c: 81: val=argv[1];
  1908  00E0  0853               	movf	(low ((main@argv| 0+1)))^(0+128),w
  1909  00E1  00A6               	movwf	??_main^(0+128)
  1910  00E2  0826               	movf	??_main^(0+128),w
  1911  00E3  00E3               	movwf	main@val^(0+128)
  1912                           
  1913                           ;newmain.c: 82: if(!strcmp(title,"sel")){
  1914  00E4  3013               	movlw	low (STR_1| (0+32768))
  1915  00E5  00F3               	movwf	strcmp@s2
  1916  00E6  3090               	movlw	high (STR_1| (0+32768))
  1917  00E7  00F4               	movwf	strcmp@s2+1
  1918  00E8  0860               	movf	main@title^(0+128),w
  1919  00E9  3187  27D2  3180   	fcall	_strcmp
  1920  00EC  0873               	movf	?_strcmp,w
  1921  00ED  0474               	iorwf	?_strcmp+1,w
  1922  00EE  1D03               	btfss	3,2
  1923  00EF  2928               	goto	l3110
  1924                           
  1925                           ;newmain.c: 83: int addr=0;
  1926  00F0  0021               	movlb	1	; select bank1
  1927  00F1  01DC               	clrf	main@addr^(0+128)
  1928  00F2  01DD               	clrf	(main@addr+1)^(0+128)
  1929                           
  1930                           ;newmain.c: 84: if(argc>=2&&argv!=(0))addr=atoi(val);
  1931  00F3  0862               	movf	(main@argc+1)^(0+128),w
  1932  00F4  3A80               	xorlw	128
  1933  00F5  00A6               	movwf	??_main^(0+128)
  1934  00F6  3080               	movlw	128
  1935  00F7  0226               	subwf	??_main^(0+128),w
  1936  00F8  1D03               	skipz
  1937  00F9  28FC               	goto	u4495
  1938  00FA  3002               	movlw	2
  1939  00FB  0261               	subwf	main@argc^(0+128),w
  1940  00FC                     u4495:	
  1941  00FC  1C03               	skipc
  1942  00FD  290B               	goto	l3100
  1943  00FE  0021               	movlb	1	; select bank1
  1944  00FF  0863               	movf	main@val^(0+128),w
  1945  0100  3185  25AA  3180   	fcall	_atoi
  1946  0103  0020               	movlb	0	; select bank0
  1947  0104  0823               	movf	?_atoi+1,w
  1948  0105  0021               	movlb	1	; select bank1
  1949  0106  00DD               	movwf	(main@addr+1)^(0+128)
  1950  0107  0020               	movlb	0	; select bank0
  1951  0108  0822               	movf	?_atoi,w
  1952  0109  0021               	movlb	1	; select bank1
  1953  010A  00DC               	movwf	main@addr^(0+128)
  1954  010B                     l3100:	
  1955                           
  1956                           ;newmain.c: 85: if(addr==address)mode_sel=RA5=1;
  1957  010B  0021               	movlb	1	; select bank1
  1958  010C  0857               	movf	(main@address+1)^(0+128),w
  1959  010D  065D               	xorwf	(main@addr+1)^(0+128),w
  1960  010E  1D03               	skipz
  1961  010F  2912               	goto	u4505
  1962  0110  0856               	movf	main@address^(0+128),w
  1963  0111  065C               	xorwf	main@addr^(0+128),w
  1964  0112                     u4505:	
  1965  0112  1D03               	skipz
  1966  0113  2917               	goto	l3104
  1967  0114  0020               	movlb	0	; select bank0
  1968  0115  168C               	bsf	12,5	;volatile
  1969  0116  2922               	goto	L1
  1970  0117                     l3104:	
  1971                           
  1972                           ;newmain.c: 86: else if(!addr){
  1973  0117  085C               	movf	main@addr^(0+128),w
  1974  0118  045D               	iorwf	(main@addr+1)^(0+128),w
  1975  0119  1D03               	btfss	3,2
  1976  011A  2920               	goto	l3108
  1977                           
  1978                           ;newmain.c: 87: mode_sel=1;
  1979  011B  01DA               	clrf	main@mode_sel^(0+128)
  1980  011C  0ADA               	incf	main@mode_sel^(0+128),f
  1981                           
  1982                           ;newmain.c: 88: RA5=0;
  1983  011D  0020               	movlb	0	; select bank0
  1984  011E  128C               	bcf	12,5	;volatile
  1985                           
  1986                           ;newmain.c: 89: }else mode_sel=RA5=0;
  1987  011F  2886               	goto	l3066
  1988  0120                     l3108:	
  1989  0120  0020               	movlb	0	; select bank0
  1990  0121  128C               	bcf	12,5	;volatile
  1991  0122                     L1:	
  1992  0122  3000               	movlw	0
  1993  0123  1A8C               	btfsc	12,5	;volatile
  1994  0124  3001               	movlw	1
  1995  0125  0021               	movlb	1	; select bank1
  1996  0126  00DA               	movwf	main@mode_sel^(0+128)
  1997                           
  1998                           ;newmain.c: 90: }else if(!strcmp(title,"right")){
  1999  0127  2886               	goto	l3066
  2000  0128                     l3110:	
  2001  0128  3003               	movlw	low (STR_2| (0+32768))
  2002  0129  00F3               	movwf	strcmp@s2
  2003  012A  3090               	movlw	high (STR_2| (0+32768))
  2004  012B  00F4               	movwf	strcmp@s2+1
  2005  012C  0021               	movlb	1	; select bank1
  2006  012D  0860               	movf	main@title^(0+128),w
  2007  012E  3187  27D2  3180   	fcall	_strcmp
  2008  0131  0873               	movf	?_strcmp,w
  2009  0132  0474               	iorwf	?_strcmp+1,w
  2010  0133  1D03               	btfss	3,2
  2011  0134  294C               	goto	l3116
  2012                           
  2013                           ;newmain.c: 91: uart_send("right");
  2014  0135  3003               	movlw	(low (STR_2| (0+32768)))& (0+255)
  2015  0136  318E  2600  3180   	fcall	_uart_send
  2016                           
  2017                           ;newmain.c: 92: right(val,0);
  2018  0139  0021               	movlb	1	; select bank1
  2019  013A  0863               	movf	main@val^(0+128),w
  2020  013B  00A6               	movwf	??_main^(0+128)
  2021  013C  3000               	movlw	0
  2022  013D  00A7               	movwf	(??_main^(0+128)+1)
  2023  013E  0826               	movf	??_main^(0+128),w
  2024  013F  0020               	movlb	0	; select bank0
  2025  0140  00DF               	movwf	right@mal
  2026  0141  0021               	movlb	1	; select bank1
  2027  0142  0827               	movf	(??_main+1)^(0+128),w
  2028  0143  0020               	movlb	0	; select bank0
  2029  0144  00E0               	movwf	right@mal+1
  2030  0145  3000               	movlw	0
  2031  0146  00E1               	movwf	right@speed
  2032  0147  00E2               	movwf	right@speed+1
  2033  0148  3182  2293  3180   	fcall	_right
  2034                           
  2035                           ;newmain.c: 93: }
  2036  014B  2886               	goto	l3066
  2037  014C                     l3116:	
  2038                           
  2039                           ;newmain.c: 94: else if(!strcmp(title,"left")){
  2040  014C  300E               	movlw	low (STR_4| (0+32768))
  2041  014D  00F3               	movwf	strcmp@s2
  2042  014E  3090               	movlw	high (STR_4| (0+32768))
  2043  014F  00F4               	movwf	strcmp@s2+1
  2044  0150  0021               	movlb	1	; select bank1
  2045  0151  0860               	movf	main@title^(0+128),w
  2046  0152  3187  27D2  3180   	fcall	_strcmp
  2047  0155  0873               	movf	?_strcmp,w
  2048  0156  0474               	iorwf	?_strcmp+1,w
  2049  0157  1D03               	btfss	3,2
  2050  0158  2970               	goto	l3122
  2051                           
  2052                           ;newmain.c: 95: uart_send("left");
  2053  0159  300E               	movlw	(low (STR_4| (0+32768)))& (0+255)
  2054  015A  318E  2600  3180   	fcall	_uart_send
  2055                           
  2056                           ;newmain.c: 96: left(val,0);
  2057  015D  0021               	movlb	1	; select bank1
  2058  015E  0863               	movf	main@val^(0+128),w
  2059  015F  00A6               	movwf	??_main^(0+128)
  2060  0160  3000               	movlw	0
  2061  0161  00A7               	movwf	(??_main^(0+128)+1)
  2062  0162  0826               	movf	??_main^(0+128),w
  2063  0163  0020               	movlb	0	; select bank0
  2064  0164  00DF               	movwf	left@mal
  2065  0165  0021               	movlb	1	; select bank1
  2066  0166  0827               	movf	(??_main+1)^(0+128),w
  2067  0167  0020               	movlb	0	; select bank0
  2068  0168  00E0               	movwf	left@mal+1
  2069  0169  3000               	movlw	0
  2070  016A  00E1               	movwf	left@speed
  2071  016B  00E2               	movwf	left@speed+1
  2072  016C  3183  2344  3180   	fcall	_left
  2073                           
  2074                           ;newmain.c: 97: }else if(!strcmp(title,"echo")){
  2075  016F  2886               	goto	l3066
  2076  0170                     l3122:	
  2077  0170  3009               	movlw	low (STR_6| (0+32768))
  2078  0171  00F3               	movwf	strcmp@s2
  2079  0172  3090               	movlw	high (STR_6| (0+32768))
  2080  0173  00F4               	movwf	strcmp@s2+1
  2081  0174  0021               	movlb	1	; select bank1
  2082  0175  0860               	movf	main@title^(0+128),w
  2083  0176  3187  27D2  3180   	fcall	_strcmp
  2084  0179  0873               	movf	?_strcmp,w
  2085  017A  0474               	iorwf	?_strcmp+1,w
  2086  017B  1D03               	btfss	3,2
  2087  017C  2886               	goto	l3066
  2088                           
  2089                           ;newmain.c: 98: for(int i=0;i<strlen(val);i++){
  2090  017D  0021               	movlb	1	; select bank1
  2091  017E  01DE               	clrf	main@i^(0+128)
  2092  017F  01DF               	clrf	(main@i+1)^(0+128)
  2093  0180                     l3130:	
  2094  0180  0863               	movf	main@val^(0+128),w
  2095  0181  318E  26D9  3180   	fcall	_strlen
  2096  0184  0874               	movf	?_strlen+1,w
  2097  0185  0021               	movlb	1	; select bank1
  2098  0186  025F               	subwf	(main@i+1)^(0+128),w
  2099  0187  1D03               	skipz
  2100  0188  298B               	goto	u4555
  2101  0189  0873               	movf	?_strlen,w
  2102  018A  025E               	subwf	main@i^(0+128),w
  2103  018B                     u4555:	
  2104  018B  1803               	btfsc	3,0
  2105  018C  2886               	goto	l3066
  2106                           
  2107                           ;newmain.c: 99: uart_send(val[i]);
  2108  018D  085E               	movf	main@i^(0+128),w
  2109  018E  0763               	addwf	main@val^(0+128),w
  2110  018F  00A6               	movwf	??_main^(0+128)
  2111  0190  0826               	movf	??_main^(0+128),w
  2112  0191  0086               	movwf	6
  2113  0192  0187               	clrf	7
  2114  0193  0801               	movf	1,w
  2115  0194  318E  2600  3180   	fcall	_uart_send
  2116  0197  3001               	movlw	1
  2117  0198  0021               	movlb	1	; select bank1
  2118  0199  07DE               	addwf	main@i^(0+128),f
  2119  019A  3000               	movlw	0
  2120  019B  3DDF               	addwfc	(main@i+1)^(0+128),f
  2121  019C  2980               	goto	l3130
  2122  019D                     __end_of_main:	
  2123                           
  2124                           	psect	text1
  2125  0E00                     __ptext1:	
  2126 ;; *************** function _uart_send *****************
  2127 ;; Defined at:
  2128 ;;		line 159 in file "uart.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  data            1    wreg     unsigned char 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  data            1    3[COMMON] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;Total ram usage:        1 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    2
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _uart_send
  2158  0E00                     _uart_send:	
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _uart_send: [wreg]
  2162                           ;uart_send@data stored from wreg
  2163  0E00  00F3               	movwf	uart_send@data
  2164  0E01                     l163:	
  2165                           ;uart.c: 160: while(!TXIF);
  2166                           
  2167  0E01  0020               	movlb	0	; select bank0
  2168  0E02  1E11               	btfss	17,4	;volatile
  2169  0E03  2E01               	goto	l163
  2170                           
  2171                           ;uart.c: 161: TXREG=data;
  2172  0E04  0873               	movf	uart_send@data,w
  2173  0E05  0023               	movlb	3	; select bank3
  2174  0E06  009A               	movwf	26	;volatile
  2175  0E07  0008               	return
  2176  0E08                     __end_of_uart_send:	
  2177                           ;uart.c: 162: return;
  2178                           
  2179                           
  2180                           	psect	text2
  2181  067C                     __ptext2:	
  2182 ;; *************** function _uart_gets *****************
  2183 ;; Defined at:
  2184 ;;		line 95 in file "uart.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  mem             1    wreg     PTR unsigned char 
  2187 ;;		 -> main@line(32), 
  2188 ;;  size            2    5[BANK0 ] unsigned int 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  mem             1    8[BANK0 ] PTR unsigned char 
  2191 ;;		 -> main@line(32), 
  2192 ;;  idx             1   12[BANK0 ] unsigned char 
  2193 ;;  tail            1    7[BANK0 ] unsigned char 
  2194 ;;  pos             2   10[BANK0 ] unsigned int 
  2195 ;;  it              1    9[BANK0 ] PTR unsigned char 
  2196 ;;		 -> main@line(32), 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      PTR unsigned char 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;Total ram usage:        9 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    3
  2213 ;; This function calls:
  2214 ;;		_find
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _uart_gets
  2222  067C                     _uart_gets:	
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _uart_gets: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2226                           ;uart_gets@mem stored from wreg
  2227  067C  0020               	movlb	0	; select bank0
  2228  067D  00A8               	movwf	uart_gets@mem
  2229                           
  2230                           ;uart.c: 96: size_t pos=find();
  2231  067E  318F  275C  3186   	fcall	_find
  2232  0681  0874               	movf	?_find+1,w
  2233  0682  0020               	movlb	0	; select bank0
  2234  0683  00AB               	movwf	uart_gets@pos+1
  2235  0684  0873               	movf	?_find,w
  2236  0685  00AA               	movwf	uart_gets@pos
  2237                           
  2238                           ;uart.c: 97: uint8_t *it=mem;
  2239  0686  0828               	movf	uart_gets@mem,w
  2240  0687  00F6               	movwf	??_uart_gets
  2241  0688  0876               	movf	??_uart_gets,w
  2242  0689  00A9               	movwf	uart_gets@it
  2243                           
  2244                           ;uart.c: 98: if(0<pos && pos<size){
  2245  068A  082A               	movf	uart_gets@pos,w
  2246  068B  042B               	iorwf	uart_gets@pos+1,w
  2247  068C  1903               	btfsc	3,2
  2248  068D  2EC3               	goto	l2928
  2249  068E  0826               	movf	uart_gets@size+1,w
  2250  068F  022B               	subwf	uart_gets@pos+1,w
  2251  0690  1D03               	skipz
  2252  0691  2E94               	goto	u3995
  2253  0692  0825               	movf	uart_gets@size,w
  2254  0693  022A               	subwf	uart_gets@pos,w
  2255  0694                     u3995:	
  2256  0694  1803               	skipnc
  2257  0695  2EC3               	goto	l2928
  2258                           
  2259                           ;uart.c: 99: uint8_t idx;
  2260                           ;uart.c: 100: uint8_t tail=(rx_out+pos)%32;
  2261  0696  0879               	movf	_rx_out,w
  2262  0697  072A               	addwf	uart_gets@pos,w
  2263  0698  391F               	andlw	31
  2264  0699  00F6               	movwf	??_uart_gets
  2265  069A  0876               	movf	??_uart_gets,w
  2266  069B  00A7               	movwf	uart_gets@tail
  2267                           
  2268                           ;uart.c: 101: for (idx=rx_out;idx!=tail;idx=(idx+1)%32){
  2269  069C  0879               	movf	_rx_out,w
  2270  069D                     L2:	
  2271  069D  00F6               	movwf	??_uart_gets
  2272  069E  0876               	movf	??_uart_gets,w
  2273  069F  00AC               	movwf	uart_gets@idx
  2274  06A0  082C               	movf	uart_gets@idx,w
  2275  06A1  0627               	xorwf	uart_gets@tail,w
  2276  06A2  1903               	btfsc	3,2
  2277  06A3  2EB8               	goto	l2916
  2278                           
  2279                           ;uart.c: 102: *(it++)=rxbuf[idx];
  2280  06A4  082C               	movf	uart_gets@idx,w
  2281  06A5  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  2282  06A6  0086               	movwf	6
  2283  06A7  3001               	movlw	1	; select bank3/4
  2284  06A8  0087               	movwf	7
  2285  06A9  0801               	movf	1,w
  2286  06AA  00F6               	movwf	??_uart_gets
  2287  06AB  0829               	movf	uart_gets@it,w
  2288  06AC  0086               	movwf	6
  2289  06AD  0187               	clrf	7
  2290  06AE  0876               	movf	??_uart_gets,w
  2291  06AF  0081               	movwf	1
  2292  06B0  3001               	movlw	1
  2293  06B1  00F6               	movwf	??_uart_gets
  2294  06B2  0876               	movf	??_uart_gets,w
  2295  06B3  07A9               	addwf	uart_gets@it,f
  2296  06B4  082C               	movf	uart_gets@idx,w
  2297  06B5  3E01               	addlw	1
  2298  06B6  391F               	andlw	31
  2299  06B7  2E9D               	goto	L2
  2300  06B8                     l2916:	
  2301                           
  2302                           ;uart.c: 103: }
  2303                           ;uart.c: 104: it--;
  2304  06B8  3001               	movlw	1
  2305  06B9  02A9               	subwf	uart_gets@it,f
  2306                           
  2307                           ;uart.c: 105: *it='\0';
  2308  06BA  0829               	movf	uart_gets@it,w
  2309  06BB  0086               	movwf	6
  2310  06BC  0187               	clrf	7
  2311  06BD  0181               	clrf	1
  2312                           
  2313                           ;uart.c: 106: rx_in=rx_out=rx_used=0;
  2314  06BE  01E8               	clrf	_rx_used
  2315  06BF  01F9               	clrf	_rx_out
  2316  06C0  01F8               	clrf	_rx_in
  2317                           
  2318                           ;uart.c: 107: return mem;
  2319  06C1  0828               	movf	uart_gets@mem,w
  2320                           
  2321                           ;uart.c: 108: }else{
  2322  06C2  0008               	return
  2323  06C3                     l2928:	
  2324                           
  2325                           ;uart.c: 109: return (0);
  2326  06C3  3000               	movlw	0
  2327  06C4  0008               	return
  2328  06C5                     __end_of_uart_gets:	
  2329                           
  2330                           	psect	text3
  2331  0F5C                     __ptext3:	
  2332 ;; *************** function _find *****************
  2333 ;; Defined at:
  2334 ;;		line 82 in file "uart.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  size            2    1[BANK0 ] unsigned int 
  2339 ;;  idx             1    4[BANK0 ] unsigned char 
  2340 ;;  it              1    3[BANK0 ] unsigned char 
  2341 ;;  tail            1    0[BANK0 ] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  2    3[COMMON] unsigned int 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2352 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;Total ram usage:        8 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    2
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_uart_gets
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _find
  2367  0F5C                     _find:	
  2368                           
  2369                           ;uart.c: 83: uint8_t idx;
  2370                           ;uart.c: 84: uint8_t tail=(rx_out+rx_used)%32;
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _find: [wreg+fsr1l+fsr1h+status,2+status,0]
  2374  0F5C  0879               	movf	_rx_out,w
  2375  0F5D  0020               	movlb	0	; select bank0
  2376  0F5E  0768               	addwf	_rx_used,w
  2377  0F5F  391F               	andlw	31
  2378  0F60  00F5               	movwf	??_find
  2379  0F61  0875               	movf	??_find,w
  2380  0F62  00A0               	movwf	find@tail
  2381                           
  2382                           ;uart.c: 85: uint8_t it;
  2383                           ;uart.c: 86: size_t size=0;
  2384  0F63  01A1               	clrf	find@size
  2385  0F64  01A2               	clrf	find@size+1
  2386                           
  2387                           ;uart.c: 87: for (idx=rx_out;idx!=tail;idx=(idx+1)%32){
  2388  0F65  0879               	movf	_rx_out,w
  2389  0F66                     L3:	
  2390  0F66  00F5               	movwf	??_find
  2391  0F67  0875               	movf	??_find,w
  2392  0F68  00A4               	movwf	find@idx
  2393  0F69  0824               	movf	find@idx,w
  2394  0F6A  0620               	xorwf	find@tail,w
  2395  0F6B  1903               	btfsc	3,2
  2396  0F6C  2F8B               	goto	l2844
  2397                           
  2398                           ;uart.c: 88: it=rxbuf[idx];
  2399  0F6D  0824               	movf	find@idx,w
  2400  0F6E  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  2401  0F6F  0086               	movwf	6
  2402  0F70  3001               	movlw	1	; select bank3/4
  2403  0F71  0087               	movwf	7
  2404  0F72  0801               	movf	1,w
  2405  0F73  00F5               	movwf	??_find
  2406  0F74  0875               	movf	??_find,w
  2407  0F75  00A3               	movwf	find@it
  2408                           
  2409                           ;uart.c: 89: size++;
  2410  0F76  3001               	movlw	1
  2411  0F77  07A1               	addwf	find@size,f
  2412  0F78  3000               	movlw	0
  2413  0F79  3DA2               	addwfc	find@size+1,f
  2414                           
  2415                           ;uart.c: 90: if(it=='\n'||it=='\r')return size;
  2416  0F7A  300A               	movlw	10
  2417  0F7B  0623               	xorwf	find@it,w
  2418  0F7C  1903               	btfsc	3,2
  2419  0F7D  2F82               	goto	l2836
  2420  0F7E  300D               	movlw	13
  2421  0F7F  0623               	xorwf	find@it,w
  2422  0F80  1D03               	btfss	3,2
  2423  0F81  2F87               	goto	l2840
  2424  0F82                     l2836:	
  2425  0F82  0822               	movf	find@size+1,w
  2426  0F83  00F4               	movwf	?_find+1
  2427  0F84  0821               	movf	find@size,w
  2428  0F85  00F3               	movwf	?_find
  2429  0F86  0008               	return
  2430  0F87                     l2840:	
  2431  0F87  0824               	movf	find@idx,w
  2432  0F88  3E01               	addlw	1
  2433  0F89  391F               	andlw	31
  2434  0F8A  2F66               	goto	L3
  2435  0F8B                     l2844:	
  2436                           
  2437                           ;uart.c: 91: }
  2438                           ;uart.c: 92: return 0;
  2439  0F8B  01F3               	clrf	?_find
  2440  0F8C  01F4               	clrf	?_find+1
  2441  0F8D  0008               	return
  2442  0F8E                     __end_of_find:	
  2443                           
  2444                           	psect	text4
  2445  06C5                     __ptext4:	
  2446 ;; *************** function _strtok *****************
  2447 ;; Defined at:
  2448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strtok.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  s1              1    wreg     PTR unsigned char 
  2451 ;;		 -> main@line(32), NULL(0), 
  2452 ;;  s2              2   10[BANK0 ] PTR const unsigned char 
  2453 ;;		 -> main@tokens(3), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  s1              1    7[COMMON] PTR unsigned char 
  2456 ;;		 -> main@line(32), NULL(0), 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      PTR unsigned char 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;Total ram usage:        6 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    4
  2473 ;; This function calls:
  2474 ;;		_strcspn
  2475 ;;		_strspn
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function _strtok
  2483  06C5                     _strtok:	
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2487                           ;strtok@s1 stored from wreg
  2488  06C5  00F7               	movwf	strtok@s1
  2489  06C6  0877               	movf	strtok@s1,w
  2490  06C7  1D03               	btfss	3,2
  2491  06C8  2ECE               	goto	l2990
  2492  06C9  0020               	movlb	0	; select bank0
  2493  06CA  086B               	movf	strtok@sp,w
  2494  06CB  00AC               	movwf	??_strtok
  2495  06CC  082C               	movf	??_strtok,w
  2496  06CD  00F7               	movwf	strtok@s1
  2497  06CE                     l2990:	
  2498  06CE  0877               	movf	strtok@s1,w
  2499  06CF  1D03               	btfss	3,2
  2500  06D0  2ED3               	goto	l2996
  2501  06D1  3000               	movlw	0
  2502  06D2  0008               	return
  2503  06D3                     l2996:	
  2504  06D3  0020               	movlb	0	; select bank0
  2505  06D4  082A               	movf	strtok@s2,w
  2506  06D5  00A3               	movwf	strspn@s2
  2507  06D6  082B               	movf	strtok@s2+1,w
  2508  06D7  00A4               	movwf	strspn@s2+1
  2509  06D8  0877               	movf	strtok@s1,w
  2510  06D9  318F  272D  3186   	fcall	_strspn
  2511  06DC  0020               	movlb	0	; select bank0
  2512  06DD  0823               	movf	?_strspn,w
  2513  06DE  00AC               	movwf	??_strtok
  2514  06DF  082C               	movf	??_strtok,w
  2515  06E0  07F7               	addwf	strtok@s1,f
  2516  06E1  0877               	movf	strtok@s1,w
  2517  06E2  0086               	movwf	6
  2518  06E3  0187               	clrf	7
  2519  06E4  0801               	movf	1,w
  2520  06E5  1D03               	btfss	3,2
  2521  06E6  2EEA               	goto	l3004
  2522  06E7  01EB               	clrf	strtok@sp
  2523  06E8  3000               	movlw	0
  2524  06E9  0008               	return
  2525  06EA                     l3004:	
  2526  06EA  082A               	movf	strtok@s2,w
  2527  06EB  00A3               	movwf	strcspn@s2
  2528  06EC  082B               	movf	strtok@s2+1,w
  2529  06ED  00A4               	movwf	strcspn@s2+1
  2530  06EE  0877               	movf	strtok@s1,w
  2531  06EF  318E  26FE  3186   	fcall	_strcspn
  2532  06F2  0020               	movlb	0	; select bank0
  2533  06F3  0823               	movf	?_strcspn,w
  2534  06F4  00AC               	movwf	??_strtok
  2535  06F5  0824               	movf	?_strcspn+1,w
  2536  06F6  00AD               	movwf	??_strtok+1
  2537  06F7  0877               	movf	strtok@s1,w
  2538  06F8  072C               	addwf	??_strtok,w
  2539  06F9  00AE               	movwf	??_strtok+2
  2540  06FA  082E               	movf	??_strtok+2,w
  2541  06FB  00EB               	movwf	strtok@sp
  2542  06FC  086B               	movf	strtok@sp,w
  2543  06FD  0086               	movwf	6
  2544  06FE  0187               	clrf	7
  2545  06FF  0801               	movf	1,w
  2546  0700  1903               	btfsc	3,2
  2547  0701  2F0B               	goto	l3012
  2548  0702  086B               	movf	strtok@sp,w
  2549  0703  0086               	movwf	6
  2550  0704  0187               	clrf	7
  2551  0705  0181               	clrf	1
  2552  0706  3001               	movlw	1
  2553  0707  00AC               	movwf	??_strtok
  2554  0708  082C               	movf	??_strtok,w
  2555  0709  07EB               	addwf	strtok@sp,f
  2556  070A  2F0C               	goto	l3014
  2557  070B                     l3012:	
  2558  070B  01EB               	clrf	strtok@sp
  2559  070C                     l3014:	
  2560  070C  0877               	movf	strtok@s1,w
  2561  070D  0008               	return
  2562  070E                     __end_of_strtok:	
  2563                           
  2564                           	psect	text5
  2565  0F2D                     __ptext5:	
  2566 ;; *************** function _strspn *****************
  2567 ;; Defined at:
  2568 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strspn.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  s1              1    wreg     PTR const unsigned char 
  2571 ;;		 -> main@line(32), NULL(0), 
  2572 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
  2573 ;;		 -> main@tokens(3), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  s1              1    9[BANK0 ] PTR const unsigned char 
  2576 ;;		 -> main@line(32), NULL(0), 
  2577 ;;  i               2    7[BANK0 ] unsigned int 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  2    3[BANK0 ] unsigned int 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;Total ram usage:        7 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    3
  2594 ;; This function calls:
  2595 ;;		_strchr
  2596 ;; This function is called by:
  2597 ;;		_strtok
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _strspn
  2603  0F2D                     _strspn:	
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2607                           ;strspn@s1 stored from wreg
  2608  0F2D  0020               	movlb	0	; select bank0
  2609  0F2E  00A9               	movwf	strspn@s1
  2610  0F2F  01A7               	clrf	strspn@i
  2611  0F30  01A8               	clrf	strspn@i+1
  2612  0F31  2F3B               	goto	l2860
  2613  0F32                     l2858:	
  2614  0F32  3001               	movlw	1
  2615  0F33  0020               	movlb	0	; select bank0
  2616  0F34  00A5               	movwf	??_strspn
  2617  0F35  0825               	movf	??_strspn,w
  2618  0F36  07A9               	addwf	strspn@s1,f
  2619  0F37  3001               	movlw	1
  2620  0F38  07A7               	addwf	strspn@i,f
  2621  0F39  3000               	movlw	0
  2622  0F3A  3DA8               	addwfc	strspn@i+1,f
  2623  0F3B                     l2860:	
  2624  0F3B  0829               	movf	strspn@s1,w
  2625  0F3C  0086               	movwf	6
  2626  0F3D  0187               	clrf	7
  2627  0F3E  0801               	movf	1,w
  2628  0F3F  1903               	btfsc	3,2
  2629  0F40  2F56               	goto	l2864
  2630  0F41  0823               	movf	strspn@s2,w
  2631  0F42  00F3               	movwf	strchr@ptr
  2632  0F43  0824               	movf	strspn@s2+1,w
  2633  0F44  00F4               	movwf	strchr@ptr+1
  2634  0F45  0829               	movf	strspn@s1,w
  2635  0F46  0086               	movwf	6
  2636  0F47  0187               	clrf	7
  2637  0F48  0801               	movf	1,w
  2638  0F49  00A5               	movwf	??_strspn
  2639  0F4A  01A6               	clrf	??_strspn+1
  2640  0F4B  0825               	movf	??_strspn,w
  2641  0F4C  00F5               	movwf	strchr@chr
  2642  0F4D  0826               	movf	??_strspn+1,w
  2643  0F4E  00F6               	movwf	strchr@chr+1
  2644  0F4F  318E  2625  318F   	fcall	_strchr
  2645  0F52  0873               	movf	?_strchr,w
  2646  0F53  0474               	iorwf	?_strchr+1,w
  2647  0F54  1D03               	btfss	3,2
  2648  0F55  2F32               	goto	l2858
  2649  0F56                     l2864:	
  2650  0F56  0020               	movlb	0	; select bank0
  2651  0F57  0828               	movf	strspn@i+1,w
  2652  0F58  00A4               	movwf	?_strspn+1
  2653  0F59  0827               	movf	strspn@i,w
  2654  0F5A  00A3               	movwf	?_strspn
  2655  0F5B  0008               	return
  2656  0F5C                     __end_of_strspn:	
  2657                           
  2658                           	psect	text6
  2659  0EFE                     __ptext6:	
  2660 ;; *************** function _strcspn *****************
  2661 ;; Defined at:
  2662 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcspn.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  s1              1    wreg     PTR const unsigned char 
  2665 ;;		 -> main@line(32), NULL(0), 
  2666 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
  2667 ;;		 -> main@tokens(3), 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  s1              1    9[BANK0 ] PTR const unsigned char 
  2670 ;;		 -> main@line(32), NULL(0), 
  2671 ;;  i               2    7[BANK0 ] unsigned int 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  2    3[BANK0 ] unsigned int 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;Total ram usage:        7 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    3
  2688 ;; This function calls:
  2689 ;;		_strchr
  2690 ;; This function is called by:
  2691 ;;		_strtok
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _strcspn
  2697  0EFE                     _strcspn:	
  2698                           
  2699                           ;incstack = 0
  2700                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2701                           ;strcspn@s1 stored from wreg
  2702  0EFE  0020               	movlb	0	; select bank0
  2703  0EFF  00A9               	movwf	strcspn@s1
  2704  0F00  01A7               	clrf	strcspn@i
  2705  0F01  01A8               	clrf	strcspn@i+1
  2706  0F02  2F0C               	goto	l2872
  2707  0F03                     l2870:	
  2708  0F03  3001               	movlw	1
  2709  0F04  0020               	movlb	0	; select bank0
  2710  0F05  00A5               	movwf	??_strcspn
  2711  0F06  0825               	movf	??_strcspn,w
  2712  0F07  07A9               	addwf	strcspn@s1,f
  2713  0F08  3001               	movlw	1
  2714  0F09  07A7               	addwf	strcspn@i,f
  2715  0F0A  3000               	movlw	0
  2716  0F0B  3DA8               	addwfc	strcspn@i+1,f
  2717  0F0C                     l2872:	
  2718  0F0C  0829               	movf	strcspn@s1,w
  2719  0F0D  0086               	movwf	6
  2720  0F0E  0187               	clrf	7
  2721  0F0F  0801               	movf	1,w
  2722  0F10  1903               	btfsc	3,2
  2723  0F11  2F27               	goto	l2876
  2724  0F12  0823               	movf	strcspn@s2,w
  2725  0F13  00F3               	movwf	strchr@ptr
  2726  0F14  0824               	movf	strcspn@s2+1,w
  2727  0F15  00F4               	movwf	strchr@ptr+1
  2728  0F16  0829               	movf	strcspn@s1,w
  2729  0F17  0086               	movwf	6
  2730  0F18  0187               	clrf	7
  2731  0F19  0801               	movf	1,w
  2732  0F1A  00A5               	movwf	??_strcspn
  2733  0F1B  01A6               	clrf	??_strcspn+1
  2734  0F1C  0825               	movf	??_strcspn,w
  2735  0F1D  00F5               	movwf	strchr@chr
  2736  0F1E  0826               	movf	??_strcspn+1,w
  2737  0F1F  00F6               	movwf	strchr@chr+1
  2738  0F20  318E  2625  318E   	fcall	_strchr
  2739  0F23  0873               	movf	?_strchr,w
  2740  0F24  0474               	iorwf	?_strchr+1,w
  2741  0F25  1903               	btfsc	3,2
  2742  0F26  2F03               	goto	l2870
  2743  0F27                     l2876:	
  2744  0F27  0020               	movlb	0	; select bank0
  2745  0F28  0828               	movf	strcspn@i+1,w
  2746  0F29  00A4               	movwf	?_strcspn+1
  2747  0F2A  0827               	movf	strcspn@i,w
  2748  0F2B  00A3               	movwf	?_strcspn
  2749  0F2C  0008               	return
  2750  0F2D                     __end_of_strcspn:	
  2751                           
  2752                           	psect	text7
  2753  0E25                     __ptext7:	
  2754 ;; *************** function _strchr *****************
  2755 ;; Defined at:
  2756 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strchr.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  ptr             2    3[COMMON] PTR const unsigned char 
  2759 ;;		 -> main@tokens(3), 
  2760 ;;  chr             2    5[COMMON] int 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  2    3[COMMON] PTR unsigned char 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;Total ram usage:        7 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    2
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_strcspn
  2783 ;;		_strspn
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _strchr
  2789  0E25                     _strchr:	
  2790  0E25                     l819:	
  2791                           ;incstack = 0
  2792                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  2793                           
  2794  0E25  0873               	movf	strchr@ptr,w
  2795  0E26  0084               	movwf	4
  2796  0E27  0874               	movf	strchr@ptr+1,w
  2797  0E28  0085               	movwf	5
  2798  0E29  0800               	movf	0,w	;code access
  2799  0E2A  0675               	xorwf	strchr@chr,w
  2800  0E2B  1903               	btfsc	3,2
  2801  0E2C  0008               	return
  2802  0E2D  0874               	movf	strchr@ptr+1,w
  2803  0E2E  0020               	movlb	0	; select bank0
  2804  0E2F  00A1               	movwf	??_strchr+1
  2805  0E30  0873               	movf	strchr@ptr,w
  2806  0E31  00A0               	movwf	??_strchr
  2807  0E32  0AF3               	incf	strchr@ptr,f
  2808  0E33  1903               	skipnz
  2809  0E34  0AF4               	incf	strchr@ptr+1,f
  2810  0E35  0820               	movf	??_strchr,w
  2811  0E36  0084               	movwf	4
  2812  0E37  0821               	movf	??_strchr+1,w
  2813  0E38  0085               	movwf	5
  2814  0E39  0012               	moviw fsr0++
  2815  0E3A  1D03               	btfss	3,2
  2816  0E3B  2E25               	goto	l819
  2817  0E3C  01F3               	clrf	?_strchr
  2818  0E3D  01F4               	clrf	?_strchr+1
  2819  0E3E  0008               	return
  2820  0E3F                     __end_of_strchr:	
  2821                           
  2822                           	psect	text8
  2823  0ED9                     __ptext8:	
  2824 ;; *************** function _strlen *****************
  2825 ;; Defined at:
  2826 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  s               1    wreg     PTR const unsigned char 
  2829 ;;		 -> main@line(32), NULL(0), 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  s               1    5[COMMON] PTR const unsigned char 
  2832 ;;		 -> main@line(32), NULL(0), 
  2833 ;;  cp              1    6[COMMON] PTR const unsigned char 
  2834 ;;		 -> main@line(32), NULL(0), 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  2    3[COMMON] unsigned int 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;Total ram usage:        8 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    2
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _strlen
  2860  0ED9                     _strlen:	
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  2864                           ;strlen@s stored from wreg
  2865  0ED9  00F5               	movwf	strlen@s
  2866  0EDA  0875               	movf	strlen@s,w
  2867  0EDB  0020               	movlb	0	; select bank0
  2868  0EDC  00A0               	movwf	??_strlen
  2869  0EDD  0820               	movf	??_strlen,w
  2870  0EDE  00F6               	movwf	strlen@cp
  2871  0EDF                     l2980:	
  2872  0EDF  0876               	movf	strlen@cp,w
  2873  0EE0  0086               	movwf	6
  2874  0EE1  0187               	clrf	7
  2875  0EE2  0801               	movf	1,w
  2876  0EE3  1903               	btfsc	3,2
  2877  0EE4  2EEA               	goto	l2982
  2878  0EE5  3001               	movlw	1
  2879  0EE6  00A0               	movwf	??_strlen
  2880  0EE7  0820               	movf	??_strlen,w
  2881  0EE8  07F6               	addwf	strlen@cp,f
  2882  0EE9  2EDF               	goto	l2980
  2883  0EEA                     l2982:	
  2884  0EEA  0875               	movf	strlen@s,w
  2885  0EEB  00A0               	movwf	??_strlen
  2886  0EEC  3000               	movlw	0
  2887  0EED  00A1               	movwf	??_strlen+1
  2888  0EEE  09A0               	comf	??_strlen,f
  2889  0EEF  09A1               	comf	??_strlen+1,f
  2890  0EF0  0AA0               	incf	??_strlen,f
  2891  0EF1  1903               	skipnz
  2892  0EF2  0AA1               	incf	??_strlen+1,f
  2893  0EF3  0876               	movf	strlen@cp,w
  2894  0EF4  00A2               	movwf	??_strlen+2
  2895  0EF5  3000               	movlw	0
  2896  0EF6  00A3               	movwf	??_strlen+3
  2897  0EF7  0820               	movf	??_strlen,w
  2898  0EF8  0722               	addwf	??_strlen+2,w
  2899  0EF9  00F3               	movwf	?_strlen
  2900  0EFA  0821               	movf	??_strlen+1,w
  2901  0EFB  3D23               	addwfc	??_strlen+3,w
  2902  0EFC  00F4               	movwf	?_strlen+1
  2903  0EFD  0008               	return
  2904  0EFE                     __end_of_strlen:	
  2905                           
  2906                           	psect	text9
  2907  07D2                     __ptext9:	
  2908 ;; *************** function _strcmp *****************
  2909 ;; Defined at:
  2910 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcmp.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  s1              1    wreg     PTR const unsigned char 
  2913 ;;		 -> main@line(32), NULL(0), 
  2914 ;;  s2              2    3[COMMON] PTR const unsigned char 
  2915 ;;		 -> STR_6(5), STR_4(5), STR_2(6), STR_1(4), 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  s1              1    7[COMMON] PTR const unsigned char 
  2918 ;;		 -> main@line(32), NULL(0), 
  2919 ;;  r               1    6[COMMON] char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  2    3[COMMON] int 
  2922 ;; Registers used:
  2923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;Total ram usage:        5 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    2
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_main
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function _strcmp
  2945  07D2                     _strcmp:	
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  2949                           ;strcmp@s1 stored from wreg
  2950  07D2  00F7               	movwf	strcmp@s1
  2951  07D3  2FDC               	goto	l2256
  2952  07D4                     l2254:	
  2953  07D4  3001               	movlw	1
  2954  07D5  00F5               	movwf	??_strcmp
  2955  07D6  0875               	movf	??_strcmp,w
  2956  07D7  07F7               	addwf	strcmp@s1,f
  2957  07D8  3001               	movlw	1
  2958  07D9  07F3               	addwf	strcmp@s2,f
  2959  07DA  3000               	movlw	0
  2960  07DB  3DF4               	addwfc	strcmp@s2+1,f
  2961  07DC                     l2256:	
  2962  07DC  0877               	movf	strcmp@s1,w
  2963  07DD  0086               	movwf	6
  2964  07DE  0187               	clrf	7
  2965  07DF  0873               	movf	strcmp@s2,w
  2966  07E0  0084               	movwf	4
  2967  07E1  0874               	movf	strcmp@s2+1,w
  2968  07E2  0085               	movwf	5
  2969  07E3  0800               	movf	0,w	;code access
  2970  07E4  3AFF               	xorlw	255
  2971  07E5  3E01               	addlw	1
  2972  07E6  0701               	addwf	1,w
  2973  07E7  00F5               	movwf	??_strcmp
  2974  07E8  0875               	movf	??_strcmp,w
  2975  07E9  00F6               	movwf	strcmp@r
  2976  07EA  0876               	movf	strcmp@r,w
  2977  07EB  1D03               	btfss	3,2
  2978  07EC  2FF3               	goto	l2260
  2979  07ED  0877               	movf	strcmp@s1,w
  2980  07EE  0086               	movwf	6
  2981  07EF  0187               	clrf	7
  2982  07F0  0801               	movf	1,w
  2983  07F1  1D03               	btfss	3,2
  2984  07F2  2FD4               	goto	l2254
  2985  07F3                     l2260:	
  2986  07F3  0876               	movf	strcmp@r,w
  2987  07F4  00F3               	movwf	?_strcmp
  2988  07F5  01F4               	clrf	?_strcmp+1
  2989  07F6  1BF3               	btfsc	?_strcmp,7
  2990  07F7  03F4               	decf	?_strcmp+1,f
  2991  07F8  0008               	return
  2992  07F9                     __end_of_strcmp:	
  2993                           
  2994                           	psect	text10
  2995  0E16                     __ptext10:	
  2996 ;; *************** function _setup *****************
  2997 ;; Defined at:
  2998 ;;		line 7 in file "settings.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2   31[None  ] int 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    4
  3019 ;; This function calls:
  3020 ;;		_uart_setup
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           
  3027                           ;psect for function _setup
  3028  0E16                     _setup:	
  3029                           
  3030                           ;settings.c: 8: uart_setup();
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3034  0E16  318E  2698         	fcall	_uart_setup
  3035                           
  3036                           ;settings.c: 9: TRISA = 0x00;
  3037  0E18  0021               	movlb	1	; select bank1
  3038  0E19  018C               	clrf	12	;volatile
  3039                           
  3040                           ;settings.c: 10: TRISB = 0b00001111;
  3041  0E1A  300F               	movlw	15
  3042  0E1B  008D               	movwf	13	;volatile
  3043                           
  3044                           ;settings.c: 11: TRISC = 0b10000000;
  3045  0E1C  3080               	movlw	128
  3046  0E1D  008E               	movwf	14	;volatile
  3047                           
  3048                           ;settings.c: 12: OSCCON = 0b11110000;
  3049  0E1E  30F0               	movlw	240
  3050  0E1F  0099               	movwf	25	;volatile
  3051                           
  3052                           ;settings.c: 13: ANSELA = 0x00;
  3053  0E20  0023               	movlb	3	; select bank3
  3054  0E21  018C               	clrf	12	;volatile
  3055                           
  3056                           ;settings.c: 14: ANSELB = 0x00;
  3057  0E22  018D               	clrf	13	;volatile
  3058                           
  3059                           ;settings.c: 16: GIE=1;
  3060  0E23  178B               	bsf	11,7	;volatile
  3061  0E24  0008               	return
  3062  0E25                     __end_of_setup:	
  3063                           
  3064                           	psect	text11
  3065  0E98                     __ptext11:	
  3066 ;; *************** function _uart_setup *****************
  3067 ;; Defined at:
  3068 ;;		line 14 in file "uart.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  2   15[None  ] int 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    3
  3089 ;; This function calls:
  3090 ;;		_memset
  3091 ;; This function is called by:
  3092 ;;		_setup
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _uart_setup
  3098  0E98                     _uart_setup:	
  3099                           
  3100                           ;uart.c: 16: memset(rxbuf,0,sizeof(rxbuf));
  3101                           
  3102                           ;incstack = 0
  3103                           ; Regs used in _uart_setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3104  0E98  3000               	movlw	0
  3105  0E99  00F3               	movwf	memset@c
  3106  0E9A  00F4               	movwf	memset@c+1
  3107  0E9B  3020               	movlw	32
  3108  0E9C  00F5               	movwf	memset@n
  3109  0E9D  3000               	movlw	0
  3110  0E9E  00F6               	movwf	memset@n+1
  3111  0E9F  30C0               	movlw	(low (_rxbuf| (0+256)))& (0+255)
  3112  0EA0  318E  263F         	fcall	_memset
  3113                           
  3114                           ;uart.c: 17: rx_in = 0;
  3115  0EA2  01F8               	clrf	_rx_in
  3116                           
  3117                           ;uart.c: 18: rx_out = 0;
  3118  0EA3  01F9               	clrf	_rx_out
  3119                           
  3120                           ;uart.c: 19: rx_used = 0;
  3121  0EA4  0020               	movlb	0	; select bank0
  3122  0EA5  01E8               	clrf	_rx_used
  3123                           
  3124                           ;uart.c: 21: SPBRG = 12;
  3125  0EA6  300C               	movlw	12
  3126  0EA7  0023               	movlb	3	; select bank3
  3127  0EA8  009B               	movwf	27	;volatile
  3128                           
  3129                           ;uart.c: 23: RCSTA = 0b10010000;
  3130  0EA9  3090               	movlw	144
  3131  0EAA  009D               	movwf	29	;volatile
  3132                           
  3133                           ;uart.c: 24: TXSTA = 0b00100000;
  3134  0EAB  3020               	movlw	32
  3135  0EAC  009E               	movwf	30	;volatile
  3136                           
  3137                           ;uart.c: 26: RCIF = 0;
  3138  0EAD  0020               	movlb	0	; select bank0
  3139  0EAE  1291               	bcf	17,5	;volatile
  3140                           
  3141                           ;uart.c: 27: RCIE = 1;
  3142  0EAF  0021               	movlb	1	; select bank1
  3143  0EB0  1691               	bsf	17,5	;volatile
  3144                           
  3145                           ;uart.c: 28: PEIE = 1;
  3146  0EB1  170B               	bsf	11,6	;volatile
  3147                           
  3148                           ;uart.c: 30: TXIE = 1;
  3149  0EB2  1611               	bsf	17,4	;volatile
  3150                           
  3151                           ;uart.c: 31: TXIE = 1;
  3152  0EB3  1611               	bsf	17,4	;volatile
  3153                           
  3154                           ;uart.c: 32: TXIF = 0;
  3155  0EB4  0020               	movlb	0	; select bank0
  3156  0EB5  1211               	bcf	17,4	;volatile
  3157  0EB6  0008               	return
  3158  0EB7                     __end_of_uart_setup:	
  3159                           
  3160                           	psect	text12
  3161  0E3F                     __ptext12:	
  3162 ;; *************** function _memset *****************
  3163 ;; Defined at:
  3164 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\memset.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  p1              1    wreg     PTR void 
  3167 ;;		 -> rxbuf(32), 
  3168 ;;  c               2    3[COMMON] int 
  3169 ;;  n               2    5[COMMON] unsigned int 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  p1              1    0[BANK0 ] PTR void 
  3172 ;;		 -> rxbuf(32), 
  3173 ;;  p               1    1[BANK0 ] PTR unsigned char 
  3174 ;;		 -> rxbuf(32), 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      PTR void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3188 ;;Total ram usage:        7 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    2
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_uart_setup
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function _memset
  3200  0E3F                     _memset:	
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  3204                           ;memset@p1 stored from wreg
  3205  0E3F  0020               	movlb	0	; select bank0
  3206  0E40  00A0               	movwf	memset@p1
  3207  0E41  0820               	movf	memset@p1,w
  3208  0E42  00F7               	movwf	??_memset
  3209  0E43  0877               	movf	??_memset,w
  3210  0E44  00A1               	movwf	memset@p
  3211  0E45                     l2686:	
  3212  0E45  3001               	movlw	1
  3213  0E46  02F5               	subwf	memset@n,f
  3214  0E47  3000               	movlw	0
  3215  0E48  3BF6               	subwfb	memset@n+1,f
  3216  0E49  0A75               	incf	memset@n,w
  3217  0E4A  1903               	btfsc	3,2
  3218  0E4B  0A76               	incf	memset@n+1,w
  3219  0E4C  1903               	btfsc	3,2
  3220  0E4D  0008               	return
  3221  0E4E  0873               	movf	memset@c,w
  3222  0E4F  00F7               	movwf	??_memset
  3223  0E50  0821               	movf	memset@p,w
  3224  0E51  0086               	movwf	6
  3225  0E52  3001               	movlw	1	; select bank2/3
  3226  0E53  0087               	movwf	7
  3227  0E54  0877               	movf	??_memset,w
  3228  0E55  0081               	movwf	1
  3229  0E56  3001               	movlw	1
  3230  0E57  00F7               	movwf	??_memset
  3231  0E58  0877               	movf	??_memset,w
  3232  0E59  07A1               	addwf	memset@p,f
  3233  0E5A  2E45               	goto	l2686
  3234  0E5B                     __end_of_memset:	
  3235                           ;	Return value of _memset is never used
  3236                           
  3237                           
  3238                           	psect	text13
  3239  0293                     __ptext13:	
  3240 ;; *************** function _right *****************
  3241 ;; Defined at:
  3242 ;;		line 25 in file "rotation.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  mal             2   63[BANK0 ] int 
  3245 ;;  speed           2   65[BANK0 ] int 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  i               2    4[BANK1 ] int 
  3248 ;;  k               2    2[BANK1 ] int 
  3249 ;;  pluse           2    0[BANK1 ] unsigned int 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;		None               void
  3252 ;; Registers used:
  3253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3259 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;      Totals:         0       7       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3263 ;;Total ram usage:       13 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    6
  3266 ;; This function calls:
  3267 ;;		_step
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _right
  3275  0293                     _right:	
  3276                           
  3277                           ;rotation.c: 26: int k = 0;
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _right: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3281  0293  0021               	movlb	1	; select bank1
  3282  0294  01A2               	clrf	right@k^(0+128)
  3283  0295  01A3               	clrf	(right@k+1)^(0+128)
  3284                           
  3285                           ;rotation.c: 27: uint16_t pluse = step(mal);
  3286  0296  0020               	movlb	0	; select bank0
  3287  0297  0860               	movf	right@mal+1,w
  3288  0298  00D9               	movwf	step@deg+1
  3289  0299  085F               	movf	right@mal,w
  3290  029A  00D8               	movwf	step@deg
  3291  029B  3187  270E  3182   	fcall	_step
  3292  029E  0020               	movlb	0	; select bank0
  3293  029F  0859               	movf	?_step+1,w
  3294  02A0  0021               	movlb	1	; select bank1
  3295  02A1  00A1               	movwf	(right@pluse+1)^(0+128)
  3296  02A2  0020               	movlb	0	; select bank0
  3297  02A3  0858               	movf	?_step,w
  3298  02A4  0021               	movlb	1	; select bank1
  3299  02A5  00A0               	movwf	right@pluse^(0+128)
  3300  02A6                     l2952:	
  3301                           ;rotation.c: 28: while(k < pluse-20){
  3302                           
  3303  02A6  0021               	movlb	1	; select bank1
  3304  02A7  0820               	movf	right@pluse^(0+128),w
  3305  02A8  3EEC               	addlw	236
  3306  02A9  0020               	movlb	0	; select bank0
  3307  02AA  00E3               	movwf	??_right
  3308  02AB  30FF               	movlw	255
  3309  02AC  0021               	movlb	1	; select bank1
  3310  02AD  3D21               	addwfc	(right@pluse+1)^(0+128),w
  3311  02AE  0020               	movlb	0	; select bank0
  3312  02AF  00E4               	movwf	??_right+1
  3313  02B0  0864               	movf	??_right+1,w
  3314  02B1  0021               	movlb	1	; select bank1
  3315  02B2  0223               	subwf	(right@k+1)^(0+128),w
  3316  02B3  1D03               	skipz
  3317  02B4  2AB9               	goto	u4155
  3318  02B5  0020               	movlb	0	; select bank0
  3319  02B6  0863               	movf	??_right,w
  3320  02B7  0021               	movlb	1	; select bank1
  3321  02B8  0222               	subwf	right@k^(0+128),w
  3322  02B9                     u4155:	
  3323  02B9  1803               	btfsc	3,0
  3324  02BA  0008               	return
  3325                           
  3326                           ;rotation.c: 29: for(int i = 0;i < 4;i++){
  3327  02BB  01A4               	clrf	right@i^(0+128)
  3328  02BC  01A5               	clrf	(right@i+1)^(0+128)
  3329  02BD                     L4:	
  3330  02BD  0825               	movf	(right@i+1)^(0+128),w
  3331  02BE  3A80               	xorlw	128
  3332  02BF  0020               	movlb	0	; select bank0
  3333  02C0  00E3               	movwf	??_right
  3334  02C1  3080               	movlw	128
  3335  02C2  0263               	subwf	??_right,w
  3336  02C3  1D03               	skipz
  3337  02C4  2AC8               	goto	u4015
  3338  02C5  3004               	movlw	4
  3339  02C6  0021               	movlb	1	; select bank1
  3340  02C7  0224               	subwf	right@i^(0+128),w
  3341  02C8                     u4015:	
  3342  02C8  1803               	btfsc	3,0
  3343  02C9  2AA6               	goto	l2952
  3344                           
  3345                           ;rotation.c: 30: RA0 = step_pattern_right[i][0];
  3346  02CA  0021               	movlb	1	; select bank1
  3347  02CB  0824               	movf	right@i^(0+128),w
  3348  02CC  0020               	movlb	0	; select bank0
  3349  02CD  00E3               	movwf	??_right
  3350  02CE  3002               	movlw	2
  3351  02CF                     u4025:	
  3352  02CF  35E3               	lslf	??_right,f
  3353  02D0  3EFF               	addlw	-1
  3354  02D1  1D03               	skipz
  3355  02D2  2ACF               	goto	u4025
  3356  02D3  3563               	lslf	??_right,w
  3357  02D4  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3358  02D5  0086               	movwf	6
  3359  02D6  3001               	movlw	1	; select bank2/3
  3360  02D7  0087               	movwf	7
  3361  02D8  3F40               	moviw [0]fsr1
  3362  02D9  00E4               	movwf	??_right+1
  3363  02DA  3F41               	moviw [1]fsr1
  3364  02DB  00E5               	movwf	??_right+2
  3365  02DC  1C64               	btfss	??_right+1,0
  3366  02DD  2AE1               	goto	u4030
  3367  02DE  0020               	movlb	0	; select bank0
  3368  02DF  140C               	bsf	12,0	;volatile
  3369  02E0  2AE3               	goto	u4044
  3370  02E1                     u4030:	
  3371  02E1  0020               	movlb	0	; select bank0
  3372  02E2  100C               	bcf	12,0	;volatile
  3373  02E3                     u4044:	
  3374                           
  3375                           ;rotation.c: 31: RA4 = step_pattern_right[i][1];
  3376  02E3  0021               	movlb	1	; select bank1
  3377  02E4  0824               	movf	right@i^(0+128),w
  3378  02E5  0020               	movlb	0	; select bank0
  3379  02E6  00E3               	movwf	??_right
  3380  02E7  3002               	movlw	2
  3381  02E8                     u4055:	
  3382  02E8  35E3               	lslf	??_right,f
  3383  02E9  3EFF               	addlw	-1
  3384  02EA  1D03               	skipz
  3385  02EB  2AE8               	goto	u4055
  3386  02EC  3563               	lslf	??_right,w
  3387  02ED  3E02               	addlw	2
  3388  02EE  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3389  02EF  0086               	movwf	6
  3390  02F0  3001               	movlw	1	; select bank2/3
  3391  02F1  0087               	movwf	7
  3392  02F2  3F40               	moviw [0]fsr1
  3393  02F3  00E4               	movwf	??_right+1
  3394  02F4  3F41               	moviw [1]fsr1
  3395  02F5  00E5               	movwf	??_right+2
  3396  02F6  1C64               	btfss	??_right+1,0
  3397  02F7  2AFB               	goto	u4060
  3398  02F8  0020               	movlb	0	; select bank0
  3399  02F9  160C               	bsf	12,4	;volatile
  3400  02FA  2AFD               	goto	u4074
  3401  02FB                     u4060:	
  3402  02FB  0020               	movlb	0	; select bank0
  3403  02FC  120C               	bcf	12,4	;volatile
  3404  02FD                     u4074:	
  3405                           
  3406                           ;rotation.c: 32: RC1 = step_pattern_right[i][2];
  3407  02FD  0021               	movlb	1	; select bank1
  3408  02FE  0824               	movf	right@i^(0+128),w
  3409  02FF  0020               	movlb	0	; select bank0
  3410  0300  00E3               	movwf	??_right
  3411  0301  3002               	movlw	2
  3412  0302                     u4085:	
  3413  0302  35E3               	lslf	??_right,f
  3414  0303  3EFF               	addlw	-1
  3415  0304  1D03               	skipz
  3416  0305  2B02               	goto	u4085
  3417  0306  3563               	lslf	??_right,w
  3418  0307  3E04               	addlw	4
  3419  0308  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3420  0309  0086               	movwf	6
  3421  030A  3001               	movlw	1	; select bank2/3
  3422  030B  0087               	movwf	7
  3423  030C  3F40               	moviw [0]fsr1
  3424  030D  00E4               	movwf	??_right+1
  3425  030E  3F41               	moviw [1]fsr1
  3426  030F  00E5               	movwf	??_right+2
  3427  0310  1C64               	btfss	??_right+1,0
  3428  0311  2B15               	goto	u4090
  3429  0312  0020               	movlb	0	; select bank0
  3430  0313  148E               	bsf	14,1	;volatile
  3431  0314  2B17               	goto	u4104
  3432  0315                     u4090:	
  3433  0315  0020               	movlb	0	; select bank0
  3434  0316  108E               	bcf	14,1	;volatile
  3435  0317                     u4104:	
  3436                           
  3437                           ;rotation.c: 33: RC2 = step_pattern_right[i][3];
  3438  0317  0021               	movlb	1	; select bank1
  3439  0318  0824               	movf	right@i^(0+128),w
  3440  0319  0020               	movlb	0	; select bank0
  3441  031A  00E3               	movwf	??_right
  3442  031B  3002               	movlw	2
  3443  031C                     u4115:	
  3444  031C  35E3               	lslf	??_right,f
  3445  031D  3EFF               	addlw	-1
  3446  031E  1D03               	skipz
  3447  031F  2B1C               	goto	u4115
  3448  0320  3563               	lslf	??_right,w
  3449  0321  3E06               	addlw	6
  3450  0322  3E40               	addlw	(low (_step_pattern_right| (0+256)))& (0+255)
  3451  0323  0086               	movwf	6
  3452  0324  3001               	movlw	1	; select bank2/3
  3453  0325  0087               	movwf	7
  3454  0326  3F40               	moviw [0]fsr1
  3455  0327  00E4               	movwf	??_right+1
  3456  0328  3F41               	moviw [1]fsr1
  3457  0329  00E5               	movwf	??_right+2
  3458  032A  1C64               	btfss	??_right+1,0
  3459  032B  2B2F               	goto	u4120
  3460  032C  0020               	movlb	0	; select bank0
  3461  032D  150E               	bsf	14,2	;volatile
  3462  032E  2B31               	goto	l2944
  3463  032F                     u4120:	
  3464  032F  0020               	movlb	0	; select bank0
  3465  0330  110E               	bcf	14,2	;volatile
  3466  0331                     l2944:	
  3467                           
  3468                           ;rotation.c: 34: _delay((unsigned long)((3000)*(8000000/4000000.0)));
  3469  0331  3008               	movlw	8
  3470  0332  00E4               	movwf	??_right+1
  3471  0333  30C9               	movlw	201
  3472  0334  00E3               	movwf	??_right
  3473  0335                     u4567:	
  3474  0335  0BE3               	decfsz	??_right,f
  3475  0336  2B35               	goto	u4567
  3476  0337  0BE4               	decfsz	??_right+1,f
  3477  0338  2B35               	goto	u4567
  3478  0339  3200               	nop2
  3479                           
  3480                           ;rotation.c: 35: k++;
  3481  033A  3001               	movlw	1
  3482  033B  0021               	movlb	1	; select bank1
  3483  033C  07A2               	addwf	right@k^(0+128),f
  3484  033D  3000               	movlw	0
  3485  033E  3DA3               	addwfc	(right@k+1)^(0+128),f
  3486  033F  3001               	movlw	1
  3487  0340  07A4               	addwf	right@i^(0+128),f
  3488  0341  3000               	movlw	0
  3489  0342  3DA5               	addwfc	(right@i+1)^(0+128),f
  3490  0343  2ABD               	goto	L4
  3491  0344                     __end_of_right:	
  3492                           
  3493                           	psect	text14
  3494  0344                     __ptext14:	
  3495 ;; *************** function _left *****************
  3496 ;; Defined at:
  3497 ;;		line 40 in file "rotation.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  mal             2   63[BANK0 ] int 
  3500 ;;  speed           2   65[BANK0 ] int 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  i               2    4[BANK1 ] int 
  3503 ;;  k               2    2[BANK1 ] int 
  3504 ;;  pluse           2    0[BANK1 ] unsigned int 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;		None               void
  3507 ;; Registers used:
  3508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Totals:         0       7       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;Total ram usage:       13 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    6
  3521 ;; This function calls:
  3522 ;;		_step
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _left
  3530  0344                     _left:	
  3531                           
  3532                           ;rotation.c: 41: int i;
  3533                           ;rotation.c: 42: int k = 0;
  3534                           
  3535                           ;incstack = 0
  3536                           ; Regs used in _left: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3537  0344  0021               	movlb	1	; select bank1
  3538  0345  01A2               	clrf	left@k^(0+128)
  3539  0346  01A3               	clrf	(left@k+1)^(0+128)
  3540                           
  3541                           ;rotation.c: 43: uint16_t pluse = step(mal);
  3542  0347  0020               	movlb	0	; select bank0
  3543  0348  0860               	movf	left@mal+1,w
  3544  0349  00D9               	movwf	step@deg+1
  3545  034A  085F               	movf	left@mal,w
  3546  034B  00D8               	movwf	step@deg
  3547  034C  3187  270E  3183   	fcall	_step
  3548  034F  0020               	movlb	0	; select bank0
  3549  0350  0859               	movf	?_step+1,w
  3550  0351  0021               	movlb	1	; select bank1
  3551  0352  00A1               	movwf	(left@pluse+1)^(0+128)
  3552  0353  0020               	movlb	0	; select bank0
  3553  0354  0858               	movf	?_step,w
  3554  0355  0021               	movlb	1	; select bank1
  3555  0356  00A0               	movwf	left@pluse^(0+128)
  3556  0357                     l2974:	
  3557                           ;rotation.c: 44: while(k < pluse-20){
  3558                           
  3559  0357  0021               	movlb	1	; select bank1
  3560  0358  0820               	movf	left@pluse^(0+128),w
  3561  0359  3EEC               	addlw	236
  3562  035A  0020               	movlb	0	; select bank0
  3563  035B  00E3               	movwf	??_left
  3564  035C  30FF               	movlw	255
  3565  035D  0021               	movlb	1	; select bank1
  3566  035E  3D21               	addwfc	(left@pluse+1)^(0+128),w
  3567  035F  0020               	movlb	0	; select bank0
  3568  0360  00E4               	movwf	??_left+1
  3569  0361  0864               	movf	??_left+1,w
  3570  0362  0021               	movlb	1	; select bank1
  3571  0363  0223               	subwf	(left@k+1)^(0+128),w
  3572  0364  1D03               	skipz
  3573  0365  2B6A               	goto	u4305
  3574  0366  0020               	movlb	0	; select bank0
  3575  0367  0863               	movf	??_left,w
  3576  0368  0021               	movlb	1	; select bank1
  3577  0369  0222               	subwf	left@k^(0+128),w
  3578  036A                     u4305:	
  3579  036A  1803               	btfsc	3,0
  3580  036B  0008               	return
  3581                           
  3582                           ;rotation.c: 45: for(i = 0;i < 4;i++){
  3583  036C  01A4               	clrf	left@i^(0+128)
  3584  036D  01A5               	clrf	(left@i+1)^(0+128)
  3585  036E                     L5:	
  3586  036E  0825               	movf	(left@i+1)^(0+128),w
  3587  036F  3A80               	xorlw	128
  3588  0370  0020               	movlb	0	; select bank0
  3589  0371  00E3               	movwf	??_left
  3590  0372  3080               	movlw	128
  3591  0373  0263               	subwf	??_left,w
  3592  0374  1D03               	skipz
  3593  0375  2B79               	goto	u4165
  3594  0376  3004               	movlw	4
  3595  0377  0021               	movlb	1	; select bank1
  3596  0378  0224               	subwf	left@i^(0+128),w
  3597  0379                     u4165:	
  3598  0379  1803               	btfsc	3,0
  3599  037A  2B57               	goto	l2974
  3600                           
  3601                           ;rotation.c: 46: RA0 = step_pattern_left[i][0];
  3602  037B  0021               	movlb	1	; select bank1
  3603  037C  0824               	movf	left@i^(0+128),w
  3604  037D  0020               	movlb	0	; select bank0
  3605  037E  00E3               	movwf	??_left
  3606  037F  3002               	movlw	2
  3607  0380                     u4175:	
  3608  0380  35E3               	lslf	??_left,f
  3609  0381  3EFF               	addlw	-1
  3610  0382  1D03               	skipz
  3611  0383  2B80               	goto	u4175
  3612  0384  3563               	lslf	??_left,w
  3613  0385  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3614  0386  0086               	movwf	6
  3615  0387  3001               	movlw	1	; select bank2/3
  3616  0388  0087               	movwf	7
  3617  0389  3F40               	moviw [0]fsr1
  3618  038A  00E4               	movwf	??_left+1
  3619  038B  3F41               	moviw [1]fsr1
  3620  038C  00E5               	movwf	??_left+2
  3621  038D  1C64               	btfss	??_left+1,0
  3622  038E  2B92               	goto	u4180
  3623  038F  0020               	movlb	0	; select bank0
  3624  0390  140C               	bsf	12,0	;volatile
  3625  0391  2B94               	goto	u4194
  3626  0392                     u4180:	
  3627  0392  0020               	movlb	0	; select bank0
  3628  0393  100C               	bcf	12,0	;volatile
  3629  0394                     u4194:	
  3630                           
  3631                           ;rotation.c: 47: RA4 = step_pattern_left[i][1];
  3632  0394  0021               	movlb	1	; select bank1
  3633  0395  0824               	movf	left@i^(0+128),w
  3634  0396  0020               	movlb	0	; select bank0
  3635  0397  00E3               	movwf	??_left
  3636  0398  3002               	movlw	2
  3637  0399                     u4205:	
  3638  0399  35E3               	lslf	??_left,f
  3639  039A  3EFF               	addlw	-1
  3640  039B  1D03               	skipz
  3641  039C  2B99               	goto	u4205
  3642  039D  3563               	lslf	??_left,w
  3643  039E  3E02               	addlw	2
  3644  039F  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3645  03A0  0086               	movwf	6
  3646  03A1  3001               	movlw	1	; select bank2/3
  3647  03A2  0087               	movwf	7
  3648  03A3  3F40               	moviw [0]fsr1
  3649  03A4  00E4               	movwf	??_left+1
  3650  03A5  3F41               	moviw [1]fsr1
  3651  03A6  00E5               	movwf	??_left+2
  3652  03A7  1C64               	btfss	??_left+1,0
  3653  03A8  2BAC               	goto	u4210
  3654  03A9  0020               	movlb	0	; select bank0
  3655  03AA  160C               	bsf	12,4	;volatile
  3656  03AB  2BAE               	goto	u4224
  3657  03AC                     u4210:	
  3658  03AC  0020               	movlb	0	; select bank0
  3659  03AD  120C               	bcf	12,4	;volatile
  3660  03AE                     u4224:	
  3661                           
  3662                           ;rotation.c: 48: RC1 = step_pattern_left[i][2];
  3663  03AE  0021               	movlb	1	; select bank1
  3664  03AF  0824               	movf	left@i^(0+128),w
  3665  03B0  0020               	movlb	0	; select bank0
  3666  03B1  00E3               	movwf	??_left
  3667  03B2  3002               	movlw	2
  3668  03B3                     u4235:	
  3669  03B3  35E3               	lslf	??_left,f
  3670  03B4  3EFF               	addlw	-1
  3671  03B5  1D03               	skipz
  3672  03B6  2BB3               	goto	u4235
  3673  03B7  3563               	lslf	??_left,w
  3674  03B8  3E04               	addlw	4
  3675  03B9  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3676  03BA  0086               	movwf	6
  3677  03BB  3001               	movlw	1	; select bank2/3
  3678  03BC  0087               	movwf	7
  3679  03BD  3F40               	moviw [0]fsr1
  3680  03BE  00E4               	movwf	??_left+1
  3681  03BF  3F41               	moviw [1]fsr1
  3682  03C0  00E5               	movwf	??_left+2
  3683  03C1  1C64               	btfss	??_left+1,0
  3684  03C2  2BC6               	goto	u4240
  3685  03C3  0020               	movlb	0	; select bank0
  3686  03C4  148E               	bsf	14,1	;volatile
  3687  03C5  2BC8               	goto	u4254
  3688  03C6                     u4240:	
  3689  03C6  0020               	movlb	0	; select bank0
  3690  03C7  108E               	bcf	14,1	;volatile
  3691  03C8                     u4254:	
  3692                           
  3693                           ;rotation.c: 49: RC2 = step_pattern_left[i][3];
  3694  03C8  0021               	movlb	1	; select bank1
  3695  03C9  0824               	movf	left@i^(0+128),w
  3696  03CA  0020               	movlb	0	; select bank0
  3697  03CB  00E3               	movwf	??_left
  3698  03CC  3002               	movlw	2
  3699  03CD                     u4265:	
  3700  03CD  35E3               	lslf	??_left,f
  3701  03CE  3EFF               	addlw	-1
  3702  03CF  1D03               	skipz
  3703  03D0  2BCD               	goto	u4265
  3704  03D1  3563               	lslf	??_left,w
  3705  03D2  3E06               	addlw	6
  3706  03D3  3E20               	addlw	(low (_step_pattern_left| (0+256)))& (0+255)
  3707  03D4  0086               	movwf	6
  3708  03D5  3001               	movlw	1	; select bank2/3
  3709  03D6  0087               	movwf	7
  3710  03D7  3F40               	moviw [0]fsr1
  3711  03D8  00E4               	movwf	??_left+1
  3712  03D9  3F41               	moviw [1]fsr1
  3713  03DA  00E5               	movwf	??_left+2
  3714  03DB  1C64               	btfss	??_left+1,0
  3715  03DC  2BE0               	goto	u4270
  3716  03DD  0020               	movlb	0	; select bank0
  3717  03DE  150E               	bsf	14,2	;volatile
  3718  03DF  2BE2               	goto	l2966
  3719  03E0                     u4270:	
  3720  03E0  0020               	movlb	0	; select bank0
  3721  03E1  110E               	bcf	14,2	;volatile
  3722  03E2                     l2966:	
  3723                           
  3724                           ;rotation.c: 50: _delay((unsigned long)((3000)*(8000000/4000000.0)));
  3725  03E2  3008               	movlw	8
  3726  03E3  00E4               	movwf	??_left+1
  3727  03E4  30C9               	movlw	201
  3728  03E5  00E3               	movwf	??_left
  3729  03E6                     u4577:	
  3730  03E6  0BE3               	decfsz	??_left,f
  3731  03E7  2BE6               	goto	u4577
  3732  03E8  0BE4               	decfsz	??_left+1,f
  3733  03E9  2BE6               	goto	u4577
  3734  03EA  3200               	nop2
  3735                           
  3736                           ;rotation.c: 51: k++;
  3737  03EB  3001               	movlw	1
  3738  03EC  0021               	movlb	1	; select bank1
  3739  03ED  07A2               	addwf	left@k^(0+128),f
  3740  03EE  3000               	movlw	0
  3741  03EF  3DA3               	addwfc	(left@k+1)^(0+128),f
  3742  03F0  3001               	movlw	1
  3743  03F1  07A4               	addwf	left@i^(0+128),f
  3744  03F2  3000               	movlw	0
  3745  03F3  3DA5               	addwfc	(left@i+1)^(0+128),f
  3746  03F4  2B6E               	goto	L5
  3747  03F5                     __end_of_left:	
  3748                           
  3749                           	psect	text15
  3750  070E                     __ptext15:	
  3751 ;; *************** function _step *****************
  3752 ;; Defined at:
  3753 ;;		line 20 in file "rotation.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  deg             2   56[BANK0 ] int 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  a               2   61[BANK0 ] unsigned int 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2   56[BANK0 ] int 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3767 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;Total ram usage:        7 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    5
  3774 ;; This function calls:
  3775 ;;		___awtoft
  3776 ;;		___ftdiv
  3777 ;;		___fttol
  3778 ;;		___wmul
  3779 ;;		_ceil
  3780 ;; This function is called by:
  3781 ;;		_right
  3782 ;;		_left
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _step
  3788  070E                     _step:	
  3789                           
  3790                           ;rotation.c: 21: uint16_t a=ceil(14*deg/1.8);
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _step: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3794  070E  300E               	movlw	14
  3795  070F  00F5               	movwf	___wmul@multiplicand
  3796  0710  3000               	movlw	0
  3797  0711  00F6               	movwf	___wmul@multiplicand+1
  3798  0712  0020               	movlb	0	; select bank0
  3799  0713  0859               	movf	step@deg+1,w
  3800  0714  00F4               	movwf	___wmul@multiplier+1
  3801  0715  0858               	movf	step@deg,w
  3802  0716  00F3               	movwf	___wmul@multiplier
  3803  0717  318E  265B  3187   	fcall	___wmul
  3804  071A  0874               	movf	?___wmul+1,w
  3805  071B  0020               	movlb	0	; select bank0
  3806  071C  00A4               	movwf	___awtoft@c+1
  3807  071D  0873               	movf	?___wmul,w
  3808  071E  00A3               	movwf	___awtoft@c
  3809  071F  318E  26B7  3187   	fcall	___awtoft
  3810  0722  0020               	movlb	0	; select bank0
  3811  0723  0823               	movf	?___awtoft,w
  3812  0724  00AC               	movwf	___ftdiv@f1
  3813  0725  0824               	movf	?___awtoft+1,w
  3814  0726  00AD               	movwf	___ftdiv@f1+1
  3815  0727  0825               	movf	?___awtoft+2,w
  3816  0728  00AE               	movwf	___ftdiv@f1+2
  3817  0729  3066               	movlw	102
  3818  072A  00A9               	movwf	___ftdiv@f2
  3819  072B  30E6               	movlw	230
  3820  072C  00AA               	movwf	___ftdiv@f2+1
  3821  072D  303F               	movlw	63
  3822  072E  00AB               	movwf	___ftdiv@f2+2
  3823  072F  3183  23F5  3187   	fcall	___ftdiv
  3824  0732  0020               	movlb	0	; select bank0
  3825  0733  0829               	movf	?___ftdiv,w
  3826  0734  00CF               	movwf	ceil@x
  3827  0735  082A               	movf	?___ftdiv+1,w
  3828  0736  00D0               	movwf	ceil@x+1
  3829  0737  082B               	movf	?___ftdiv+2,w
  3830  0738  00D1               	movwf	ceil@x+2
  3831  0739  3185  2525  3187   	fcall	_ceil
  3832  073C  0020               	movlb	0	; select bank0
  3833  073D  084F               	movf	?_ceil,w
  3834  073E  00DA               	movwf	_step$726
  3835  073F  0850               	movf	?_ceil+1,w
  3836  0740  00DB               	movwf	_step$726+1
  3837  0741  0851               	movf	?_ceil+2,w
  3838  0742  00DC               	movwf	_step$726+2
  3839                           
  3840                           ;rotation.c: 21: uint16_t a=ceil(14*deg/1.8);
  3841  0743  085A               	movf	_step$726,w
  3842  0744  00B9               	movwf	___fttol@f1
  3843  0745  085B               	movf	_step$726+1,w
  3844  0746  00BA               	movwf	___fttol@f1+1
  3845  0747  085C               	movf	_step$726+2,w
  3846  0748  00BB               	movwf	___fttol@f1+2
  3847  0749  3184  249E         	fcall	___fttol
  3848  074B  0020               	movlb	0	; select bank0
  3849  074C  083A               	movf	?___fttol+1,w
  3850  074D  00DE               	movwf	step@a+1
  3851  074E  0839               	movf	?___fttol,w
  3852  074F  00DD               	movwf	step@a
  3853                           
  3854                           ;rotation.c: 22: return a;
  3855  0750  085E               	movf	step@a+1,w
  3856  0751  00D9               	movwf	?_step+1
  3857  0752  085D               	movf	step@a,w
  3858  0753  00D8               	movwf	?_step
  3859  0754  0008               	return
  3860  0755                     __end_of_step:	
  3861                           
  3862                           	psect	text16
  3863  0525                     __ptext16:	
  3864 ;; *************** function _ceil *****************
  3865 ;; Defined at:
  3866 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ceil.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  x               3   47[BANK0 ] int 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  i               3   51[BANK0 ] int 
  3871 ;;  expon           2   54[BANK0 ] int 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  3   47[BANK0 ] int 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3881 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;Total ram usage:        9 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    4
  3888 ;; This function calls:
  3889 ;;		___altoft
  3890 ;;		___ftadd
  3891 ;;		___ftge
  3892 ;;		___fttol
  3893 ;;		_frexp
  3894 ;; This function is called by:
  3895 ;;		_step
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function _ceil
  3901  0525                     _ceil:	
  3902                           
  3903                           ;incstack = 0
  3904                           ; Regs used in _ceil: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3905  0525  0020               	movlb	0	; select bank0
  3906  0526  084F               	movf	ceil@x,w
  3907  0527  00F3               	movwf	frexp@value
  3908  0528  0850               	movf	ceil@x+1,w
  3909  0529  00F4               	movwf	frexp@value+1
  3910  052A  0851               	movf	ceil@x+2,w
  3911  052B  00F5               	movwf	frexp@value+2
  3912  052C  3056               	movlw	(low (ceil@expon| 0))& (0+255)
  3913  052D  00D2               	movwf	??_ceil
  3914  052E  0852               	movf	??_ceil,w
  3915  052F  00F6               	movwf	frexp@eptr
  3916  0530  318F  278E  3185   	fcall	_frexp
  3917  0533  0020               	movlb	0	; select bank0
  3918  0534  1FD7               	btfss	ceil@expon+1,7
  3919  0535  2D57               	goto	l2704
  3920  0536  3000               	movlw	0
  3921  0537  00A0               	movwf	___ftge@ff1
  3922  0538  3000               	movlw	0
  3923  0539  00A1               	movwf	___ftge@ff1+1
  3924  053A  3000               	movlw	0
  3925  053B  00A2               	movwf	___ftge@ff1+2
  3926  053C  084F               	movf	ceil@x,w
  3927  053D  00A3               	movwf	___ftge@ff2
  3928  053E  0850               	movf	ceil@x+1,w
  3929  053F  00A4               	movwf	___ftge@ff2+1
  3930  0540  0851               	movf	ceil@x+2,w
  3931  0541  00A5               	movwf	___ftge@ff2+2
  3932  0542  318F  27C4  3185   	fcall	___ftge
  3933  0545  1C03               	btfss	3,0
  3934  0546  2D4F               	goto	l2700
  3935  0547  3000               	movlw	0
  3936  0548  0020               	movlb	0	; select bank0
  3937  0549  00CF               	movwf	?_ceil
  3938  054A  3000               	movlw	0
  3939  054B  00D0               	movwf	?_ceil+1
  3940  054C  3000               	movlw	0
  3941  054D  00D1               	movwf	?_ceil+2
  3942  054E  0008               	return
  3943  054F                     l2700:	
  3944  054F  3000               	movlw	0
  3945  0550  0020               	movlb	0	; select bank0
  3946  0551  00CF               	movwf	?_ceil
  3947  0552  3080               	movlw	128
  3948  0553  00D0               	movwf	?_ceil+1
  3949  0554  303F               	movlw	63
  3950  0555  00D1               	movwf	?_ceil+2
  3951  0556  0008               	return
  3952  0557                     l2704:	
  3953  0557  3000               	movlw	0
  3954  0558  0257               	subwf	ceil@expon+1,w
  3955  0559  3015               	movlw	21
  3956  055A  1903               	skipnz
  3957  055B  0256               	subwf	ceil@expon,w
  3958  055C  1803               	btfsc	3,0
  3959  055D  0008               	return
  3960  055E  084F               	movf	ceil@x,w
  3961  055F  00B9               	movwf	___fttol@f1
  3962  0560  0850               	movf	ceil@x+1,w
  3963  0561  00BA               	movwf	___fttol@f1+1
  3964  0562  0851               	movf	ceil@x+2,w
  3965  0563  00BB               	movwf	___fttol@f1+2
  3966  0564  3184  249E  3185   	fcall	___fttol
  3967  0567  0020               	movlb	0	; select bank0
  3968  0568  083C               	movf	?___fttol+3,w
  3969  0569  00CA               	movwf	___altoft@c+3
  3970  056A  083B               	movf	?___fttol+2,w
  3971  056B  00C9               	movwf	___altoft@c+2
  3972  056C  083A               	movf	?___fttol+1,w
  3973  056D  00C8               	movwf	___altoft@c+1
  3974  056E  0839               	movf	?___fttol,w
  3975  056F  00C7               	movwf	___altoft@c
  3976  0570  3187  2795  3185   	fcall	___altoft
  3977  0573  0020               	movlb	0	; select bank0
  3978  0574  0847               	movf	?___altoft,w
  3979  0575  00D3               	movwf	ceil@i
  3980  0576  0848               	movf	?___altoft+1,w
  3981  0577  00D4               	movwf	ceil@i+1
  3982  0578  0849               	movf	?___altoft+2,w
  3983  0579  00D5               	movwf	ceil@i+2
  3984  057A  0853               	movf	ceil@i,w
  3985  057B  00A0               	movwf	___ftge@ff1
  3986  057C  0854               	movf	ceil@i+1,w
  3987  057D  00A1               	movwf	___ftge@ff1+1
  3988  057E  0855               	movf	ceil@i+2,w
  3989  057F  00A2               	movwf	___ftge@ff1+2
  3990  0580  084F               	movf	ceil@x,w
  3991  0581  00A3               	movwf	___ftge@ff2
  3992  0582  0850               	movf	ceil@x+1,w
  3993  0583  00A4               	movwf	___ftge@ff2+1
  3994  0584  0851               	movf	ceil@x+2,w
  3995  0585  00A5               	movwf	___ftge@ff2+2
  3996  0586  318F  27C4  3185   	fcall	___ftge
  3997  0589  1803               	btfsc	3,0
  3998  058A  2DA2               	goto	l2714
  3999  058B  3000               	movlw	0
  4000  058C  0020               	movlb	0	; select bank0
  4001  058D  00A3               	movwf	___ftadd@f1
  4002  058E  3080               	movlw	128
  4003  058F  00A4               	movwf	___ftadd@f1+1
  4004  0590  303F               	movlw	63
  4005  0591  00A5               	movwf	___ftadd@f1+2
  4006  0592  0853               	movf	ceil@i,w
  4007  0593  00A6               	movwf	___ftadd@f2
  4008  0594  0854               	movf	ceil@i+1,w
  4009  0595  00A7               	movwf	___ftadd@f2+1
  4010  0596  0855               	movf	ceil@i+2,w
  4011  0597  00A8               	movwf	___ftadd@f2+2
  4012  0598  3181  219D         	fcall	___ftadd
  4013  059A  0020               	movlb	0	; select bank0
  4014  059B  0823               	movf	?___ftadd,w
  4015  059C  00CF               	movwf	?_ceil
  4016  059D  0824               	movf	?___ftadd+1,w
  4017  059E  00D0               	movwf	?_ceil+1
  4018  059F  0825               	movf	?___ftadd+2,w
  4019  05A0  00D1               	movwf	?_ceil+2
  4020  05A1  0008               	return
  4021  05A2                     l2714:	
  4022  05A2  0020               	movlb	0	; select bank0
  4023  05A3  0853               	movf	ceil@i,w
  4024  05A4  00CF               	movwf	?_ceil
  4025  05A5  0854               	movf	ceil@i+1,w
  4026  05A6  00D0               	movwf	?_ceil+1
  4027  05A7  0855               	movf	ceil@i+2,w
  4028  05A8  00D1               	movwf	?_ceil+2
  4029  05A9  0008               	return
  4030  05AA                     __end_of_ceil:	
  4031                           
  4032                           	psect	text17
  4033  0F8E                     __ptext17:	
  4034 ;; *************** function _frexp *****************
  4035 ;; Defined at:
  4036 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  value           3    3[COMMON] int 
  4039 ;;  eptr            1    6[COMMON] PTR int 
  4040 ;;		 -> ceil@expon(2), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  3    3[COMMON] PTR int 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;Total ram usage:        6 bytes
  4057 ;; Hardware stack levels used:    1
  4058 ;; Hardware stack levels required when called:    2
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_ceil
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           
  4067                           ;psect for function _frexp
  4068  0F8E                     _frexp:	
  4069                           
  4070                           ;incstack = 0
  4071                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4072  0F8E  0875               	movf	frexp@value+2,w
  4073  0F8F  0474               	iorwf	frexp@value+1,w
  4074  0F90  0473               	iorwf	frexp@value,w
  4075  0F91  1D03               	skipz
  4076  0F92  2F9A               	goto	l2538
  4077  0F93  0876               	movf	frexp@eptr,w
  4078  0F94  0086               	movwf	6
  4079  0F95  0187               	clrf	7
  4080  0F96  3000               	movlw	0
  4081  0F97  3FC0               	movwi [0]fsr1
  4082  0F98  3FC1               	movwi [1]fsr1
  4083                           
  4084                           ;	Return value of _frexp is never used
  4085  0F99  0008               	return
  4086  0F9A                     l2538:	
  4087  0F9A  0875               	movf	frexp@value+2,w
  4088  0F9B  397F               	andlw	127
  4089  0F9C  0020               	movlb	0	; select bank0
  4090  0F9D  00A0               	movwf	??_frexp
  4091  0F9E  01A1               	clrf	??_frexp+1
  4092  0F9F  35A0               	lslf	??_frexp,f
  4093  0FA0  0DA1               	rlf	??_frexp+1,f
  4094  0FA1  0876               	movf	frexp@eptr,w
  4095  0FA2  0086               	movwf	6
  4096  0FA3  0187               	clrf	7
  4097  0FA4  0820               	movf	??_frexp,w
  4098  0FA5  3FC0               	movwi [0]fsr1
  4099  0FA6  0821               	movf	??_frexp+1,w
  4100  0FA7  3FC1               	movwi [1]fsr1
  4101  0FA8  0D74               	rlf	frexp@value+1,w
  4102  0FA9  0D74               	rlf	frexp@value+1,w
  4103  0FAA  3901               	andlw	1
  4104  0FAB  00A0               	movwf	??_frexp
  4105  0FAC  01A1               	clrf	??_frexp+1
  4106  0FAD  0876               	movf	frexp@eptr,w
  4107  0FAE  0086               	movwf	6
  4108  0FAF  0187               	clrf	7
  4109  0FB0  0820               	movf	??_frexp,w
  4110  0FB1  0481               	iorwf	1,f
  4111  0FB2  3141               	addfsr 1,1
  4112  0FB3  0821               	movf	??_frexp+1,w
  4113  0FB4  0481               	iorwf	1,f
  4114  0FB5  0876               	movf	frexp@eptr,w
  4115  0FB6  0086               	movwf	6
  4116  0FB7  0187               	clrf	7
  4117  0FB8  3082               	movlw	130
  4118  0FB9  0781               	addwf	1,f
  4119  0FBA  3141               	addfsr 1,1
  4120  0FBB  30FF               	movlw	255
  4121  0FBC  3D81               	addwfc	1,f
  4122  0FBD  317F               	addfsr 1,-1
  4123  0FBE  0875               	movf	frexp@value+2,w
  4124  0FBF  3980               	andlw	-128
  4125  0FC0  383F               	iorlw	63
  4126  0FC1  00F5               	movwf	frexp@value+2
  4127  0FC2  13F4               	bcf	frexp@value+1,7
  4128  0FC3  0008               	return
  4129  0FC4                     __end_of_frexp:	
  4130                           ;	Return value of _frexp is never used
  4131                           
  4132                           
  4133                           	psect	text18
  4134  049E                     __ptext18:	
  4135 ;; *************** function ___fttol *****************
  4136 ;; Defined at:
  4137 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  f1              3   25[BANK0 ] float 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  lval            4   34[BANK0 ] unsigned long 
  4142 ;;  exp1            1   38[BANK0 ] unsigned char 
  4143 ;;  sign1           1   33[BANK0 ] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  4   25[BANK0 ] long 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4153 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;Total ram usage:       14 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; Hardware stack levels required when called:    2
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_step
  4164 ;;		_ceil
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function ___fttol
  4170  049E                     ___fttol:	
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4174  049E  0020               	movlb	0	; select bank0
  4175  049F  0839               	movf	___fttol@f1,w
  4176  04A0  00BD               	movwf	??___fttol
  4177  04A1  083A               	movf	___fttol@f1+1,w
  4178  04A2  00BE               	movwf	??___fttol+1
  4179  04A3  083B               	movf	___fttol@f1+2,w
  4180  04A4  00BF               	movwf	??___fttol+2
  4181  04A5  1003               	clrc
  4182  04A6  0D3E               	rlf	??___fttol+1,w
  4183  04A7  0D3F               	rlf	??___fttol+2,w
  4184  04A8  00C0               	movwf	??___fttol+3
  4185  04A9  0840               	movf	??___fttol+3,w
  4186  04AA  00C6               	movwf	___fttol@exp1
  4187  04AB  0846               	movf	___fttol@exp1,w
  4188  04AC  1D03               	btfss	3,2
  4189  04AD  2CB7               	goto	l2644
  4190  04AE  3000               	movlw	0
  4191  04AF  00BC               	movwf	?___fttol+3
  4192  04B0  3000               	movlw	0
  4193  04B1  00BB               	movwf	?___fttol+2
  4194  04B2  3000               	movlw	0
  4195  04B3  00BA               	movwf	?___fttol+1
  4196  04B4  3000               	movlw	0
  4197  04B5  00B9               	movwf	?___fttol
  4198  04B6  0008               	return
  4199  04B7                     l2644:	
  4200  04B7  0839               	movf	___fttol@f1,w
  4201  04B8  00BD               	movwf	??___fttol
  4202  04B9  083A               	movf	___fttol@f1+1,w
  4203  04BA  00BE               	movwf	??___fttol+1
  4204  04BB  083B               	movf	___fttol@f1+2,w
  4205  04BC  00BF               	movwf	??___fttol+2
  4206  04BD  3017               	movlw	23
  4207  04BE                     u3625:	
  4208  04BE  36BF               	lsrf	??___fttol+2,f
  4209  04BF  0CBE               	rrf	??___fttol+1,f
  4210  04C0  0CBD               	rrf	??___fttol,f
  4211  04C1  0B89               	decfsz	9,f
  4212  04C2  2CBE               	goto	u3625
  4213  04C3  083D               	movf	??___fttol,w
  4214  04C4  00C0               	movwf	??___fttol+3
  4215  04C5  0840               	movf	??___fttol+3,w
  4216  04C6  00C1               	movwf	___fttol@sign1
  4217  04C7  17BA               	bsf	___fttol@f1+1,7
  4218  04C8  30FF               	movlw	255
  4219  04C9  05B9               	andwf	___fttol@f1,f
  4220  04CA  30FF               	movlw	255
  4221  04CB  05BA               	andwf	___fttol@f1+1,f
  4222  04CC  3000               	movlw	0
  4223  04CD  05BB               	andwf	___fttol@f1+2,f
  4224  04CE  0839               	movf	___fttol@f1,w
  4225  04CF  00C2               	movwf	___fttol@lval
  4226  04D0  083A               	movf	___fttol@f1+1,w
  4227  04D1  00C3               	movwf	___fttol@lval+1
  4228  04D2  083B               	movf	___fttol@f1+2,w
  4229  04D3  00C4               	movwf	___fttol@lval+2
  4230  04D4  01C5               	clrf	___fttol@lval+3
  4231  04D5  308E               	movlw	142
  4232  04D6  02C6               	subwf	___fttol@exp1,f
  4233  04D7  1FC6               	btfss	___fttol@exp1,7
  4234  04D8  2CF5               	goto	l2664
  4235  04D9  0846               	movf	___fttol@exp1,w
  4236  04DA  3A80               	xorlw	128
  4237  04DB  3E8F               	addlw	143
  4238  04DC  1803               	skipnc
  4239  04DD  2CE7               	goto	l2662
  4240  04DE  3000               	movlw	0
  4241  04DF  00BC               	movwf	?___fttol+3
  4242  04E0  3000               	movlw	0
  4243  04E1  00BB               	movwf	?___fttol+2
  4244  04E2  3000               	movlw	0
  4245  04E3  00BA               	movwf	?___fttol+1
  4246  04E4  3000               	movlw	0
  4247  04E5  00B9               	movwf	?___fttol
  4248  04E6  0008               	return
  4249  04E7                     l2662:	
  4250  04E7  3001               	movlw	1
  4251  04E8                     u3655:	
  4252  04E8  36C5               	lsrf	___fttol@lval+3,f
  4253  04E9  0CC4               	rrf	___fttol@lval+2,f
  4254  04EA  0CC3               	rrf	___fttol@lval+1,f
  4255  04EB  0CC2               	rrf	___fttol@lval,f
  4256  04EC  0B89               	decfsz	9,f
  4257  04ED  2CE8               	goto	u3655
  4258  04EE  3001               	movlw	1
  4259  04EF  00BD               	movwf	??___fttol
  4260  04F0  083D               	movf	??___fttol,w
  4261  04F1  07C6               	addwf	___fttol@exp1,f
  4262  04F2  1903               	btfsc	3,2
  4263  04F3  2D0E               	goto	l2672
  4264  04F4  2CE7               	goto	l2662
  4265  04F5                     l2664:	
  4266  04F5  3018               	movlw	24
  4267  04F6  0246               	subwf	___fttol@exp1,w
  4268  04F7  1C03               	skipc
  4269  04F8  2D0B               	goto	l653
  4270  04F9  3000               	movlw	0
  4271  04FA  00BC               	movwf	?___fttol+3
  4272  04FB  3000               	movlw	0
  4273  04FC  00BB               	movwf	?___fttol+2
  4274  04FD  3000               	movlw	0
  4275  04FE  00BA               	movwf	?___fttol+1
  4276  04FF  3000               	movlw	0
  4277  0500  00B9               	movwf	?___fttol
  4278  0501  0008               	return
  4279  0502                     l2670:	
  4280  0502  3001               	movlw	1
  4281  0503                     u3685:	
  4282  0503  35C2               	lslf	___fttol@lval,f
  4283  0504  0DC3               	rlf	___fttol@lval+1,f
  4284  0505  0DC4               	rlf	___fttol@lval+2,f
  4285  0506  0DC5               	rlf	___fttol@lval+3,f
  4286  0507  0B89               	decfsz	9,f
  4287  0508  2D03               	goto	u3685
  4288  0509  3001               	movlw	1
  4289  050A  02C6               	subwf	___fttol@exp1,f
  4290  050B                     l653:	
  4291  050B  0846               	movf	___fttol@exp1,w
  4292  050C  1D03               	btfss	3,2
  4293  050D  2D02               	goto	l2670
  4294  050E                     l2672:	
  4295  050E  0841               	movf	___fttol@sign1,w
  4296  050F  1903               	btfsc	3,2
  4297  0510  2D1C               	goto	l2676
  4298  0511  09C2               	comf	___fttol@lval,f
  4299  0512  09C3               	comf	___fttol@lval+1,f
  4300  0513  09C4               	comf	___fttol@lval+2,f
  4301  0514  09C5               	comf	___fttol@lval+3,f
  4302  0515  0AC2               	incf	___fttol@lval,f
  4303  0516  1903               	skipnz
  4304  0517  0AC3               	incf	___fttol@lval+1,f
  4305  0518  1903               	skipnz
  4306  0519  0AC4               	incf	___fttol@lval+2,f
  4307  051A  1903               	skipnz
  4308  051B  0AC5               	incf	___fttol@lval+3,f
  4309  051C                     l2676:	
  4310  051C  0845               	movf	___fttol@lval+3,w
  4311  051D  00BC               	movwf	?___fttol+3
  4312  051E  0844               	movf	___fttol@lval+2,w
  4313  051F  00BB               	movwf	?___fttol+2
  4314  0520  0843               	movf	___fttol@lval+1,w
  4315  0521  00BA               	movwf	?___fttol+1
  4316  0522  0842               	movf	___fttol@lval,w
  4317  0523  00B9               	movwf	?___fttol
  4318  0524  0008               	return
  4319  0525                     __end_of___fttol:	
  4320                           
  4321                           	psect	text19
  4322  0FC4                     __ptext19:	
  4323 ;; *************** function ___ftge *****************
  4324 ;; Defined at:
  4325 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  ff1             3    0[BANK0 ] float 
  4328 ;;  ff2             3    3[BANK0 ] float 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;		None               void
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4340 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4343 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4344 ;;Total ram usage:        9 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    2
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_ceil
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           
  4355                           ;psect for function ___ftge
  4356  0FC4                     ___ftge:	
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  4360  0FC4  0020               	movlb	0	; select bank0
  4361  0FC5  1FA2               	btfss	___ftge@ff1+2,7
  4362  0FC6  2FDB               	goto	l2622
  4363  0FC7  0920               	comf	___ftge@ff1,w
  4364  0FC8  00F3               	movwf	??___ftge
  4365  0FC9  0921               	comf	___ftge@ff1+1,w
  4366  0FCA  00F4               	movwf	??___ftge+1
  4367  0FCB  0922               	comf	___ftge@ff1+2,w
  4368  0FCC  00F5               	movwf	??___ftge+2
  4369  0FCD  0AF3               	incf	??___ftge,f
  4370  0FCE  1903               	skipnz
  4371  0FCF  0AF4               	incf	??___ftge+1,f
  4372  0FD0  1903               	skipnz
  4373  0FD1  0AF5               	incf	??___ftge+2,f
  4374  0FD2  3000               	movlw	0
  4375  0FD3  0773               	addwf	??___ftge,w
  4376  0FD4  00A0               	movwf	___ftge@ff1
  4377  0FD5  3000               	movlw	0
  4378  0FD6  3D74               	addwfc	??___ftge+1,w
  4379  0FD7  00A1               	movwf	___ftge@ff1+1
  4380  0FD8  3080               	movlw	128
  4381  0FD9  3D75               	addwfc	??___ftge+2,w
  4382  0FDA  00A2               	movwf	___ftge@ff1+2
  4383  0FDB                     l2622:	
  4384  0FDB  1FA5               	btfss	___ftge@ff2+2,7
  4385  0FDC  2FF1               	goto	l2626
  4386  0FDD  0923               	comf	___ftge@ff2,w
  4387  0FDE  00F3               	movwf	??___ftge
  4388  0FDF  0924               	comf	___ftge@ff2+1,w
  4389  0FE0  00F4               	movwf	??___ftge+1
  4390  0FE1  0925               	comf	___ftge@ff2+2,w
  4391  0FE2  00F5               	movwf	??___ftge+2
  4392  0FE3  0AF3               	incf	??___ftge,f
  4393  0FE4  1903               	skipnz
  4394  0FE5  0AF4               	incf	??___ftge+1,f
  4395  0FE6  1903               	skipnz
  4396  0FE7  0AF5               	incf	??___ftge+2,f
  4397  0FE8  3000               	movlw	0
  4398  0FE9  0773               	addwf	??___ftge,w
  4399  0FEA  00A3               	movwf	___ftge@ff2
  4400  0FEB  3000               	movlw	0
  4401  0FEC  3D74               	addwfc	??___ftge+1,w
  4402  0FED  00A4               	movwf	___ftge@ff2+1
  4403  0FEE  3080               	movlw	128
  4404  0FEF  3D75               	addwfc	??___ftge+2,w
  4405  0FF0  00A5               	movwf	___ftge@ff2+2
  4406  0FF1                     l2626:	
  4407  0FF1  3080               	movlw	128
  4408  0FF2  06A2               	xorwf	___ftge@ff1+2,f
  4409  0FF3  3080               	movlw	128
  4410  0FF4  06A5               	xorwf	___ftge@ff2+2,f
  4411  0FF5  0825               	movf	___ftge@ff2+2,w
  4412  0FF6  0222               	subwf	___ftge@ff1+2,w
  4413  0FF7  1D03               	skipz
  4414  0FF8  0008               	return
  4415  0FF9  0824               	movf	___ftge@ff2+1,w
  4416  0FFA  0221               	subwf	___ftge@ff1+1,w
  4417  0FFB  1D03               	skipz
  4418  0FFC  0008               	return
  4419  0FFD  0823               	movf	___ftge@ff2,w
  4420  0FFE  0220               	subwf	___ftge@ff1,w
  4421  0FFF  0008               	return
  4422  1000                     __end_of___ftge:	
  4423                           
  4424                           	psect	text20
  4425  019D                     __ptext20:	
  4426 ;; *************** function ___ftadd *****************
  4427 ;; Defined at:
  4428 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  f1              3    3[BANK0 ] float 
  4431 ;;  f2              3    6[BANK0 ] float 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  exp1            1   15[BANK0 ] unsigned char 
  4434 ;;  exp2            1   14[BANK0 ] unsigned char 
  4435 ;;  sign            1   13[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  3    3[BANK0 ] float 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4445 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4447 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;Total ram usage:       13 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    3
  4452 ;; This function calls:
  4453 ;;		___ftpack
  4454 ;; This function is called by:
  4455 ;;		_ceil
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           
  4460                           ;psect for function ___ftadd
  4461  019D                     ___ftadd:	
  4462                           
  4463                           ;incstack = 0
  4464                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4465  019D  0020               	movlb	0	; select bank0
  4466  019E  0823               	movf	___ftadd@f1,w
  4467  019F  00A9               	movwf	??___ftadd
  4468  01A0  0824               	movf	___ftadd@f1+1,w
  4469  01A1  00AA               	movwf	??___ftadd+1
  4470  01A2  0825               	movf	___ftadd@f1+2,w
  4471  01A3  00AB               	movwf	??___ftadd+2
  4472  01A4  1003               	clrc
  4473  01A5  0D2A               	rlf	??___ftadd+1,w
  4474  01A6  0D2B               	rlf	??___ftadd+2,w
  4475  01A7  00AC               	movwf	??___ftadd+3
  4476  01A8  082C               	movf	??___ftadd+3,w
  4477  01A9  00AF               	movwf	___ftadd@exp1
  4478  01AA  0826               	movf	___ftadd@f2,w
  4479  01AB  00A9               	movwf	??___ftadd
  4480  01AC  0827               	movf	___ftadd@f2+1,w
  4481  01AD  00AA               	movwf	??___ftadd+1
  4482  01AE  0828               	movf	___ftadd@f2+2,w
  4483  01AF  00AB               	movwf	??___ftadd+2
  4484  01B0  1003               	clrc
  4485  01B1  0D2A               	rlf	??___ftadd+1,w
  4486  01B2  0D2B               	rlf	??___ftadd+2,w
  4487  01B3  00AC               	movwf	??___ftadd+3
  4488  01B4  082C               	movf	??___ftadd+3,w
  4489  01B5  00AE               	movwf	___ftadd@exp2
  4490  01B6  082F               	movf	___ftadd@exp1,w
  4491  01B7  1903               	btfsc	3,2
  4492  01B8  29C5               	goto	l2554
  4493  01B9  082E               	movf	___ftadd@exp2,w
  4494  01BA  022F               	subwf	___ftadd@exp1,w
  4495  01BB  1803               	skipnc
  4496  01BC  29CC               	goto	l2558
  4497  01BD  032F               	decf	___ftadd@exp1,w
  4498  01BE  3AFF               	xorlw	255
  4499  01BF  072E               	addwf	___ftadd@exp2,w
  4500  01C0  00A9               	movwf	??___ftadd
  4501  01C1  3019               	movlw	25
  4502  01C2  0229               	subwf	??___ftadd,w
  4503  01C3  1C03               	skipc
  4504  01C4  29CC               	goto	l2558
  4505  01C5                     l2554:	
  4506  01C5  0826               	movf	___ftadd@f2,w
  4507  01C6  00A3               	movwf	?___ftadd
  4508  01C7  0827               	movf	___ftadd@f2+1,w
  4509  01C8  00A4               	movwf	?___ftadd+1
  4510  01C9  0828               	movf	___ftadd@f2+2,w
  4511  01CA  00A5               	movwf	?___ftadd+2
  4512  01CB  0008               	return
  4513  01CC                     l2558:	
  4514  01CC  082E               	movf	___ftadd@exp2,w
  4515  01CD  1903               	btfsc	3,2
  4516  01CE  0008               	return
  4517  01CF  082F               	movf	___ftadd@exp1,w
  4518  01D0  022E               	subwf	___ftadd@exp2,w
  4519  01D1  1803               	skipnc
  4520  01D2  29DB               	goto	l2564
  4521  01D3  032E               	decf	___ftadd@exp2,w
  4522  01D4  3AFF               	xorlw	255
  4523  01D5  072F               	addwf	___ftadd@exp1,w
  4524  01D6  00A9               	movwf	??___ftadd
  4525  01D7  3019               	movlw	25
  4526  01D8  0229               	subwf	??___ftadd,w
  4527  01D9  1803               	btfsc	3,0
  4528  01DA  0008               	return
  4529  01DB                     l2564:	
  4530  01DB  3006               	movlw	6
  4531  01DC  00A9               	movwf	??___ftadd
  4532  01DD  0829               	movf	??___ftadd,w
  4533  01DE  00AD               	movwf	___ftadd@sign
  4534  01DF  1BA5               	btfsc	___ftadd@f1+2,7
  4535  01E0  17AD               	bsf	___ftadd@sign,7
  4536  01E1  1BA8               	btfsc	___ftadd@f2+2,7
  4537  01E2  172D               	bsf	___ftadd@sign,6
  4538  01E3  17A4               	bsf	___ftadd@f1+1,7
  4539  01E4  30FF               	movlw	255
  4540  01E5  05A3               	andwf	___ftadd@f1,f
  4541  01E6  30FF               	movlw	255
  4542  01E7  05A4               	andwf	___ftadd@f1+1,f
  4543  01E8  3000               	movlw	0
  4544  01E9  05A5               	andwf	___ftadd@f1+2,f
  4545  01EA  17A7               	bsf	___ftadd@f2+1,7
  4546  01EB  30FF               	movlw	255
  4547  01EC  05A6               	andwf	___ftadd@f2,f
  4548  01ED  30FF               	movlw	255
  4549  01EE  05A7               	andwf	___ftadd@f2+1,f
  4550  01EF  3000               	movlw	0
  4551  01F0  05A8               	andwf	___ftadd@f2+2,f
  4552  01F1  082E               	movf	___ftadd@exp2,w
  4553  01F2  022F               	subwf	___ftadd@exp1,w
  4554  01F3  1803               	skipnc
  4555  01F4  2A17               	goto	l2586
  4556  01F5                     l2576:	
  4557  01F5  3001               	movlw	1
  4558  01F6                     u3445:	
  4559  01F6  35A6               	lslf	___ftadd@f2,f
  4560  01F7  0DA7               	rlf	___ftadd@f2+1,f
  4561  01F8  0DA8               	rlf	___ftadd@f2+2,f
  4562  01F9  0B89               	decfsz	9,f
  4563  01FA  29F6               	goto	u3445
  4564  01FB  3001               	movlw	1
  4565  01FC  02AE               	subwf	___ftadd@exp2,f
  4566  01FD  082E               	movf	___ftadd@exp2,w
  4567  01FE  062F               	xorwf	___ftadd@exp1,w
  4568  01FF  1903               	skipnz
  4569  0200  2A12               	goto	l2584
  4570  0201  3001               	movlw	1
  4571  0202  02AD               	subwf	___ftadd@sign,f
  4572  0203  082D               	movf	___ftadd@sign,w
  4573  0204  3907               	andlw	7
  4574  0205  1903               	btfsc	3,2
  4575  0206  2A12               	goto	l2584
  4576  0207  29F5               	goto	l2576
  4577  0208                     l2582:	
  4578  0208  3001               	movlw	1
  4579  0209                     u3475:	
  4580  0209  36A5               	lsrf	___ftadd@f1+2,f
  4581  020A  0CA4               	rrf	___ftadd@f1+1,f
  4582  020B  0CA3               	rrf	___ftadd@f1,f
  4583  020C  0B89               	decfsz	9,f
  4584  020D  2A09               	goto	u3475
  4585  020E  3001               	movlw	1
  4586  020F  00A9               	movwf	??___ftadd
  4587  0210  0829               	movf	??___ftadd,w
  4588  0211  07AF               	addwf	___ftadd@exp1,f
  4589  0212                     l2584:	
  4590  0212  082F               	movf	___ftadd@exp1,w
  4591  0213  062E               	xorwf	___ftadd@exp2,w
  4592  0214  1903               	btfsc	3,2
  4593  0215  2A3C               	goto	l593
  4594  0216  2A08               	goto	l2582
  4595  0217                     l2586:	
  4596  0217  082F               	movf	___ftadd@exp1,w
  4597  0218  022E               	subwf	___ftadd@exp2,w
  4598  0219  1803               	skipnc
  4599  021A  2A3C               	goto	l593
  4600  021B                     l2588:	
  4601  021B  3001               	movlw	1
  4602  021C                     u3505:	
  4603  021C  35A3               	lslf	___ftadd@f1,f
  4604  021D  0DA4               	rlf	___ftadd@f1+1,f
  4605  021E  0DA5               	rlf	___ftadd@f1+2,f
  4606  021F  0B89               	decfsz	9,f
  4607  0220  2A1C               	goto	u3505
  4608  0221  3001               	movlw	1
  4609  0222  02AF               	subwf	___ftadd@exp1,f
  4610  0223  082E               	movf	___ftadd@exp2,w
  4611  0224  062F               	xorwf	___ftadd@exp1,w
  4612  0225  1903               	skipnz
  4613  0226  2A38               	goto	l2596
  4614  0227  3001               	movlw	1
  4615  0228  02AD               	subwf	___ftadd@sign,f
  4616  0229  082D               	movf	___ftadd@sign,w
  4617  022A  3907               	andlw	7
  4618  022B  1903               	btfsc	3,2
  4619  022C  2A38               	goto	l2596
  4620  022D  2A1B               	goto	l2588
  4621  022E                     l2594:	
  4622  022E  3001               	movlw	1
  4623  022F                     u3535:	
  4624  022F  36A8               	lsrf	___ftadd@f2+2,f
  4625  0230  0CA7               	rrf	___ftadd@f2+1,f
  4626  0231  0CA6               	rrf	___ftadd@f2,f
  4627  0232  0B89               	decfsz	9,f
  4628  0233  2A2F               	goto	u3535
  4629  0234  3001               	movlw	1
  4630  0235  00A9               	movwf	??___ftadd
  4631  0236  0829               	movf	??___ftadd,w
  4632  0237  07AE               	addwf	___ftadd@exp2,f
  4633  0238                     l2596:	
  4634  0238  082F               	movf	___ftadd@exp1,w
  4635  0239  062E               	xorwf	___ftadd@exp2,w
  4636  023A  1D03               	skipz
  4637  023B  2A2E               	goto	l2594
  4638  023C                     l593:	
  4639  023C  1FAD               	btfss	___ftadd@sign,7
  4640  023D  2A4E               	goto	l2600
  4641  023E  30FF               	movlw	255
  4642  023F  06A3               	xorwf	___ftadd@f1,f
  4643  0240  30FF               	movlw	255
  4644  0241  06A4               	xorwf	___ftadd@f1+1,f
  4645  0242  30FF               	movlw	255
  4646  0243  06A5               	xorwf	___ftadd@f1+2,f
  4647  0244  3001               	movlw	1
  4648  0245  07A3               	addwf	___ftadd@f1,f
  4649  0246  3000               	movlw	0
  4650  0247  1803               	skipnc
  4651  0248  3001               	movlw	1
  4652  0249  07A4               	addwf	___ftadd@f1+1,f
  4653  024A  3000               	movlw	0
  4654  024B  1803               	skipnc
  4655  024C  3001               	movlw	1
  4656  024D  07A5               	addwf	___ftadd@f1+2,f
  4657  024E                     l2600:	
  4658  024E  1F2D               	btfss	___ftadd@sign,6
  4659  024F  2A60               	goto	l2604
  4660  0250  30FF               	movlw	255
  4661  0251  06A6               	xorwf	___ftadd@f2,f
  4662  0252  30FF               	movlw	255
  4663  0253  06A7               	xorwf	___ftadd@f2+1,f
  4664  0254  30FF               	movlw	255
  4665  0255  06A8               	xorwf	___ftadd@f2+2,f
  4666  0256  3001               	movlw	1
  4667  0257  07A6               	addwf	___ftadd@f2,f
  4668  0258  3000               	movlw	0
  4669  0259  1803               	skipnc
  4670  025A  3001               	movlw	1
  4671  025B  07A7               	addwf	___ftadd@f2+1,f
  4672  025C  3000               	movlw	0
  4673  025D  1803               	skipnc
  4674  025E  3001               	movlw	1
  4675  025F  07A8               	addwf	___ftadd@f2+2,f
  4676  0260                     l2604:	
  4677  0260  01AD               	clrf	___ftadd@sign
  4678  0261  0823               	movf	___ftadd@f1,w
  4679  0262  07A6               	addwf	___ftadd@f2,f
  4680  0263  0824               	movf	___ftadd@f1+1,w
  4681  0264  3DA7               	addwfc	___ftadd@f2+1,f
  4682  0265  0825               	movf	___ftadd@f1+2,w
  4683  0266  3DA8               	addwfc	___ftadd@f2+2,f
  4684  0267  1FA8               	btfss	___ftadd@f2+2,7
  4685  0268  2A7B               	goto	l2614
  4686  0269  30FF               	movlw	255
  4687  026A  06A6               	xorwf	___ftadd@f2,f
  4688  026B  30FF               	movlw	255
  4689  026C  06A7               	xorwf	___ftadd@f2+1,f
  4690  026D  30FF               	movlw	255
  4691  026E  06A8               	xorwf	___ftadd@f2+2,f
  4692  026F  3001               	movlw	1
  4693  0270  07A6               	addwf	___ftadd@f2,f
  4694  0271  3000               	movlw	0
  4695  0272  1803               	skipnc
  4696  0273  3001               	movlw	1
  4697  0274  07A7               	addwf	___ftadd@f2+1,f
  4698  0275  3000               	movlw	0
  4699  0276  1803               	skipnc
  4700  0277  3001               	movlw	1
  4701  0278  07A8               	addwf	___ftadd@f2+2,f
  4702  0279  01AD               	clrf	___ftadd@sign
  4703  027A  0AAD               	incf	___ftadd@sign,f
  4704  027B                     l2614:	
  4705  027B  0826               	movf	___ftadd@f2,w
  4706  027C  00F3               	movwf	___ftpack@arg
  4707  027D  0827               	movf	___ftadd@f2+1,w
  4708  027E  00F4               	movwf	___ftpack@arg+1
  4709  027F  0828               	movf	___ftadd@f2+2,w
  4710  0280  00F5               	movwf	___ftpack@arg+2
  4711  0281  082F               	movf	___ftadd@exp1,w
  4712  0282  00A9               	movwf	??___ftadd
  4713  0283  0829               	movf	??___ftadd,w
  4714  0284  00F6               	movwf	___ftpack@exp
  4715  0285  082D               	movf	___ftadd@sign,w
  4716  0286  00AA               	movwf	??___ftadd+1
  4717  0287  082A               	movf	??___ftadd+1,w
  4718  0288  00F7               	movwf	___ftpack@sign
  4719  0289  3186  2615         	fcall	___ftpack
  4720  028B  0873               	movf	?___ftpack,w
  4721  028C  0020               	movlb	0	; select bank0
  4722  028D  00A3               	movwf	?___ftadd
  4723  028E  0874               	movf	?___ftpack+1,w
  4724  028F  00A4               	movwf	?___ftadd+1
  4725  0290  0875               	movf	?___ftpack+2,w
  4726  0291  00A5               	movwf	?___ftadd+2
  4727  0292  0008               	return
  4728  0293                     __end_of___ftadd:	
  4729                           
  4730                           	psect	text21
  4731  0795                     __ptext21:	
  4732 ;; *************** function ___altoft *****************
  4733 ;; Defined at:
  4734 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  c               4   39[BANK0 ] long 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  sign            1   46[BANK0 ] unsigned char 
  4739 ;;  exp             1   45[BANK0 ] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  3   39[BANK0 ] float 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0, pclath, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4751 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;Total ram usage:        8 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    3
  4756 ;; This function calls:
  4757 ;;		___ftpack
  4758 ;; This function is called by:
  4759 ;;		_ceil
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function ___altoft
  4765  0795                     ___altoft:	
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  4769  0795  0020               	movlb	0	; select bank0
  4770  0796  01CE               	clrf	___altoft@sign
  4771  0797  308E               	movlw	142
  4772  0798  00CB               	movwf	??___altoft
  4773  0799  084B               	movf	??___altoft,w
  4774  079A  00CD               	movwf	___altoft@exp
  4775  079B  1FCA               	btfss	___altoft@c+3,7
  4776  079C  2FAA               	goto	l2526
  4777  079D  09C7               	comf	___altoft@c,f
  4778  079E  09C8               	comf	___altoft@c+1,f
  4779  079F  09C9               	comf	___altoft@c+2,f
  4780  07A0  09CA               	comf	___altoft@c+3,f
  4781  07A1  0AC7               	incf	___altoft@c,f
  4782  07A2  1903               	skipnz
  4783  07A3  0AC8               	incf	___altoft@c+1,f
  4784  07A4  1903               	skipnz
  4785  07A5  0AC9               	incf	___altoft@c+2,f
  4786  07A6  1903               	skipnz
  4787  07A7  0ACA               	incf	___altoft@c+3,f
  4788  07A8  01CE               	clrf	___altoft@sign
  4789  07A9  0ACE               	incf	___altoft@sign,f
  4790  07AA                     l2526:	
  4791  07AA  30FF               	movlw	255
  4792  07AB  054A               	andwf	___altoft@c+3,w
  4793  07AC  1903               	btfsc	3,2
  4794  07AD  2FBA               	goto	l2528
  4795  07AE  3001               	movlw	1
  4796  07AF                     u3325:	
  4797  07AF  36CA               	lsrf	___altoft@c+3,f
  4798  07B0  0CC9               	rrf	___altoft@c+2,f
  4799  07B1  0CC8               	rrf	___altoft@c+1,f
  4800  07B2  0CC7               	rrf	___altoft@c,f
  4801  07B3  0B89               	decfsz	9,f
  4802  07B4  2FAF               	goto	u3325
  4803  07B5  3001               	movlw	1
  4804  07B6  00CB               	movwf	??___altoft
  4805  07B7  084B               	movf	??___altoft,w
  4806  07B8  07CD               	addwf	___altoft@exp,f
  4807  07B9  2FAA               	goto	l2526
  4808  07BA                     l2528:	
  4809  07BA  0847               	movf	___altoft@c,w
  4810  07BB  00F3               	movwf	___ftpack@arg
  4811  07BC  0848               	movf	___altoft@c+1,w
  4812  07BD  00F4               	movwf	___ftpack@arg+1
  4813  07BE  0849               	movf	___altoft@c+2,w
  4814  07BF  00F5               	movwf	___ftpack@arg+2
  4815  07C0  084D               	movf	___altoft@exp,w
  4816  07C1  00CB               	movwf	??___altoft
  4817  07C2  084B               	movf	??___altoft,w
  4818  07C3  00F6               	movwf	___ftpack@exp
  4819  07C4  084E               	movf	___altoft@sign,w
  4820  07C5  00CC               	movwf	??___altoft+1
  4821  07C6  084C               	movf	??___altoft+1,w
  4822  07C7  00F7               	movwf	___ftpack@sign
  4823  07C8  3186  2615         	fcall	___ftpack
  4824  07CA  0873               	movf	?___ftpack,w
  4825  07CB  0020               	movlb	0	; select bank0
  4826  07CC  00C7               	movwf	?___altoft
  4827  07CD  0874               	movf	?___ftpack+1,w
  4828  07CE  00C8               	movwf	?___altoft+1
  4829  07CF  0875               	movf	?___ftpack+2,w
  4830  07D0  00C9               	movwf	?___altoft+2
  4831  07D1  0008               	return
  4832  07D2                     __end_of___altoft:	
  4833                           
  4834                           	psect	text22
  4835  03F5                     __ptext22:	
  4836 ;; *************** function ___ftdiv *****************
  4837 ;; Defined at:
  4838 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  f2              3    9[BANK0 ] float 
  4841 ;;  f1              3   12[BANK0 ] float 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;  f3              3   20[BANK0 ] float 
  4844 ;;  sign            1   24[BANK0 ] unsigned char 
  4845 ;;  exp             1   23[BANK0 ] unsigned char 
  4846 ;;  cntr            1   19[BANK0 ] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  3    9[BANK0 ] float 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4856 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;Total ram usage:       16 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    3
  4863 ;; This function calls:
  4864 ;;		___ftpack
  4865 ;; This function is called by:
  4866 ;;		_step
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function ___ftdiv
  4872  03F5                     ___ftdiv:	
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4876  03F5  0020               	movlb	0	; select bank0
  4877  03F6  082C               	movf	___ftdiv@f1,w
  4878  03F7  00AF               	movwf	??___ftdiv
  4879  03F8  082D               	movf	___ftdiv@f1+1,w
  4880  03F9  00B0               	movwf	??___ftdiv+1
  4881  03FA  082E               	movf	___ftdiv@f1+2,w
  4882  03FB  00B1               	movwf	??___ftdiv+2
  4883  03FC  1003               	clrc
  4884  03FD  0D30               	rlf	??___ftdiv+1,w
  4885  03FE  0D31               	rlf	??___ftdiv+2,w
  4886  03FF  00B2               	movwf	??___ftdiv+3
  4887  0400  0832               	movf	??___ftdiv+3,w
  4888  0401  00B7               	movwf	___ftdiv@exp
  4889  0402  0837               	movf	___ftdiv@exp,w
  4890  0403  1D03               	btfss	3,2
  4891  0404  2C0C               	goto	l2750
  4892  0405  3000               	movlw	0
  4893  0406  00A9               	movwf	?___ftdiv
  4894  0407  3000               	movlw	0
  4895  0408  00AA               	movwf	?___ftdiv+1
  4896  0409  3000               	movlw	0
  4897  040A  00AB               	movwf	?___ftdiv+2
  4898  040B  0008               	return
  4899  040C                     l2750:	
  4900  040C  0829               	movf	___ftdiv@f2,w
  4901  040D  00AF               	movwf	??___ftdiv
  4902  040E  082A               	movf	___ftdiv@f2+1,w
  4903  040F  00B0               	movwf	??___ftdiv+1
  4904  0410  082B               	movf	___ftdiv@f2+2,w
  4905  0411  00B1               	movwf	??___ftdiv+2
  4906  0412  1003               	clrc
  4907  0413  0D30               	rlf	??___ftdiv+1,w
  4908  0414  0D31               	rlf	??___ftdiv+2,w
  4909  0415  00B2               	movwf	??___ftdiv+3
  4910  0416  0832               	movf	??___ftdiv+3,w
  4911  0417  00B8               	movwf	___ftdiv@sign
  4912  0418  0838               	movf	___ftdiv@sign,w
  4913  0419  1D03               	btfss	3,2
  4914  041A  2C22               	goto	l2756
  4915  041B  3000               	movlw	0
  4916  041C  00A9               	movwf	?___ftdiv
  4917  041D  3000               	movlw	0
  4918  041E  00AA               	movwf	?___ftdiv+1
  4919  041F  3000               	movlw	0
  4920  0420  00AB               	movwf	?___ftdiv+2
  4921  0421  0008               	return
  4922  0422                     l2756:	
  4923  0422  3000               	movlw	0
  4924  0423  00B4               	movwf	___ftdiv@f3
  4925  0424  3000               	movlw	0
  4926  0425  00B5               	movwf	___ftdiv@f3+1
  4927  0426  3000               	movlw	0
  4928  0427  00B6               	movwf	___ftdiv@f3+2
  4929  0428  3089               	movlw	137
  4930  0429  0738               	addwf	___ftdiv@sign,w
  4931  042A  00AF               	movwf	??___ftdiv
  4932  042B  082F               	movf	??___ftdiv,w
  4933  042C  02B7               	subwf	___ftdiv@exp,f
  4934  042D  082C               	movf	___ftdiv@f1,w
  4935  042E  00AF               	movwf	??___ftdiv
  4936  042F  082D               	movf	___ftdiv@f1+1,w
  4937  0430  00B0               	movwf	??___ftdiv+1
  4938  0431  082E               	movf	___ftdiv@f1+2,w
  4939  0432  00B1               	movwf	??___ftdiv+2
  4940  0433  3010               	movlw	16
  4941  0434                     u3835:	
  4942  0434  36B1               	lsrf	??___ftdiv+2,f
  4943  0435  0CB0               	rrf	??___ftdiv+1,f
  4944  0436  0CAF               	rrf	??___ftdiv,f
  4945  0437  0B89               	decfsz	9,f
  4946  0438  2C34               	goto	u3835
  4947  0439  082F               	movf	??___ftdiv,w
  4948  043A  00B2               	movwf	??___ftdiv+3
  4949  043B  0832               	movf	??___ftdiv+3,w
  4950  043C  00B8               	movwf	___ftdiv@sign
  4951  043D  0829               	movf	___ftdiv@f2,w
  4952  043E  00AF               	movwf	??___ftdiv
  4953  043F  082A               	movf	___ftdiv@f2+1,w
  4954  0440  00B0               	movwf	??___ftdiv+1
  4955  0441  082B               	movf	___ftdiv@f2+2,w
  4956  0442  00B1               	movwf	??___ftdiv+2
  4957  0443  3010               	movlw	16
  4958  0444                     u3845:	
  4959  0444  36B1               	lsrf	??___ftdiv+2,f
  4960  0445  0CB0               	rrf	??___ftdiv+1,f
  4961  0446  0CAF               	rrf	??___ftdiv,f
  4962  0447  0B89               	decfsz	9,f
  4963  0448  2C44               	goto	u3845
  4964  0449  082F               	movf	??___ftdiv,w
  4965  044A  00B2               	movwf	??___ftdiv+3
  4966  044B  0832               	movf	??___ftdiv+3,w
  4967  044C  06B8               	xorwf	___ftdiv@sign,f
  4968  044D  3080               	movlw	128
  4969  044E  00AF               	movwf	??___ftdiv
  4970  044F  082F               	movf	??___ftdiv,w
  4971  0450  05B8               	andwf	___ftdiv@sign,f
  4972  0451  17AD               	bsf	___ftdiv@f1+1,7
  4973  0452  30FF               	movlw	255
  4974  0453  05AC               	andwf	___ftdiv@f1,f
  4975  0454  30FF               	movlw	255
  4976  0455  05AD               	andwf	___ftdiv@f1+1,f
  4977  0456  3000               	movlw	0
  4978  0457  05AE               	andwf	___ftdiv@f1+2,f
  4979  0458  17AA               	bsf	___ftdiv@f2+1,7
  4980  0459  30FF               	movlw	255
  4981  045A  05A9               	andwf	___ftdiv@f2,f
  4982  045B  30FF               	movlw	255
  4983  045C  05AA               	andwf	___ftdiv@f2+1,f
  4984  045D  3000               	movlw	0
  4985  045E  05AB               	andwf	___ftdiv@f2+2,f
  4986  045F  3018               	movlw	24
  4987  0460  00AF               	movwf	??___ftdiv
  4988  0461  082F               	movf	??___ftdiv,w
  4989  0462  00B3               	movwf	___ftdiv@cntr
  4990  0463                     l2770:	
  4991  0463  3001               	movlw	1
  4992  0464                     u3855:	
  4993  0464  35B4               	lslf	___ftdiv@f3,f
  4994  0465  0DB5               	rlf	___ftdiv@f3+1,f
  4995  0466  0DB6               	rlf	___ftdiv@f3+2,f
  4996  0467  0B89               	decfsz	9,f
  4997  0468  2C64               	goto	u3855
  4998  0469  082B               	movf	___ftdiv@f2+2,w
  4999  046A  022E               	subwf	___ftdiv@f1+2,w
  5000  046B  1D03               	skipz
  5001  046C  2C73               	goto	u3865
  5002  046D  082A               	movf	___ftdiv@f2+1,w
  5003  046E  022D               	subwf	___ftdiv@f1+1,w
  5004  046F  1D03               	skipz
  5005  0470  2C73               	goto	u3865
  5006  0471  0829               	movf	___ftdiv@f2,w
  5007  0472  022C               	subwf	___ftdiv@f1,w
  5008  0473                     u3865:	
  5009  0473  1C03               	skipc
  5010  0474  2C7C               	goto	l2778
  5011  0475  0829               	movf	___ftdiv@f2,w
  5012  0476  02AC               	subwf	___ftdiv@f1,f
  5013  0477  082A               	movf	___ftdiv@f2+1,w
  5014  0478  3BAD               	subwfb	___ftdiv@f1+1,f
  5015  0479  082B               	movf	___ftdiv@f2+2,w
  5016  047A  3BAE               	subwfb	___ftdiv@f1+2,f
  5017  047B  1434               	bsf	___ftdiv@f3,0
  5018  047C                     l2778:	
  5019  047C  3001               	movlw	1
  5020  047D                     u3875:	
  5021  047D  35AC               	lslf	___ftdiv@f1,f
  5022  047E  0DAD               	rlf	___ftdiv@f1+1,f
  5023  047F  0DAE               	rlf	___ftdiv@f1+2,f
  5024  0480  0B89               	decfsz	9,f
  5025  0481  2C7D               	goto	u3875
  5026  0482  3001               	movlw	1
  5027  0483  02B3               	subwf	___ftdiv@cntr,f
  5028  0484  1D03               	btfss	3,2
  5029  0485  2C63               	goto	l2770
  5030  0486  0834               	movf	___ftdiv@f3,w
  5031  0487  00F3               	movwf	___ftpack@arg
  5032  0488  0835               	movf	___ftdiv@f3+1,w
  5033  0489  00F4               	movwf	___ftpack@arg+1
  5034  048A  0836               	movf	___ftdiv@f3+2,w
  5035  048B  00F5               	movwf	___ftpack@arg+2
  5036  048C  0837               	movf	___ftdiv@exp,w
  5037  048D  00AF               	movwf	??___ftdiv
  5038  048E  082F               	movf	??___ftdiv,w
  5039  048F  00F6               	movwf	___ftpack@exp
  5040  0490  0838               	movf	___ftdiv@sign,w
  5041  0491  00B0               	movwf	??___ftdiv+1
  5042  0492  0830               	movf	??___ftdiv+1,w
  5043  0493  00F7               	movwf	___ftpack@sign
  5044  0494  3186  2615         	fcall	___ftpack
  5045  0496  0873               	movf	?___ftpack,w
  5046  0497  0020               	movlb	0	; select bank0
  5047  0498  00A9               	movwf	?___ftdiv
  5048  0499  0874               	movf	?___ftpack+1,w
  5049  049A  00AA               	movwf	?___ftdiv+1
  5050  049B  0875               	movf	?___ftpack+2,w
  5051  049C  00AB               	movwf	?___ftdiv+2
  5052  049D  0008               	return
  5053  049E                     __end_of___ftdiv:	
  5054                           
  5055                           	psect	text23
  5056  0EB7                     __ptext23:	
  5057 ;; *************** function ___awtoft *****************
  5058 ;; Defined at:
  5059 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  c               2    3[BANK0 ] int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  sign            1    8[BANK0 ] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  3    3[BANK0 ] float 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, pclath, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5073 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5077 ;;Total ram usage:        6 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    3
  5080 ;; This function calls:
  5081 ;;		___ftpack
  5082 ;; This function is called by:
  5083 ;;		_step
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function ___awtoft
  5089  0EB7                     ___awtoft:	
  5090                           
  5091                           ;incstack = 0
  5092                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5093  0EB7  0020               	movlb	0	; select bank0
  5094  0EB8  01A8               	clrf	___awtoft@sign
  5095  0EB9  1FA4               	btfss	___awtoft@c+1,7
  5096  0EBA  2EC2               	goto	l2740
  5097  0EBB  09A3               	comf	___awtoft@c,f
  5098  0EBC  09A4               	comf	___awtoft@c+1,f
  5099  0EBD  0AA3               	incf	___awtoft@c,f
  5100  0EBE  1903               	skipnz
  5101  0EBF  0AA4               	incf	___awtoft@c+1,f
  5102  0EC0  01A8               	clrf	___awtoft@sign
  5103  0EC1  0AA8               	incf	___awtoft@sign,f
  5104  0EC2                     l2740:	
  5105  0EC2  0823               	movf	___awtoft@c,w
  5106  0EC3  00F3               	movwf	___ftpack@arg
  5107  0EC4  0824               	movf	___awtoft@c+1,w
  5108  0EC5  00F4               	movwf	___ftpack@arg+1
  5109  0EC6  01F5               	clrf	___ftpack@arg+2
  5110  0EC7  308E               	movlw	142
  5111  0EC8  00A6               	movwf	??___awtoft
  5112  0EC9  0826               	movf	??___awtoft,w
  5113  0ECA  00F6               	movwf	___ftpack@exp
  5114  0ECB  0828               	movf	___awtoft@sign,w
  5115  0ECC  00A7               	movwf	??___awtoft+1
  5116  0ECD  0827               	movf	??___awtoft+1,w
  5117  0ECE  00F7               	movwf	___ftpack@sign
  5118  0ECF  3186  2615         	fcall	___ftpack
  5119  0ED1  0873               	movf	?___ftpack,w
  5120  0ED2  0020               	movlb	0	; select bank0
  5121  0ED3  00A3               	movwf	?___awtoft
  5122  0ED4  0874               	movf	?___ftpack+1,w
  5123  0ED5  00A4               	movwf	?___awtoft+1
  5124  0ED6  0875               	movf	?___ftpack+2,w
  5125  0ED7  00A5               	movwf	?___awtoft+2
  5126  0ED8  0008               	return
  5127  0ED9                     __end_of___awtoft:	
  5128                           
  5129                           	psect	text24
  5130  0615                     __ptext24:	
  5131 ;; *************** function ___ftpack *****************
  5132 ;; Defined at:
  5133 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  arg             3    3[COMMON] unsigned um
  5136 ;;  exp             1    6[COMMON] unsigned char 
  5137 ;;  sign            1    7[COMMON] unsigned char 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  3    3[COMMON] float 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5149 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;Total ram usage:        8 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    2
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		___altoft
  5160 ;;		___awtoft
  5161 ;;		___ftadd
  5162 ;;		___ftdiv
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           
  5167                           ;psect for function ___ftpack
  5168  0615                     ___ftpack:	
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5172  0615  0876               	movf	___ftpack@exp,w
  5173  0616  1903               	btfsc	3,2
  5174  0617  2E1D               	goto	l2488
  5175  0618  0875               	movf	___ftpack@arg+2,w
  5176  0619  0474               	iorwf	___ftpack@arg+1,w
  5177  061A  0473               	iorwf	___ftpack@arg,w
  5178  061B  1D03               	skipz
  5179  061C  2E2F               	goto	l2494
  5180  061D                     l2488:	
  5181  061D  3000               	movlw	0
  5182  061E  00F3               	movwf	?___ftpack
  5183  061F  3000               	movlw	0
  5184  0620  00F4               	movwf	?___ftpack+1
  5185  0621  3000               	movlw	0
  5186  0622  00F5               	movwf	?___ftpack+2
  5187  0623  0008               	return
  5188  0624                     l2492:	
  5189  0624  3001               	movlw	1
  5190  0625  0020               	movlb	0	; select bank0
  5191  0626  00A0               	movwf	??___ftpack
  5192  0627  0820               	movf	??___ftpack,w
  5193  0628  07F6               	addwf	___ftpack@exp,f
  5194  0629  3001               	movlw	1
  5195  062A                     u3215:	
  5196  062A  36F5               	lsrf	___ftpack@arg+2,f
  5197  062B  0CF4               	rrf	___ftpack@arg+1,f
  5198  062C  0CF3               	rrf	___ftpack@arg,f
  5199  062D  0B89               	decfsz	9,f
  5200  062E  2E2A               	goto	u3215
  5201  062F                     l2494:	
  5202  062F  30FE               	movlw	254
  5203  0630  0575               	andwf	___ftpack@arg+2,w
  5204  0631  1903               	btfsc	3,2
  5205  0632  2E49               	goto	l538
  5206  0633  2E24               	goto	l2492
  5207  0634                     l2496:	
  5208  0634  3001               	movlw	1
  5209  0635  0020               	movlb	0	; select bank0
  5210  0636  00A0               	movwf	??___ftpack
  5211  0637  0820               	movf	??___ftpack,w
  5212  0638  07F6               	addwf	___ftpack@exp,f
  5213  0639  3001               	movlw	1
  5214  063A  07F3               	addwf	___ftpack@arg,f
  5215  063B  3000               	movlw	0
  5216  063C  1803               	skipnc
  5217  063D  3001               	movlw	1
  5218  063E  07F4               	addwf	___ftpack@arg+1,f
  5219  063F  3000               	movlw	0
  5220  0640  1803               	skipnc
  5221  0641  3001               	movlw	1
  5222  0642  07F5               	addwf	___ftpack@arg+2,f
  5223  0643  3001               	movlw	1
  5224  0644                     u3235:	
  5225  0644  36F5               	lsrf	___ftpack@arg+2,f
  5226  0645  0CF4               	rrf	___ftpack@arg+1,f
  5227  0646  0CF3               	rrf	___ftpack@arg,f
  5228  0647  0B89               	decfsz	9,f
  5229  0648  2E44               	goto	u3235
  5230  0649                     l538:	
  5231  0649  30FF               	movlw	255
  5232  064A  0575               	andwf	___ftpack@arg+2,w
  5233  064B  1903               	btfsc	3,2
  5234  064C  2E5A               	goto	l2504
  5235  064D  2E34               	goto	l2496
  5236  064E                     l2506:	
  5237  064E  3002               	movlw	2
  5238  064F  0276               	subwf	___ftpack@exp,w
  5239  0650  1C03               	btfss	3,0
  5240  0651  2E5C               	goto	l545
  5241  0652  3001               	movlw	1
  5242  0653  02F6               	subwf	___ftpack@exp,f
  5243  0654  3001               	movlw	1
  5244  0655                     u3255:	
  5245  0655  35F3               	lslf	___ftpack@arg,f
  5246  0656  0DF4               	rlf	___ftpack@arg+1,f
  5247  0657  0DF5               	rlf	___ftpack@arg+2,f
  5248  0658  0B89               	decfsz	9,f
  5249  0659  2E55               	goto	u3255
  5250  065A                     l2504:	
  5251  065A  1FF4               	btfss	___ftpack@arg+1,7
  5252  065B  2E4E               	goto	l2506
  5253  065C                     l545:	
  5254  065C  1876               	btfsc	___ftpack@exp,0
  5255  065D  2E64               	goto	l546
  5256  065E  30FF               	movlw	255
  5257  065F  05F3               	andwf	___ftpack@arg,f
  5258  0660  307F               	movlw	127
  5259  0661  05F4               	andwf	___ftpack@arg+1,f
  5260  0662  30FF               	movlw	255
  5261  0663  05F5               	andwf	___ftpack@arg+2,f
  5262  0664                     l546:	
  5263  0664  1003               	clrc
  5264  0665  0CF6               	rrf	___ftpack@exp,f
  5265  0666  0876               	movf	___ftpack@exp,w
  5266  0667  0020               	movlb	0	; select bank0
  5267  0668  00A0               	movwf	??___ftpack
  5268  0669  01A1               	clrf	??___ftpack+1
  5269  066A  01A2               	clrf	??___ftpack+2
  5270  066B  3010               	movlw	16
  5271  066C                     u3295:	
  5272  066C  35A0               	lslf	??___ftpack,f
  5273  066D  0DA1               	rlf	??___ftpack+1,f
  5274  066E  0DA2               	rlf	??___ftpack+2,f
  5275  066F  0B89               	decfsz	9,f
  5276  0670  2E6C               	goto	u3295
  5277  0671  0820               	movf	??___ftpack,w
  5278  0672  04F3               	iorwf	___ftpack@arg,f
  5279  0673  0821               	movf	??___ftpack+1,w
  5280  0674  04F4               	iorwf	___ftpack@arg+1,f
  5281  0675  0822               	movf	??___ftpack+2,w
  5282  0676  04F5               	iorwf	___ftpack@arg+2,f
  5283  0677  0877               	movf	___ftpack@sign,w
  5284  0678  1903               	btfsc	3,2
  5285  0679  0008               	return
  5286  067A  17F5               	bsf	___ftpack@arg+2,7
  5287  067B  0008               	return
  5288  067C                     __end_of___ftpack:	
  5289                           
  5290                           	psect	text25
  5291  05AA                     __ptext25:	
  5292 ;; *************** function _atoi *****************
  5293 ;; Defined at:
  5294 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\atoi.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  s               1    wreg     PTR const unsigned char 
  5297 ;;		 -> main@line(32), NULL(0), 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  5300 ;;		 -> main@line(32), NULL(0), 
  5301 ;;  a               2    7[BANK0 ] int 
  5302 ;;  sign            1    6[BANK0 ] unsigned char 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  2    2[BANK0 ] int 
  5305 ;; Registers used:
  5306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5312 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5315 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;Total ram usage:        8 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    3
  5319 ;; This function calls:
  5320 ;;		___wmul
  5321 ;;		_isdigit
  5322 ;; This function is called by:
  5323 ;;		_main
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function _atoi
  5329  05AA                     _atoi:	
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5333                           ;atoi@s stored from wreg
  5334  05AA  0020               	movlb	0	; select bank0
  5335  05AB  00A9               	movwf	atoi@s
  5336  05AC                     l3022:	
  5337  05AC  0829               	movf	atoi@s,w
  5338  05AD  0086               	movwf	6
  5339  05AE  0187               	clrf	7
  5340  05AF  3020               	movlw	32
  5341  05B0  0601               	xorwf	1,w
  5342  05B1  1D03               	btfss	3,2
  5343  05B2  2DB8               	goto	l3024
  5344  05B3                     l3020:	
  5345  05B3  3001               	movlw	1
  5346  05B4  00A4               	movwf	??_atoi
  5347  05B5  0824               	movf	??_atoi,w
  5348  05B6  07A9               	addwf	atoi@s,f
  5349  05B7  2DAC               	goto	l3022
  5350  05B8                     l3024:	
  5351  05B8  0829               	movf	atoi@s,w
  5352  05B9  0086               	movwf	6
  5353  05BA  0187               	clrf	7
  5354  05BB  3009               	movlw	9
  5355  05BC  0601               	xorwf	1,w
  5356  05BD  1903               	btfsc	3,2
  5357  05BE  2DB3               	goto	l3020
  5358  05BF  01A7               	clrf	atoi@a
  5359  05C0  01A8               	clrf	atoi@a+1
  5360  05C1  01A6               	clrf	atoi@sign
  5361  05C2  0829               	movf	atoi@s,w
  5362  05C3  0086               	movwf	6
  5363  05C4  0187               	clrf	7
  5364  05C5  302D               	movlw	45
  5365  05C6  0601               	xorwf	1,w
  5366  05C7  1D03               	btfss	3,2
  5367  05C8  2DCE               	goto	l3032
  5368  05C9  3001               	movlw	1
  5369  05CA  00A4               	movwf	??_atoi
  5370  05CB  0824               	movf	??_atoi,w
  5371  05CC  07A6               	addwf	atoi@sign,f
  5372  05CD  2DD5               	goto	l3038
  5373  05CE                     l3032:	
  5374  05CE  0829               	movf	atoi@s,w
  5375  05CF  0086               	movwf	6
  5376  05D0  0187               	clrf	7
  5377  05D1  302B               	movlw	43
  5378  05D2  0601               	xorwf	1,w
  5379  05D3  1D03               	btfss	3,2
  5380  05D4  2DD9               	goto	l3040
  5381  05D5                     l3038:	
  5382  05D5  3001               	movlw	1
  5383  05D6  00A4               	movwf	??_atoi
  5384  05D7  0824               	movf	??_atoi,w
  5385  05D8  07A9               	addwf	atoi@s,f
  5386  05D9                     l3040:	
  5387  05D9  0829               	movf	atoi@s,w
  5388  05DA  0086               	movwf	6
  5389  05DB  0187               	clrf	7
  5390  05DC  0801               	movf	1,w
  5391  05DD  318E  2608  3185   	fcall	_isdigit
  5392  05E0  1C03               	btfss	3,0
  5393  05E1  2E00               	goto	l3042
  5394  05E2  0020               	movlb	0	; select bank0
  5395  05E3  0828               	movf	atoi@a+1,w
  5396  05E4  00F4               	movwf	___wmul@multiplier+1
  5397  05E5  0827               	movf	atoi@a,w
  5398  05E6  00F3               	movwf	___wmul@multiplier
  5399  05E7  300A               	movlw	10
  5400  05E8  00F5               	movwf	___wmul@multiplicand
  5401  05E9  3000               	movlw	0
  5402  05EA  00F6               	movwf	___wmul@multiplicand+1
  5403  05EB  318E  265B  3185   	fcall	___wmul
  5404  05EE  0020               	movlb	0	; select bank0
  5405  05EF  0829               	movf	atoi@s,w
  5406  05F0  0086               	movwf	6
  5407  05F1  0187               	clrf	7
  5408  05F2  0801               	movf	1,w
  5409  05F3  0773               	addwf	?___wmul,w
  5410  05F4  00A4               	movwf	??_atoi
  5411  05F5  0874               	movf	?___wmul+1,w
  5412  05F6  1803               	skipnc
  5413  05F7  0A74               	incf	?___wmul+1,w
  5414  05F8  00A5               	movwf	??_atoi+1
  5415  05F9  0824               	movf	??_atoi,w
  5416  05FA  3ED0               	addlw	208
  5417  05FB  00A7               	movwf	atoi@a
  5418  05FC  30FF               	movlw	255
  5419  05FD  3D25               	addwfc	??_atoi+1,w
  5420  05FE  00A8               	movwf	atoi@a+1
  5421  05FF  2DD5               	goto	l3038
  5422  0600                     l3042:	
  5423  0600  0020               	movlb	0	; select bank0
  5424  0601  0826               	movf	atoi@sign,w
  5425  0602  1903               	btfsc	3,2
  5426  0603  2E10               	goto	l3048
  5427  0604  0927               	comf	atoi@a,w
  5428  0605  00A4               	movwf	??_atoi
  5429  0606  0928               	comf	atoi@a+1,w
  5430  0607  00A5               	movwf	??_atoi+1
  5431  0608  0AA4               	incf	??_atoi,f
  5432  0609  1903               	skipnz
  5433  060A  0AA5               	incf	??_atoi+1,f
  5434  060B  0824               	movf	??_atoi,w
  5435  060C  00A2               	movwf	?_atoi
  5436  060D  0825               	movf	??_atoi+1,w
  5437  060E  00A3               	movwf	?_atoi+1
  5438  060F  0008               	return
  5439  0610                     l3048:	
  5440  0610  0828               	movf	atoi@a+1,w
  5441  0611  00A3               	movwf	?_atoi+1
  5442  0612  0827               	movf	atoi@a,w
  5443  0613  00A2               	movwf	?_atoi
  5444  0614  0008               	return
  5445  0615                     __end_of_atoi:	
  5446                           
  5447                           	psect	text26
  5448  0E08                     __ptext26:	
  5449 ;; *************** function _isdigit *****************
  5450 ;; Defined at:
  5451 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  c               1    wreg     unsigned char 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  c               1    4[COMMON] unsigned char 
  5456 ;; Return value:  Size  Location     Type
  5457 ;;		None               void
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, status,0
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;Total ram usage:        2 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; Hardware stack levels required when called:    2
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_atoi
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function _isdigit
  5481  0E08                     _isdigit:	
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5485                           ;isdigit@c stored from wreg
  5486  0E08  00F4               	movwf	isdigit@c
  5487  0E09  01F3               	clrf	_isdigit$439
  5488  0E0A  303A               	movlw	58
  5489  0E0B  0274               	subwf	isdigit@c,w
  5490  0E0C  1803               	skipnc
  5491  0E0D  2E14               	goto	l2052
  5492  0E0E  3030               	movlw	48
  5493  0E0F  0274               	subwf	isdigit@c,w
  5494  0E10  1C03               	skipc
  5495  0E11  2E14               	goto	l2052
  5496  0E12  01F3               	clrf	_isdigit$439
  5497  0E13  0AF3               	incf	_isdigit$439,f
  5498  0E14                     l2052:	
  5499  0E14  0C73               	rrf	_isdigit$439,w
  5500  0E15  0008               	return
  5501  0E16                     __end_of_isdigit:	
  5502                           
  5503                           	psect	text27
  5504  0E5B                     __ptext27:	
  5505 ;; *************** function ___wmul *****************
  5506 ;; Defined at:
  5507 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  multiplier      2    3[COMMON] unsigned int 
  5510 ;;  multiplicand    2    5[COMMON] unsigned int 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  product         2    0[BANK0 ] unsigned int 
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  2    3[COMMON] unsigned int 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5523 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;Total ram usage:        6 bytes
  5527 ;; Hardware stack levels used:    1
  5528 ;; Hardware stack levels required when called:    2
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_step
  5533 ;;		_atoi
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function ___wmul
  5539  0E5B                     ___wmul:	
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5543  0E5B  0020               	movlb	0	; select bank0
  5544  0E5C  01A0               	clrf	___wmul@product
  5545  0E5D  01A1               	clrf	___wmul@product+1
  5546  0E5E                     l2720:	
  5547  0E5E  1C73               	btfss	___wmul@multiplier,0
  5548  0E5F  2E65               	goto	l352
  5549  0E60  0875               	movf	___wmul@multiplicand,w
  5550  0E61  0020               	movlb	0	; select bank0
  5551  0E62  07A0               	addwf	___wmul@product,f
  5552  0E63  0876               	movf	___wmul@multiplicand+1,w
  5553  0E64  3DA1               	addwfc	___wmul@product+1,f
  5554  0E65                     l352:	
  5555  0E65  3001               	movlw	1
  5556  0E66                     u3775:	
  5557  0E66  35F5               	lslf	___wmul@multiplicand,f
  5558  0E67  0DF6               	rlf	___wmul@multiplicand+1,f
  5559  0E68  0B89               	decfsz	9,f
  5560  0E69  2E66               	goto	u3775
  5561  0E6A  3001               	movlw	1
  5562  0E6B                     u3785:	
  5563  0E6B  36F4               	lsrf	___wmul@multiplier+1,f
  5564  0E6C  0CF3               	rrf	___wmul@multiplier,f
  5565  0E6D  0B89               	decfsz	9,f
  5566  0E6E  2E6B               	goto	u3785
  5567  0E6F  0873               	movf	___wmul@multiplier,w
  5568  0E70  0474               	iorwf	___wmul@multiplier+1,w
  5569  0E71  1D03               	btfss	3,2
  5570  0E72  2E5E               	goto	l2720
  5571  0E73  0020               	movlb	0	; select bank0
  5572  0E74  0821               	movf	___wmul@product+1,w
  5573  0E75  00F4               	movwf	?___wmul+1
  5574  0E76  0820               	movf	___wmul@product,w
  5575  0E77  00F3               	movwf	?___wmul
  5576  0E78  0008               	return
  5577  0E79                     __end_of___wmul:	
  5578                           
  5579                           	psect	intentry
  5580  0004                     __pintentry:	
  5581 ;; *************** function _isr *****************
  5582 ;; Defined at:
  5583 ;;		line 4 in file "interrupt.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;		None               void
  5590 ;; Registers used:
  5591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5601 ;;Total ram usage:        1 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    1
  5604 ;; This function calls:
  5605 ;;		_receive_isr
  5606 ;; This function is called by:
  5607 ;;		Interrupt level 1
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611  0004                     _isr:	
  5612                           
  5613                           ;incstack = 0
  5614                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5615  0004  3180               	pagesel	$
  5616  0005  0020               	movlb	0	; select bank0
  5617  0006  087F               	movf	127,w
  5618  0007  00F2               	movwf	??_isr
  5619                           
  5620                           ;interrupt.c: 5: if(TMR0IF){
  5621  0008  190B               	btfsc	11,2	;volatile
  5622                           
  5623                           ;interrupt.c: 7: TMR0IF = 0;
  5624  0009  110B               	bcf	11,2	;volatile
  5625                           
  5626                           ;interrupt.c: 8: }
  5627                           ;interrupt.c: 9: if(RCIF){
  5628  000A  1E91               	btfss	17,5	;volatile
  5629  000B  2812               	goto	i1l13
  5630                           
  5631                           ;interrupt.c: 10: RA1=!RA1;
  5632  000C  3002               	movlw	2
  5633  000D  068C               	xorwf	12,f
  5634                           
  5635                           ;interrupt.c: 11: receive_isr();
  5636  000E  318E  2679         	fcall	_receive_isr
  5637                           
  5638                           ;interrupt.c: 12: RCIF = 0;
  5639  0010  0020               	movlb	0	; select bank0
  5640  0011  1291               	bcf	17,5	;volatile
  5641  0012                     i1l13:	
  5642  0012  0872               	movf	??_isr,w
  5643  0013  00FF               	movwf	127
  5644  0014  0009               	retfie
  5645  0015                     __end_of_isr:	
  5646                           
  5647                           	psect	text29
  5648  0E79                     __ptext29:	
  5649 ;; *************** function _receive_isr *****************
  5650 ;; Defined at:
  5651 ;;		line 125 in file "uart.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;		None
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;  temp            1    1[COMMON] unsigned char 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;		None               void
  5658 ;; Registers used:
  5659 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;Total ram usage:        2 bytes
  5670 ;; Hardware stack levels used:    1
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_isr
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _receive_isr
  5680  0E79                     _receive_isr:	
  5681                           
  5682                           ;uart.c: 126: uint8_t temp;
  5683                           ;uart.c: 127: temp=RCREG;
  5684                           
  5685                           ;incstack = 0
  5686                           ; Regs used in _receive_isr: [wreg+fsr1l+fsr1h+status,2+status,0]
  5687  0E79  0023               	movlb	3	; select bank3
  5688  0E7A  0819               	movf	25,w	;volatile
  5689  0E7B  00F0               	movwf	??_receive_isr
  5690  0E7C  0870               	movf	??_receive_isr,w
  5691  0E7D  00F1               	movwf	receive_isr@temp
  5692                           
  5693                           ;uart.c: 128: if (rx_used<32) {
  5694  0E7E  3020               	movlw	32
  5695  0E7F  0020               	movlb	0	; select bank0
  5696  0E80  0268               	subwf	_rx_used,w
  5697  0E81  1803               	skipnc
  5698  0E82  2E96               	goto	i1l2088
  5699                           
  5700                           ;uart.c: 129: rxbuf[rx_in]=temp;
  5701  0E83  0871               	movf	receive_isr@temp,w
  5702  0E84  00F0               	movwf	??_receive_isr
  5703  0E85  0878               	movf	_rx_in,w
  5704  0E86  3EC0               	addlw	(low (_rxbuf| (0+256)))& (0+255)
  5705  0E87  0086               	movwf	6
  5706  0E88  3001               	movlw	1	; select bank3/4
  5707  0E89  0087               	movwf	7
  5708  0E8A  0870               	movf	??_receive_isr,w
  5709  0E8B  0081               	movwf	1
  5710                           
  5711                           ;uart.c: 130: rx_in=(rx_in+1)%32;
  5712  0E8C  0878               	movf	_rx_in,w
  5713  0E8D  3E01               	addlw	1
  5714  0E8E  391F               	andlw	31
  5715  0E8F  00F0               	movwf	??_receive_isr
  5716  0E90  0870               	movf	??_receive_isr,w
  5717  0E91  00F8               	movwf	_rx_in
  5718                           
  5719                           ;uart.c: 131: rx_used++;
  5720  0E92  3001               	movlw	1
  5721  0E93  00F0               	movwf	??_receive_isr
  5722  0E94  0870               	movf	??_receive_isr,w
  5723  0E95  07E8               	addwf	_rx_used,f
  5724  0E96                     i1l2088:	
  5725                           
  5726                           ;uart.c: 132: }
  5727                           ;uart.c: 133: RCIF=0;
  5728  0E96  1291               	bcf	17,5	;volatile
  5729  0E97  0008               	return
  5730  0E98                     __end_of_receive_isr:	
  5731                           ;uart.c: 134: return;
  5732                           
  5733  007E                     btemp	set	126	;btemp
  5734  007E                     wtemp	set	126
  5735  007E                     wtemp0	set	126
  5736  0080                     wtemp1	set	128
  5737  0082                     wtemp2	set	130
  5738  0084                     wtemp3	set	132
  5739  0086                     wtemp4	set	134
  5740  0088                     wtemp5	set	136
  5741  007F                     wtemp6	set	127
  5742  007E                     ttemp	set	126
  5743  007E                     ttemp0	set	126
  5744  0081                     ttemp1	set	129
  5745  0084                     ttemp2	set	132
  5746  0087                     ttemp3	set	135
  5747  007F                     ttemp4	set	127
  5748  007E                     ltemp	set	126
  5749  007E                     ltemp0	set	126
  5750  0082                     ltemp1	set	130
  5751  0086                     ltemp2	set	134
  5752  0080                     ltemp3	set	128


Data Sizes:
    Strings     20
    Constant    3
    Data        64
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     70      76
    BANK1            80     68      68
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> main@tokens(CODE[3]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[6]), STR_1(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> ceil@expon(BANK0[2]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@val	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@title	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@it	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    main@argv	PTR unsigned char [4] size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    sp__uart_get	PTR const unsigned char  size(1) Largest target is 32
		 -> NULL(NULL[0]), rxbuf(BANK3[32]), 

    sp__uart_gets	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), NULL(NULL[0]), 

    uart_gets@mem	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), 

    uart_gets@it	PTR unsigned char  size(1) Largest target is 32
		 -> main@line(BANK1[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> rxbuf(BANK3[32]), 


Critical Paths under _main in COMMON

    _main->_strcmp
    _main->_strtok
    _uart_gets->_find
    _strspn->_strchr
    _strcspn->_strchr
    _uart_setup->_memset
    ___ftadd->___ftpack
    ___altoft->___ftpack
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    _atoi->___wmul

Critical Paths under _isr in COMMON

    _isr->_receive_isr

Critical Paths under _main in BANK0

    _main->_left
    _main->_right
    _uart_gets->_find
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _uart_setup->_memset
    _right->_step
    _left->_step
    _step->_ceil
    _ceil->___altoft
    ___fttol->___ftdiv
    ___ftadd->___ftpack
    ___altoft->___fttol
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _atoi->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_left
    _main->_right

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   34421
                                              6 BANK1     62    62      0
                               _atoi
                               _left
                              _right
                              _setup
                             _strcmp
                             _strlen
                             _strtok
                          _uart_gets
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_gets                                            9     7      2     723
                                              6 COMMON     1     1      0
                                              5 BANK0      8     6      2
                               _find
 ---------------------------------------------------------------------------------
 (2) _find                                                 8     6      2     235
                                              3 COMMON     3     1      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _strtok                                               6     4      2    1699
                                              7 COMMON     1     1      0
                                             10 BANK0      5     3      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     612
                                              3 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     612
                                              3 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               7     3      4     384
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _strlen                                               8     6      2     190
                                              3 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2     411
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     297
                         _uart_setup
 ---------------------------------------------------------------------------------
 (2) _uart_setup                                           0     0      0     297
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     297
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _right                                               13     9      4   14494
                                             63 BANK0      7     3      4
                                              0 BANK1      6     6      0
                               _step
 ---------------------------------------------------------------------------------
 (1) _left                                                13     9      4   14494
                                             63 BANK0      7     3      4
                                              0 BANK1      6     6      0
                               _step
 ---------------------------------------------------------------------------------
 (2) _step                                                 7     5      2   14070
                                             56 BANK0      7     5      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                               _ceil
 ---------------------------------------------------------------------------------
 (3) _ceil                                                 9     6      3    7760
                                             47 BANK0      9     6      3
                           ___altoft
                           ___awtoft (ARG)
                            ___ftadd
                            ___ftdiv (ARG)
                             ___ftge
                            ___fttol
                             ___wmul (ARG)
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     428
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     501
                                             25 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     548
                                              3 COMMON     3     3      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3513
                                              3 BANK0     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2337
                                             39 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2618
                                              9 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2266
                                              3 BANK0      6     3      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2068
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2    1128
                                              2 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     696
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  1     1      0      23
                                              2 COMMON     1     1      0
                        _receive_isr
 ---------------------------------------------------------------------------------
 (7) _receive_isr                                          2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atoi
     ___wmul
     _isdigit
   _left
     _step
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul
       _ceil
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
   _right
     _step
       ___awtoft
         ___ftpack
         ___wmul (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___wmul
       _ceil
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___wmul (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           ___wmul (ARG)
         ___ftadd (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge (ARG)
         ___fttol (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___wmul (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _frexp (ARG)
   _setup
     _uart_setup
       _memset
   _strcmp
   _strlen
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr
   _uart_gets
     _find
   _uart_send

 _isr (ROOT)
   _receive_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     44      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Aug 16 12:38:34 2018

           ___altoft@exp 004D              __CFG_CP$OFF 0000            ___altoft@sign 004E  
    ___wmul@multiplicand 0075             ___ftadd@exp1 002F             ___ftadd@exp2 002E  
           ___ftadd@sign 002D                      l242 0083                      l163 0E01  
                    l352 0E65                      l545 065C                      l546 0664  
                    l538 0649                      l653 050B                      l593 023C  
                    l819 0E25                      _GIE 005F                      _RA0 0060  
                    _RA1 0061                      _RB0 0068                      _RA2 0062  
                    _RB1 0069                      _RA3 0063                      _RB2 006A  
                    _RA4 0064                      _RC1 0071                      _RB3 006B  
                    _RA5 0065                      _RC2 0072             __CFG_CPD$OFF 0000  
                    _isr 0004             __CFG_BORV$HI 0000                      wreg 0009  
            main@address 00D6             __CFG_LVP$OFF 0000             ___ftdiv@cntr 0033  
           ___ftdiv@sign 0038                     l2052 0E14                     l3020 05B3  
                   l3012 070B                     l3004 06EA                     l3100 010B  
                   l3022 05AC                     l3014 070C                     l3110 0128  
                   l3040 05D9                     l3032 05CE                     l3024 05B8  
                   l3104 0117                     l3042 0600                     l3130 0180  
                   l3122 0170                     l2260 07F3                     l3116 014C  
                   l3108 0120                     l3038 05D5                     l2254 07D4  
                   l3048 0610                     l2504 065A                     l2600 024E  
                   l2256 07DC                     l2506 064E                     l3090 00DC  
                   l3082 00BC                     l3066 0086                     l2604 0260  
                   l2700 054F                     l2526 07AA                     l2614 027B  
                   l2622 0FDB                     l2720 0E5E                     l2528 07BA  
                   l2704 0557                     l2554 01C5                     l2626 0FF1  
                   l2538 0F9A                     l2714 05A2                     l2492 0624  
                   l2740 0EC2                     l2564 01DB                     l2644 04B7  
                   l2494 062F                     l2750 040C                     l2582 0208  
                   l2558 01CC                     l2670 0502                     l2662 04E7  
                   l2496 0634                     l2488 061D                     l2584 0212  
                   l2576 01F5                     l2672 050E                     l2664 04F5  
                   l2840 0F87                     l2770 0463                     l2594 022E  
                   l2586 0217                     l2756 0422                     l2596 0238  
                   l2588 021B                     l2676 051C                     l2860 0F3B  
                   l2844 0F8B                     l2836 0F82                     l2916 06B8  
                   l2686 0E45                     l2870 0F03                     l2944 0331  
                   l2952 02A6                     l2872 0F0C                     l2864 0F56  
                   l2928 06C3                     l2778 047C                     l2858 0F32  
                   l2980 0EDF                     l2876 0F27                     l2966 03E2  
                   l2974 0357                     l2982 0EEA                     l2990 06CE  
                   l2996 06D3                     ?_isr 0070                     STR_1 1013  
                   STR_2 1003                     STR_3 1003                     STR_4 100E  
                   STR_5 100E                     STR_6 1009                     u4030 02E1  
                   u3215 062A                     u4015 02C8                     u4120 032F  
                   u4104 0317                     u4025 02CF                     u4210 03AC  
                   u3235 0644                     u4115 031C                     u4060 02FB  
                   u4044 02E3                     u3325 07AF                     u4205 0399  
                   u3255 0655                     u4055 02E8                     u4240 03C6  
                   u4224 03AE                     u3505 021C                     u4305 036A  
                   u4090 0315                     u4074 02FD                     u4235 03B3  
                   u4155 02B9                     u4180 0392                     u3445 01F6  
                   u4165 0379                     u4085 0302                     u4270 03E0  
                   u4254 03C8                     u3295 066C                     u3535 022F  
                   u4175 0380                     u3625 04BE                     u4265 03CD  
                   u4505 0112                     u4194 0394                     u3475 0209  
                   _PEIE 005E                     i1l13 0012                     u3655 04E8  
                   u3835 0434                     u4555 018B                     _RCIE 048D  
                   _RCIF 008D                     u3845 0444                     u3685 0503  
                   u3775 0E66                     u3855 0464                     u4567 0335  
                   u4495 00FC                     u3785 0E6B                     u3865 0473  
                   u4577 03E6                     u3875 047D                     u3995 0694  
                   _PLLR 04D6                     _TXIE 048C                     _TXIF 008C  
           __CFG_WRT$OFF 0000                     _ceil 0525                     _find 0F5C  
                   _atoi 05AA                     _main 0036                     _left 0344  
           ___ftpack@arg 0073             ___ftpack@exp 0076                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     _step 070E  
                   btemp 007E                     ltemp 007E                     start 0015  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000             ___fttol@exp1 0046             ___fttol@lval 0042  
                  ??_isr 0072                    ?_ceil 004F                    ?_find 0073  
                  ?_atoi 0022                    ?_main 0070                    ?_left 005F  
        __end_of___ftadd 0293            __CFG_WDTE$OFF 0000          __end_of___ftdiv 049E  
                  ?_step 0058          __end_of___fttol 0525                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _TXREG 019A  
                  _TXSTA 019E             main@mode_sel 00DA           __CFG_FCMEN$OFF 0000  
          ___awtoft@sign 0028                    ceil@i 0053                    ceil@x 004F  
                  _frexp 0F8E                    _errno 0066          __end_of_isdigit 0E16  
                  _right 0293            ___ftpack@sign 0077                    atoi@a 0027  
                  _setup 0E16                    atoi@s 0029                    _rx_in 0078  
                  _rxbuf 01C0                    main@i 00DE                    _tx_in 0069  
                  _txbuf 01A0                    left@i 00A4                    left@k 00A2  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    step@a 005D  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __end_of_strcspn 0F2D             ?_receive_isr 0070  
        __initialization 0017             __end_of_ceil 05AA             __end_of_find 0F8E  
           __end_of_atoi 0615             __end_of_main 019D             __end_of_left 03F5  
     _step_pattern_right 0140             __end_of_step 0755                   ??_ceil 0052  
                 ??_find 0075                   ??_atoi 0024                   ??_main 00A6  
                 ??_left 0063            ___fttol@sign1 0041                   ??_step 0078  
         __CFG_PLLEN$OFF 0000                   ?_frexp 0073         __end_of___altoft 07D2  
                 ?_right 005F                   ?_setup 0070         __end_of___awtoft 0ED9  
                 _ANSELA 018C                   _ANSELB 018D         __end_of___ftpack 067C  
                 i1l2088 0E96                   _OSCCON 0099                   _TMR0IF 005A  
         __CFG_PWRTE$OFF 0000                   ___ftge 0FC4                   ___wmul 0E5B  
              ??___ftadd 0029           __CFG_STVREN$ON 0000                ??___ftdiv 002F  
              ??___fttol 003D                   _memset 0E3F                   find@it 0023  
                 _rx_out 0079                   main@it 00DB                   _strchr 0E25  
                 _strcmp 07D2                   _tx_out 007A                   _strlen 0ED9  
                 _strtok 06C5                   _strspn 0F2D                ??_isdigit 0073  
                 right@i 00A4                   right@k 00A2                ??_strcspn 0025  
__end_of__initialization 0033               ___altoft@c 0047               ___ftadd@f1 0023  
             ___ftadd@f2 0026               ___ftge@ff1 0020               ___ftge@ff2 0023  
             ___ftdiv@f1 002C               ___ftdiv@f2 0029               ___ftdiv@f3 0034  
             ___awtoft@c 0023               ___fttol@f1 0039           __pcstackCOMMON 0070  
           __pidataBANK2 0755            __end_of_frexp 0FC4            __end_of_right 0344  
          __end_of_setup 0E25                  ??_frexp 0020                  ??_right 0063  
                ??_setup 0078               __pbssBANK0 0066               __pbssBANK3 01A0  
        __CFG_VCAPEN$OFF 0000               __pmaintext 0036     __size_of_receive_isr 001F  
                ?___ftge 0020                  ?___wmul 0073               __pintentry 0004  
              ?___altoft 0047                  ?_memset 0073                ?___awtoft 0023  
              ?___ftpack 0073                  ?_strchr 0073                  ?_strcmp 0073  
                ?_strlen 0073                  ?_strtok 002A                  ?_strspn 0023  
     __size_of_uart_gets 0049       __size_of_uart_send 0008          __size_of___ftge 003C  
                ___ftadd 019D                  ___ftdiv 03F5          __size_of___wmul 001E  
                ___fttol 049E               ??___altoft 004B               ??___awtoft 0026  
             ??___ftpack 0020          __size_of_memset 001C                  __ptext1 0E00  
                __ptext2 067C                  __ptext3 0F5C                  __ptext4 06C5  
                __ptext5 0F2D                  __ptext6 0EFE                  __ptext7 0E25  
                __ptext8 0ED9                  __ptext9 07D2          __size_of_strchr 001A  
        __size_of_strcmp 0027          __size_of_strlen 0025          __size_of_strtok 0049  
        __size_of_strspn 002F                  _isdigit 0E08             __size_of_isr 0011  
                find@idx 0024                  _rx_used 0068                  main@len 00D8  
                clrloop0 07FA                  main@val 00E3                  _tx_used 006A  
                _strcspn 0EFE                  left@mal 005F     end_of_initialization 0033  
                init_ram 0DFA                  memset@c 0073                  memset@n 0075  
                memset@p 0021                  initloop 0DFB        __end_of_uart_gets 06C5  
      __end_of_uart_send 0E08                  step@deg 0058             __pstringtext 1000  
            uart_gets@it 0029                  strcmp@r 0076                  strlen@s 0075  
             _uart_setup 0E98                  strspn@i 0027         __CFG_FOSC$INTOSC 0000  
            ___ftdiv@exp 0037               main@tokens 1000           __end_of___ftge 1000  
         __end_of___wmul 0E79           __end_of_memset 0E5B           __end_of_strchr 0E3F  
         __end_of_strcmp 07F9           __end_of_strlen 0EFE           __end_of_strtok 070E  
         __end_of_strspn 0F5C      start_initialization 0017        _step_pattern_left 0120  
            __end_of_isr 0015               frexp@value 0073                 ??___ftge 0073  
               ??___wmul 0077              __pdataBANK2 0120          receive_isr@temp 0071  
               ??_memset 0077              ?_uart_setup 0070                 ??_strchr 0020  
               ??_strcmp 0075                 ??_strlen 0020                 ??_strtok 002C  
               ??_strspn 0025        __size_of___altoft 003D        __size_of___awtoft 0022  
      __size_of___ftpack 0067              __pbssCOMMON 0078                ___latbits 0003  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            ??_receive_isr 0070  
               ?___ftadd 0023                 ?___ftdiv 0029                 ?___fttol 0039  
             right@speed 0061               right@pluse 00A0                ceil@expon 0056  
               ?_isdigit 0070           __size_of_frexp 0036                 ?_strcspn 0023  
         __size_of_right 00B1           __size_of_setup 000F      __size_of_uart_setup 001F  
         ___wmul@product 0020                clear_ram0 07F9                _uart_gets 067C  
              _uart_send 0E00      __end_of_receive_isr 0E98        ___wmul@multiplier 0073  
              main@title 00E0                left@speed 0061                left@pluse 00A0  
              frexp@eptr 0076               ?_uart_gets 0025               ?_uart_send 0070  
       __size_of___ftadd 00F6         __size_of___ftdiv 00A9                 ___altoft 0795  
       __size_of___fttol 0087                 ___awtoft 0EB7                 ___ftpack 0615  
            _isdigit$439 0073         __size_of_isdigit 000E                 __ptext10 0E16  
               __ptext11 0E98                 __ptext20 019D                 __ptext12 0E3F  
               __ptext21 0795                 __ptext13 0293                 __ptext22 03F5  
               __ptext14 0344                 __ptext23 0EB7                 __ptext15 070E  
               __ptext24 0615                 __ptext16 0525                 __ptext25 05AA  
               __ptext17 0F8E                 __ptext26 0E08                 __ptext18 049E  
               __ptext27 0E5B                 __ptext19 0FC4                 __ptext29 0E79  
       __size_of_strcspn 002F            __size_of_ceil 0085            __size_of_find 0032  
          __size_of_atoi 006B            __size_of_main 0167            __size_of_left 00B1  
          __size_of_step 0047              _receive_isr 0E79                 _step$726 005A  
               find@tail 0020                 find@size 0021                 atoi@sign 0026  
               main@addr 00DC                 main@argc 00E1                 main@argv 00D2  
           ??_uart_setup 0078                 main@line 00B2                 isdigit@c 0074  
               memset@p1 0020                 intlevel1 0000                strchr@chr 0075  
          uart_gets@tail 0027                strchr@ptr 0073            uart_gets@size 0025  
               right@mal 005F        __CFG_CLKOUTEN$OFF 0000       __end_of_uart_setup 0EB7  
              strcspn@s1 0029                strcspn@s2 0023              ??_uart_gets 0076  
            ??_uart_send 0073            uart_send@data 0073             uart_gets@idx 002C  
           uart_gets@mem 0028                 strcmp@s1 0077                 strcmp@s2 0073  
           uart_gets@pos 002A                 strlen@cp 0076                 strcspn@i 0027  
               strtok@s1 0077                 strtok@s2 002A                 strspn@s1 0029  
               strspn@s2 0023                 strtok@sp 006B       __end_ofmain@tokens 1003  
